!function(t,e){"object"==typeof module&&"object"==typeof module.exports?module.exports=t.document?e(t,!0):function(t){if(!t.document)throw new Error("jQuery requires a window with a document");return e(t)}:e(t)}("undefined"!=typeof window?window:this,function(t,e){function i(t){var e=!!t&&"length"in t&&t.length,i=ot.type(t);return"function"===i||ot.isWindow(t)?!1:"array"===i||0===e||"number"==typeof e&&e>0&&e-1 in t}function n(t,e,i){if(ot.isFunction(e))return ot.grep(t,function(t,n){return!!e.call(t,n,t)!==i});if(e.nodeType)return ot.grep(t,function(t){return t===e!==i});if("string"==typeof e){if(gt.test(e))return ot.filter(e,t,i);e=ot.filter(e,t)}return ot.grep(t,function(t){return Z.call(e,t)>-1!==i})}function r(t,e){for(;(t=t[e])&&1!==t.nodeType;);return t}function o(t){var e={};return ot.each(t.match(kt)||[],function(t,i){e[i]=!0}),e}function a(){K.removeEventListener("DOMContentLoaded",a),t.removeEventListener("load",a),ot.ready()}function s(){this.expando=ot.expando+s.uid++}function l(t,e,i){var n;if(void 0===i&&1===t.nodeType)if(n="data-"+e.replace(Mt,"-$&").toLowerCase(),i=t.getAttribute(n),"string"==typeof i){try{i="true"===i?!0:"false"===i?!1:"null"===i?null:+i+""===i?+i:Pt.test(i)?ot.parseJSON(i):i}catch(r){}Dt.set(t,e,i)}else i=void 0;return i}function c(t,e,i,n){var r,o=1,a=20,s=n?function(){return n.cur()}:function(){return ot.css(t,e,"")},l=s(),c=i&&i[3]||(ot.cssNumber[e]?"":"px"),u=(ot.cssNumber[e]||"px"!==c&&+l)&&Tt.exec(ot.css(t,e));if(u&&u[3]!==c){c=c||u[3],i=i||[],u=+l||1;do o=o||".5",u/=o,ot.style(t,e,u+c);while(o!==(o=s()/l)&&1!==o&&--a)}return i&&(u=+u||+l||0,r=i[1]?u+(i[1]+1)*i[2]:+i[2],n&&(n.unit=c,n.start=u,n.end=r)),r}function u(t,e){var i="undefined"!=typeof t.getElementsByTagName?t.getElementsByTagName(e||"*"):"undefined"!=typeof t.querySelectorAll?t.querySelectorAll(e||"*"):[];return void 0===e||e&&ot.nodeName(t,e)?ot.merge([t],i):i}function h(t,e){for(var i=0,n=t.length;n>i;i++)Ct.set(t[i],"globalEval",!e||Ct.get(e[i],"globalEval"))}function d(t,e,i,n,r){for(var o,a,s,l,c,d,p=e.createDocumentFragment(),f=[],g=0,m=t.length;m>g;g++)if(o=t[g],o||0===o)if("object"===ot.type(o))ot.merge(f,o.nodeType?[o]:o);else if(Ht.test(o)){for(a=a||p.appendChild(e.createElement("div")),s=(Lt.exec(o)||["",""])[1].toLowerCase(),l=Et[s]||Et._default,a.innerHTML=l[1]+ot.htmlPrefilter(o)+l[2],d=l[0];d--;)a=a.lastChild;ot.merge(f,a.childNodes),a=p.firstChild,a.textContent=""}else f.push(e.createTextNode(o));for(p.textContent="",g=0;o=f[g++];)if(n&&ot.inArray(o,n)>-1)r&&r.push(o);else if(c=ot.contains(o.ownerDocument,o),a=u(p.appendChild(o),"script"),c&&h(a),i)for(d=0;o=a[d++];)Ot.test(o.type||"")&&i.push(o);return p}function p(){return!0}function f(){return!1}function g(){try{return K.activeElement}catch(t){}}function m(t,e,i,n,r,o){var a,s;if("object"==typeof e){"string"!=typeof i&&(n=n||i,i=void 0);for(s in e)m(t,s,i,n,e[s],o);return t}if(null==n&&null==r?(r=i,n=i=void 0):null==r&&("string"==typeof i?(r=n,n=void 0):(r=n,n=i,i=void 0)),r===!1)r=f;else if(!r)return t;return 1===o&&(a=r,r=function(t){return ot().off(t),a.apply(this,arguments)},r.guid=a.guid||(a.guid=ot.guid++)),t.each(function(){ot.event.add(this,e,r,n,i)})}function v(t,e){return ot.nodeName(t,"table")&&ot.nodeName(11!==e.nodeType?e:e.firstChild,"tr")?t.getElementsByTagName("tbody")[0]||t.appendChild(t.ownerDocument.createElement("tbody")):t}function y(t){return t.type=(null!==t.getAttribute("type"))+"/"+t.type,t}function b(t){var e=qt.exec(t.type);return e?t.type=e[1]:t.removeAttribute("type"),t}function x(t,e){var i,n,r,o,a,s,l,c;if(1===e.nodeType){if(Ct.hasData(t)&&(o=Ct.access(t),a=Ct.set(e,o),c=o.events)){delete a.handle,a.events={};for(r in c)for(i=0,n=c[r].length;n>i;i++)ot.event.add(e,r,c[r][i])}Dt.hasData(t)&&(s=Dt.access(t),l=ot.extend({},s),Dt.set(e,l))}}function k(t,e){var i=e.nodeName.toLowerCase();"input"===i&&Nt.test(t.type)?e.checked=t.checked:"input"!==i&&"textarea"!==i||(e.defaultValue=t.defaultValue)}function w(t,e,i,n){e=G.apply([],e);var r,o,a,s,l,c,h=0,p=t.length,f=p-1,g=e[0],m=ot.isFunction(g);if(m||p>1&&"string"==typeof g&&!nt.checkClone&&Vt.test(g))return t.each(function(r){var o=t.eq(r);m&&(e[0]=g.call(this,r,o.html())),w(o,e,i,n)});if(p&&(r=d(e,t[0].ownerDocument,!1,t,n),o=r.firstChild,1===r.childNodes.length&&(r=o),o||n)){for(a=ot.map(u(r,"script"),y),s=a.length;p>h;h++)l=r,h!==f&&(l=ot.clone(l,!0,!0),s&&ot.merge(a,u(l,"script"))),i.call(t[h],l,h);if(s)for(c=a[a.length-1].ownerDocument,ot.map(a,b),h=0;s>h;h++)l=a[h],Ot.test(l.type||"")&&!Ct.access(l,"globalEval")&&ot.contains(c,l)&&(l.src?ot._evalUrl&&ot._evalUrl(l.src):ot.globalEval(l.textContent.replace(Yt,"")))}return t}function _(t,e,i){for(var n,r=e?ot.filter(e,t):t,o=0;null!=(n=r[o]);o++)i||1!==n.nodeType||ot.cleanData(u(n)),n.parentNode&&(i&&ot.contains(n.ownerDocument,n)&&h(u(n,"script")),n.parentNode.removeChild(n));return t}function S(t,e){var i=ot(e.createElement(t)).appendTo(e.body),n=ot.css(i[0],"display");return i.detach(),n}function C(t){var e=K,i=Ut[t];return i||(i=S(t,e),"none"!==i&&i||($t=($t||ot("<iframe frameborder='0' width='0' height='0'/>")).appendTo(e.documentElement),e=$t[0].contentDocument,e.write(),e.close(),i=S(t,e),$t.detach()),Ut[t]=i),i}function D(t,e,i){var n,r,o,a,s=t.style;return i=i||Jt(t),a=i?i.getPropertyValue(e)||i[e]:void 0,""!==a&&void 0!==a||ot.contains(t.ownerDocument,t)||(a=ot.style(t,e)),i&&!nt.pixelMarginRight()&&Kt.test(a)&&Xt.test(e)&&(n=s.width,r=s.minWidth,o=s.maxWidth,s.minWidth=s.maxWidth=s.width=a,a=i.width,s.width=n,s.minWidth=r,s.maxWidth=o),void 0!==a?a+"":a}function P(t,e){return{get:function(){return t()?void delete this.get:(this.get=e).apply(this,arguments)}}}function M(t){if(t in ne)return t;for(var e=t[0].toUpperCase()+t.slice(1),i=ie.length;i--;)if(t=ie[i]+e,t in ne)return t}function I(t,e,i){var n=Tt.exec(e);return n?Math.max(0,n[2]-(i||0))+(n[3]||"px"):e}function T(t,e,i,n,r){for(var o=i===(n?"border":"content")?4:"width"===e?1:0,a=0;4>o;o+=2)"margin"===i&&(a+=ot.css(t,i+At[o],!0,r)),n?("content"===i&&(a-=ot.css(t,"padding"+At[o],!0,r)),"margin"!==i&&(a-=ot.css(t,"border"+At[o]+"Width",!0,r))):(a+=ot.css(t,"padding"+At[o],!0,r),"padding"!==i&&(a+=ot.css(t,"border"+At[o]+"Width",!0,r)));return a}function A(t,e,i){var n=!0,r="width"===e?t.offsetWidth:t.offsetHeight,o=Jt(t),a="border-box"===ot.css(t,"boxSizing",!1,o);if(0>=r||null==r){if(r=D(t,e,o),(0>r||null==r)&&(r=t.style[e]),Kt.test(r))return r;n=a&&(nt.boxSizingReliable()||r===t.style[e]),r=parseFloat(r)||0}return r+T(t,e,i||(a?"border":"content"),n,o)+"px"}function F(t,e){for(var i,n,r,o=[],a=0,s=t.length;s>a;a++)n=t[a],n.style&&(o[a]=Ct.get(n,"olddisplay"),i=n.style.display,e?(o[a]||"none"!==i||(n.style.display=""),""===n.style.display&&Ft(n)&&(o[a]=Ct.access(n,"olddisplay",C(n.nodeName)))):(r=Ft(n),"none"===i&&r||Ct.set(n,"olddisplay",r?i:ot.css(n,"display"))));for(a=0;s>a;a++)n=t[a],n.style&&(e&&"none"!==n.style.display&&""!==n.style.display||(n.style.display=e?o[a]||"":"none"));return t}function N(t,e,i,n,r){return new N.prototype.init(t,e,i,n,r)}function L(){return t.setTimeout(function(){re=void 0}),re=ot.now()}function O(t,e){var i,n=0,r={height:t};for(e=e?1:0;4>n;n+=2-e)i=At[n],r["margin"+i]=r["padding"+i]=t;return e&&(r.opacity=r.width=t),r}function E(t,e,i){for(var n,r=(B.tweeners[e]||[]).concat(B.tweeners["*"]),o=0,a=r.length;a>o;o++)if(n=r[o].call(i,e,t))return n}function H(t,e,i){var n,r,o,a,s,l,c,u,h=this,d={},p=t.style,f=t.nodeType&&Ft(t),g=Ct.get(t,"fxshow");i.queue||(s=ot._queueHooks(t,"fx"),null==s.unqueued&&(s.unqueued=0,l=s.empty.fire,s.empty.fire=function(){s.unqueued||l()}),s.unqueued++,h.always(function(){h.always(function(){s.unqueued--,ot.queue(t,"fx").length||s.empty.fire()})})),1===t.nodeType&&("height"in e||"width"in e)&&(i.overflow=[p.overflow,p.overflowX,p.overflowY],c=ot.css(t,"display"),u="none"===c?Ct.get(t,"olddisplay")||C(t.nodeName):c,"inline"===u&&"none"===ot.css(t,"float")&&(p.display="inline-block")),i.overflow&&(p.overflow="hidden",h.always(function(){p.overflow=i.overflow[0],p.overflowX=i.overflow[1],p.overflowY=i.overflow[2]}));for(n in e)if(r=e[n],ae.exec(r)){if(delete e[n],o=o||"toggle"===r,r===(f?"hide":"show")){if("show"!==r||!g||void 0===g[n])continue;f=!0}d[n]=g&&g[n]||ot.style(t,n)}else c=void 0;if(ot.isEmptyObject(d))"inline"===("none"===c?C(t.nodeName):c)&&(p.display=c);else{g?"hidden"in g&&(f=g.hidden):g=Ct.access(t,"fxshow",{}),o&&(g.hidden=!f),f?ot(t).show():h.done(function(){ot(t).hide()}),h.done(function(){var e;Ct.remove(t,"fxshow");for(e in d)ot.style(t,e,d[e])});for(n in d)a=E(f?g[n]:0,n,h),n in g||(g[n]=a.start,f&&(a.end=a.start,a.start="width"===n||"height"===n?1:0))}}function R(t,e){var i,n,r,o,a;for(i in t)if(n=ot.camelCase(i),r=e[n],o=t[i],ot.isArray(o)&&(r=o[1],o=t[i]=o[0]),i!==n&&(t[n]=o,delete t[i]),a=ot.cssHooks[n],a&&"expand"in a){o=a.expand(o),delete t[n];for(i in o)i in t||(t[i]=o[i],e[i]=r)}else e[n]=r}function B(t,e,i){var n,r,o=0,a=B.prefilters.length,s=ot.Deferred().always(function(){delete l.elem}),l=function(){if(r)return!1;for(var e=re||L(),i=Math.max(0,c.startTime+c.duration-e),n=i/c.duration||0,o=1-n,a=0,l=c.tweens.length;l>a;a++)c.tweens[a].run(o);return s.notifyWith(t,[c,o,i]),1>o&&l?i:(s.resolveWith(t,[c]),!1)},c=s.promise({elem:t,props:ot.extend({},e),opts:ot.extend(!0,{specialEasing:{},easing:ot.easing._default},i),originalProperties:e,originalOptions:i,startTime:re||L(),duration:i.duration,tweens:[],createTween:function(e,i){var n=ot.Tween(t,c.opts,e,i,c.opts.specialEasing[e]||c.opts.easing);return c.tweens.push(n),n},stop:function(e){var i=0,n=e?c.tweens.length:0;if(r)return this;for(r=!0;n>i;i++)c.tweens[i].run(1);return e?(s.notifyWith(t,[c,1,0]),s.resolveWith(t,[c,e])):s.rejectWith(t,[c,e]),this}}),u=c.props;for(R(u,c.opts.specialEasing);a>o;o++)if(n=B.prefilters[o].call(c,t,u,c.opts))return ot.isFunction(n.stop)&&(ot._queueHooks(c.elem,c.opts.queue).stop=ot.proxy(n.stop,n)),n;return ot.map(u,E,c),ot.isFunction(c.opts.start)&&c.opts.start.call(t,c),ot.fx.timer(ot.extend(l,{elem:t,anim:c,queue:c.opts.queue})),c.progress(c.opts.progress).done(c.opts.done,c.opts.complete).fail(c.opts.fail).always(c.opts.always)}function W(t){return t.getAttribute&&t.getAttribute("class")||""}function j(t){return function(e,i){"string"!=typeof e&&(i=e,e="*");var n,r=0,o=e.toLowerCase().match(kt)||[];if(ot.isFunction(i))for(;n=o[r++];)"+"===n[0]?(n=n.slice(1)||"*",(t[n]=t[n]||[]).unshift(i)):(t[n]=t[n]||[]).push(i)}}function z(t,e,i,n){function r(s){var l;return o[s]=!0,ot.each(t[s]||[],function(t,s){var c=s(e,i,n);return"string"!=typeof c||a||o[c]?a?!(l=c):void 0:(e.dataTypes.unshift(c),r(c),!1)}),l}var o={},a=t===De;return r(e.dataTypes[0])||!o["*"]&&r("*")}function V(t,e){var i,n,r=ot.ajaxSettings.flatOptions||{};for(i in e)void 0!==e[i]&&((r[i]?t:n||(n={}))[i]=e[i]);return n&&ot.extend(!0,t,n),t}function q(t,e,i){for(var n,r,o,a,s=t.contents,l=t.dataTypes;"*"===l[0];)l.shift(),void 0===n&&(n=t.mimeType||e.getResponseHeader("Content-Type"));if(n)for(r in s)if(s[r]&&s[r].test(n)){l.unshift(r);break}if(l[0]in i)o=l[0];else{for(r in i){if(!l[0]||t.converters[r+" "+l[0]]){o=r;break}a||(a=r)}o=o||a}return o?(o!==l[0]&&l.unshift(o),i[o]):void 0}function Y(t,e,i,n){var r,o,a,s,l,c={},u=t.dataTypes.slice();if(u[1])for(a in t.converters)c[a.toLowerCase()]=t.converters[a];for(o=u.shift();o;)if(t.responseFields[o]&&(i[t.responseFields[o]]=e),!l&&n&&t.dataFilter&&(e=t.dataFilter(e,t.dataType)),l=o,o=u.shift())if("*"===o)o=l;else if("*"!==l&&l!==o){if(a=c[l+" "+o]||c["* "+o],!a)for(r in c)if(s=r.split(" "),s[1]===o&&(a=c[l+" "+s[0]]||c["* "+s[0]])){a===!0?a=c[r]:c[r]!==!0&&(o=s[0],u.unshift(s[1]));break}if(a!==!0)if(a&&t["throws"])e=a(e);else try{e=a(e)}catch(h){return{state:"parsererror",error:a?h:"No conversion from "+l+" to "+o}}}return{state:"success",data:e}}function $(t,e,i,n){var r;if(ot.isArray(e))ot.each(e,function(e,r){i||Te.test(t)?n(t,r):$(t+"["+("object"==typeof r&&null!=r?e:"")+"]",r,i,n)});else if(i||"object"!==ot.type(e))n(t,e);else for(r in e)$(t+"["+r+"]",e[r],i,n)}function U(t){return ot.isWindow(t)?t:9===t.nodeType&&t.defaultView}var X=[],K=t.document,J=X.slice,G=X.concat,Q=X.push,Z=X.indexOf,tt={},et=tt.toString,it=tt.hasOwnProperty,nt={},rt="2.2.4",ot=function(t,e){return new ot.fn.init(t,e)},at=/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,st=/^-ms-/,lt=/-([\da-z])/gi,ct=function(t,e){return e.toUpperCase()};ot.fn=ot.prototype={jquery:rt,constructor:ot,selector:"",length:0,toArray:function(){return J.call(this)},get:function(t){return null!=t?0>t?this[t+this.length]:this[t]:J.call(this)},pushStack:function(t){var e=ot.merge(this.constructor(),t);return e.prevObject=this,e.context=this.context,e},each:function(t){return ot.each(this,t)},map:function(t){return this.pushStack(ot.map(this,function(e,i){return t.call(e,i,e)}))},slice:function(){return this.pushStack(J.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},eq:function(t){var e=this.length,i=+t+(0>t?e:0);return this.pushStack(i>=0&&e>i?[this[i]]:[])},end:function(){return this.prevObject||this.constructor()},push:Q,sort:X.sort,splice:X.splice},ot.extend=ot.fn.extend=function(){var t,e,i,n,r,o,a=arguments[0]||{},s=1,l=arguments.length,c=!1;for("boolean"==typeof a&&(c=a,a=arguments[s]||{},s++),"object"==typeof a||ot.isFunction(a)||(a={}),s===l&&(a=this,s--);l>s;s++)if(null!=(t=arguments[s]))for(e in t)i=a[e],n=t[e],a!==n&&(c&&n&&(ot.isPlainObject(n)||(r=ot.isArray(n)))?(r?(r=!1,o=i&&ot.isArray(i)?i:[]):o=i&&ot.isPlainObject(i)?i:{},a[e]=ot.extend(c,o,n)):void 0!==n&&(a[e]=n));return a},ot.extend({expando:"jQuery"+(rt+Math.random()).replace(/\D/g,""),isReady:!0,error:function(t){throw new Error(t)},noop:function(){},isFunction:function(t){return"function"===ot.type(t)},isArray:Array.isArray,isWindow:function(t){return null!=t&&t===t.window},isNumeric:function(t){var e=t&&t.toString();return!ot.isArray(t)&&e-parseFloat(e)+1>=0},isPlainObject:function(t){var e;if("object"!==ot.type(t)||t.nodeType||ot.isWindow(t))return!1;if(t.constructor&&!it.call(t,"constructor")&&!it.call(t.constructor.prototype||{},"isPrototypeOf"))return!1;for(e in t);return void 0===e||it.call(t,e)},isEmptyObject:function(t){var e;for(e in t)return!1;return!0},type:function(t){return null==t?t+"":"object"==typeof t||"function"==typeof t?tt[et.call(t)]||"object":typeof t},globalEval:function(t){var e,i=eval;t=ot.trim(t),t&&(1===t.indexOf("use strict")?(e=K.createElement("script"),e.text=t,K.head.appendChild(e).parentNode.removeChild(e)):i(t))},camelCase:function(t){return t.replace(st,"ms-").replace(lt,ct)},nodeName:function(t,e){return t.nodeName&&t.nodeName.toLowerCase()===e.toLowerCase()},each:function(t,e){var n,r=0;if(i(t))for(n=t.length;n>r&&e.call(t[r],r,t[r])!==!1;r++);else for(r in t)if(e.call(t[r],r,t[r])===!1)break;return t},trim:function(t){return null==t?"":(t+"").replace(at,"")},makeArray:function(t,e){var n=e||[];return null!=t&&(i(Object(t))?ot.merge(n,"string"==typeof t?[t]:t):Q.call(n,t)),n},inArray:function(t,e,i){return null==e?-1:Z.call(e,t,i)},merge:function(t,e){for(var i=+e.length,n=0,r=t.length;i>n;n++)t[r++]=e[n];return t.length=r,t},grep:function(t,e,i){for(var n,r=[],o=0,a=t.length,s=!i;a>o;o++)n=!e(t[o],o),n!==s&&r.push(t[o]);return r},map:function(t,e,n){var r,o,a=0,s=[];if(i(t))for(r=t.length;r>a;a++)o=e(t[a],a,n),null!=o&&s.push(o);else for(a in t)o=e(t[a],a,n),null!=o&&s.push(o);return G.apply([],s)},guid:1,proxy:function(t,e){var i,n,r;return"string"==typeof e&&(i=t[e],e=t,t=i),ot.isFunction(t)?(n=J.call(arguments,2),r=function(){return t.apply(e||this,n.concat(J.call(arguments)))},r.guid=t.guid=t.guid||ot.guid++,r):void 0},now:Date.now,support:nt}),"function"==typeof Symbol&&(ot.fn[Symbol.iterator]=X[Symbol.iterator]),ot.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "),function(t,e){tt["[object "+e+"]"]=e.toLowerCase()});var ut=function(t){function e(t,e,i,n){var r,o,a,s,l,c,h,p,f=e&&e.ownerDocument,g=e?e.nodeType:9;if(i=i||[],"string"!=typeof t||!t||1!==g&&9!==g&&11!==g)return i;if(!n&&((e?e.ownerDocument||e:W)!==F&&A(e),e=e||F,L)){if(11!==g&&(c=vt.exec(t)))if(r=c[1]){if(9===g){if(!(a=e.getElementById(r)))return i;if(a.id===r)return i.push(a),i}else if(f&&(a=f.getElementById(r))&&R(e,a)&&a.id===r)return i.push(a),i}else{if(c[2])return Q.apply(i,e.getElementsByTagName(t)),i;if((r=c[3])&&k.getElementsByClassName&&e.getElementsByClassName)return Q.apply(i,e.getElementsByClassName(r)),i}if(k.qsa&&!Y[t+" "]&&(!O||!O.test(t))){if(1!==g)f=e,p=t;else if("object"!==e.nodeName.toLowerCase()){for((s=e.getAttribute("id"))?s=s.replace(bt,"\\$&"):e.setAttribute("id",s=B),h=C(t),o=h.length,l=dt.test(s)?"#"+s:"[id='"+s+"']";o--;)h[o]=l+" "+d(h[o]);p=h.join(","),f=yt.test(t)&&u(e.parentNode)||e}if(p)try{return Q.apply(i,f.querySelectorAll(p)),i}catch(m){}finally{s===B&&e.removeAttribute("id")}}}return P(t.replace(st,"$1"),e,i,n)}function i(){function t(i,n){return e.push(i+" ")>w.cacheLength&&delete t[e.shift()],t[i+" "]=n}var e=[];return t}function n(t){return t[B]=!0,t}function r(t){var e=F.createElement("div");try{return!!t(e)}catch(i){return!1}finally{e.parentNode&&e.parentNode.removeChild(e),e=null}}function o(t,e){for(var i=t.split("|"),n=i.length;n--;)w.attrHandle[i[n]]=e}function a(t,e){var i=e&&t,n=i&&1===t.nodeType&&1===e.nodeType&&(~e.sourceIndex||U)-(~t.sourceIndex||U);if(n)return n;if(i)for(;i=i.nextSibling;)if(i===e)return-1;return t?1:-1}function s(t){return function(e){var i=e.nodeName.toLowerCase();return"input"===i&&e.type===t}}function l(t){return function(e){var i=e.nodeName.toLowerCase();return("input"===i||"button"===i)&&e.type===t}}function c(t){return n(function(e){return e=+e,n(function(i,n){for(var r,o=t([],i.length,e),a=o.length;a--;)i[r=o[a]]&&(i[r]=!(n[r]=i[r]))})})}function u(t){return t&&"undefined"!=typeof t.getElementsByTagName&&t}function h(){}function d(t){for(var e=0,i=t.length,n="";i>e;e++)n+=t[e].value;return n}function p(t,e,i){var n=e.dir,r=i&&"parentNode"===n,o=z++;return e.first?function(e,i,o){for(;e=e[n];)if(1===e.nodeType||r)return t(e,i,o)}:function(e,i,a){var s,l,c,u=[j,o];if(a){for(;e=e[n];)if((1===e.nodeType||r)&&t(e,i,a))return!0}else for(;e=e[n];)if(1===e.nodeType||r){if(c=e[B]||(e[B]={}),l=c[e.uniqueID]||(c[e.uniqueID]={}),(s=l[n])&&s[0]===j&&s[1]===o)return u[2]=s[2];if(l[n]=u,u[2]=t(e,i,a))return!0}}}function f(t){return t.length>1?function(e,i,n){for(var r=t.length;r--;)if(!t[r](e,i,n))return!1;return!0}:t[0]}function g(t,i,n){for(var r=0,o=i.length;o>r;r++)e(t,i[r],n);return n}function m(t,e,i,n,r){for(var o,a=[],s=0,l=t.length,c=null!=e;l>s;s++)(o=t[s])&&(i&&!i(o,n,r)||(a.push(o),c&&e.push(s)));return a}function v(t,e,i,r,o,a){return r&&!r[B]&&(r=v(r)),o&&!o[B]&&(o=v(o,a)),n(function(n,a,s,l){var c,u,h,d=[],p=[],f=a.length,v=n||g(e||"*",s.nodeType?[s]:s,[]),y=!t||!n&&e?v:m(v,d,t,s,l),b=i?o||(n?t:f||r)?[]:a:y;if(i&&i(y,b,s,l),r)for(c=m(b,p),r(c,[],s,l),u=c.length;u--;)(h=c[u])&&(b[p[u]]=!(y[p[u]]=h));if(n){if(o||t){if(o){for(c=[],u=b.length;u--;)(h=b[u])&&c.push(y[u]=h);o(null,b=[],c,l)}for(u=b.length;u--;)(h=b[u])&&(c=o?tt(n,h):d[u])>-1&&(n[c]=!(a[c]=h))}}else b=m(b===a?b.splice(f,b.length):b),o?o(null,a,b,l):Q.apply(a,b)})}function y(t){for(var e,i,n,r=t.length,o=w.relative[t[0].type],a=o||w.relative[" "],s=o?1:0,l=p(function(t){return t===e},a,!0),c=p(function(t){return tt(e,t)>-1},a,!0),u=[function(t,i,n){var r=!o&&(n||i!==M)||((e=i).nodeType?l(t,i,n):c(t,i,n));return e=null,r}];r>s;s++)if(i=w.relative[t[s].type])u=[p(f(u),i)];else{if(i=w.filter[t[s].type].apply(null,t[s].matches),i[B]){for(n=++s;r>n&&!w.relative[t[n].type];n++);return v(s>1&&f(u),s>1&&d(t.slice(0,s-1).concat({value:" "===t[s-2].type?"*":""})).replace(st,"$1"),i,n>s&&y(t.slice(s,n)),r>n&&y(t=t.slice(n)),r>n&&d(t))}u.push(i)}return f(u)}function b(t,i){var r=i.length>0,o=t.length>0,a=function(n,a,s,l,c){var u,h,d,p=0,f="0",g=n&&[],v=[],y=M,b=n||o&&w.find.TAG("*",c),x=j+=null==y?1:Math.random()||.1,k=b.length;for(c&&(M=a===F||a||c);f!==k&&null!=(u=b[f]);f++){if(o&&u){for(h=0,a||u.ownerDocument===F||(A(u),s=!L);d=t[h++];)if(d(u,a||F,s)){l.push(u);break}c&&(j=x)}r&&((u=!d&&u)&&p--,n&&g.push(u))}if(p+=f,r&&f!==p){for(h=0;d=i[h++];)d(g,v,a,s);if(n){if(p>0)for(;f--;)g[f]||v[f]||(v[f]=J.call(l));v=m(v)}Q.apply(l,v),c&&!n&&v.length>0&&p+i.length>1&&e.uniqueSort(l)}return c&&(j=x,M=y),g};return r?n(a):a}var x,k,w,_,S,C,D,P,M,I,T,A,F,N,L,O,E,H,R,B="sizzle"+1*new Date,W=t.document,j=0,z=0,V=i(),q=i(),Y=i(),$=function(t,e){return t===e&&(T=!0),0},U=1<<31,X={}.hasOwnProperty,K=[],J=K.pop,G=K.push,Q=K.push,Z=K.slice,tt=function(t,e){for(var i=0,n=t.length;n>i;i++)if(t[i]===e)return i;return-1},et="checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",it="[\\x20\\t\\r\\n\\f]",nt="(?:\\\\.|[\\w-]|[^\\x00-\\xa0])+",rt="\\["+it+"*("+nt+")(?:"+it+"*([*^$|!~]?=)"+it+"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|("+nt+"))|)"+it+"*\\]",ot=":("+nt+")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|"+rt+")*)|.*)\\)|)",at=new RegExp(it+"+","g"),st=new RegExp("^"+it+"+|((?:^|[^\\\\])(?:\\\\.)*)"+it+"+$","g"),lt=new RegExp("^"+it+"*,"+it+"*"),ct=new RegExp("^"+it+"*([>+~]|"+it+")"+it+"*"),ut=new RegExp("="+it+"*([^\\]'\"]*?)"+it+"*\\]","g"),ht=new RegExp(ot),dt=new RegExp("^"+nt+"$"),pt={ID:new RegExp("^#("+nt+")"),CLASS:new RegExp("^\\.("+nt+")"),TAG:new RegExp("^("+nt+"|[*])"),ATTR:new RegExp("^"+rt),PSEUDO:new RegExp("^"+ot),CHILD:new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\("+it+"*(even|odd|(([+-]|)(\\d*)n|)"+it+"*(?:([+-]|)"+it+"*(\\d+)|))"+it+"*\\)|)","i"),bool:new RegExp("^(?:"+et+")$","i"),needsContext:new RegExp("^"+it+"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\("+it+"*((?:-\\d)?\\d*)"+it+"*\\)|)(?=[^-]|$)","i")},ft=/^(?:input|select|textarea|button)$/i,gt=/^h\d$/i,mt=/^[^{]+\{\s*\[native \w/,vt=/^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,yt=/[+~]/,bt=/'|\\/g,xt=new RegExp("\\\\([\\da-f]{1,6}"+it+"?|("+it+")|.)","ig"),kt=function(t,e,i){var n="0x"+e-65536;return n!==n||i?e:0>n?String.fromCharCode(n+65536):String.fromCharCode(n>>10|55296,1023&n|56320)},wt=function(){A()};try{Q.apply(K=Z.call(W.childNodes),W.childNodes),K[W.childNodes.length].nodeType}catch(_t){Q={apply:K.length?function(t,e){G.apply(t,Z.call(e))}:function(t,e){for(var i=t.length,n=0;t[i++]=e[n++];);t.length=i-1}}}k=e.support={},S=e.isXML=function(t){var e=t&&(t.ownerDocument||t).documentElement;return e?"HTML"!==e.nodeName:!1},A=e.setDocument=function(t){var e,i,n=t?t.ownerDocument||t:W;return n!==F&&9===n.nodeType&&n.documentElement?(F=n,N=F.documentElement,L=!S(F),(i=F.defaultView)&&i.top!==i&&(i.addEventListener?i.addEventListener("unload",wt,!1):i.attachEvent&&i.attachEvent("onunload",wt)),k.attributes=r(function(t){return t.className="i",!t.getAttribute("className")}),k.getElementsByTagName=r(function(t){return t.appendChild(F.createComment("")),!t.getElementsByTagName("*").length}),k.getElementsByClassName=mt.test(F.getElementsByClassName),k.getById=r(function(t){return N.appendChild(t).id=B,!F.getElementsByName||!F.getElementsByName(B).length}),k.getById?(w.find.ID=function(t,e){if("undefined"!=typeof e.getElementById&&L){var i=e.getElementById(t);return i?[i]:[]}},w.filter.ID=function(t){var e=t.replace(xt,kt);return function(t){return t.getAttribute("id")===e}}):(delete w.find.ID,w.filter.ID=function(t){var e=t.replace(xt,kt);return function(t){var i="undefined"!=typeof t.getAttributeNode&&t.getAttributeNode("id");return i&&i.value===e}}),w.find.TAG=k.getElementsByTagName?function(t,e){return"undefined"!=typeof e.getElementsByTagName?e.getElementsByTagName(t):k.qsa?e.querySelectorAll(t):void 0}:function(t,e){var i,n=[],r=0,o=e.getElementsByTagName(t);if("*"===t){for(;i=o[r++];)1===i.nodeType&&n.push(i);return n}return o},w.find.CLASS=k.getElementsByClassName&&function(t,e){return"undefined"!=typeof e.getElementsByClassName&&L?e.getElementsByClassName(t):void 0},E=[],O=[],(k.qsa=mt.test(F.querySelectorAll))&&(r(function(t){N.appendChild(t).innerHTML="<a id='"+B+"'></a><select id='"+B+"-\r\\' msallowcapture=''><option selected=''></option></select>",t.querySelectorAll("[msallowcapture^='']").length&&O.push("[*^$]="+it+"*(?:''|\"\")"),t.querySelectorAll("[selected]").length||O.push("\\["+it+"*(?:value|"+et+")"),t.querySelectorAll("[id~="+B+"-]").length||O.push("~="),t.querySelectorAll(":checked").length||O.push(":checked"),t.querySelectorAll("a#"+B+"+*").length||O.push(".#.+[+~]")}),r(function(t){var e=F.createElement("input");e.setAttribute("type","hidden"),t.appendChild(e).setAttribute("name","D"),t.querySelectorAll("[name=d]").length&&O.push("name"+it+"*[*^$|!~]?="),t.querySelectorAll(":enabled").length||O.push(":enabled",":disabled"),t.querySelectorAll("*,:x"),O.push(",.*:")})),(k.matchesSelector=mt.test(H=N.matches||N.webkitMatchesSelector||N.mozMatchesSelector||N.oMatchesSelector||N.msMatchesSelector))&&r(function(t){k.disconnectedMatch=H.call(t,"div"),H.call(t,"[s!='']:x"),E.push("!=",ot)}),O=O.length&&new RegExp(O.join("|")),E=E.length&&new RegExp(E.join("|")),e=mt.test(N.compareDocumentPosition),R=e||mt.test(N.contains)?function(t,e){var i=9===t.nodeType?t.documentElement:t,n=e&&e.parentNode;return t===n||!(!n||1!==n.nodeType||!(i.contains?i.contains(n):t.compareDocumentPosition&&16&t.compareDocumentPosition(n)))}:function(t,e){if(e)for(;e=e.parentNode;)if(e===t)return!0;return!1},$=e?function(t,e){if(t===e)return T=!0,0;var i=!t.compareDocumentPosition-!e.compareDocumentPosition;return i?i:(i=(t.ownerDocument||t)===(e.ownerDocument||e)?t.compareDocumentPosition(e):1,1&i||!k.sortDetached&&e.compareDocumentPosition(t)===i?t===F||t.ownerDocument===W&&R(W,t)?-1:e===F||e.ownerDocument===W&&R(W,e)?1:I?tt(I,t)-tt(I,e):0:4&i?-1:1)}:function(t,e){if(t===e)return T=!0,0;var i,n=0,r=t.parentNode,o=e.parentNode,s=[t],l=[e];if(!r||!o)return t===F?-1:e===F?1:r?-1:o?1:I?tt(I,t)-tt(I,e):0;if(r===o)return a(t,e);for(i=t;i=i.parentNode;)s.unshift(i);for(i=e;i=i.parentNode;)l.unshift(i);for(;s[n]===l[n];)n++;return n?a(s[n],l[n]):s[n]===W?-1:l[n]===W?1:0},F):F},e.matches=function(t,i){return e(t,null,null,i)},e.matchesSelector=function(t,i){if((t.ownerDocument||t)!==F&&A(t),i=i.replace(ut,"='$1']"),k.matchesSelector&&L&&!Y[i+" "]&&(!E||!E.test(i))&&(!O||!O.test(i)))try{var n=H.call(t,i);if(n||k.disconnectedMatch||t.document&&11!==t.document.nodeType)return n}catch(r){}return e(i,F,null,[t]).length>0},e.contains=function(t,e){return(t.ownerDocument||t)!==F&&A(t),R(t,e)},e.attr=function(t,e){(t.ownerDocument||t)!==F&&A(t);var i=w.attrHandle[e.toLowerCase()],n=i&&X.call(w.attrHandle,e.toLowerCase())?i(t,e,!L):void 0;return void 0!==n?n:k.attributes||!L?t.getAttribute(e):(n=t.getAttributeNode(e))&&n.specified?n.value:null},e.error=function(t){throw new Error("Syntax error, unrecognized expression: "+t)},e.uniqueSort=function(t){var e,i=[],n=0,r=0;if(T=!k.detectDuplicates,I=!k.sortStable&&t.slice(0),t.sort($),T){for(;e=t[r++];)e===t[r]&&(n=i.push(r));for(;n--;)t.splice(i[n],1)}return I=null,t},_=e.getText=function(t){var e,i="",n=0,r=t.nodeType;if(r){if(1===r||9===r||11===r){if("string"==typeof t.textContent)return t.textContent;for(t=t.firstChild;t;t=t.nextSibling)i+=_(t)}else if(3===r||4===r)return t.nodeValue}else for(;e=t[n++];)i+=_(e);return i},w=e.selectors={cacheLength:50,createPseudo:n,match:pt,attrHandle:{},find:{},relative:{">":{dir:"parentNode",first:!0}," ":{dir:"parentNode"},"+":{dir:"previousSibling",first:!0},"~":{dir:"previousSibling"}},preFilter:{ATTR:function(t){return t[1]=t[1].replace(xt,kt),t[3]=(t[3]||t[4]||t[5]||"").replace(xt,kt),"~="===t[2]&&(t[3]=" "+t[3]+" "),t.slice(0,4)},CHILD:function(t){return t[1]=t[1].toLowerCase(),"nth"===t[1].slice(0,3)?(t[3]||e.error(t[0]),t[4]=+(t[4]?t[5]+(t[6]||1):2*("even"===t[3]||"odd"===t[3])),t[5]=+(t[7]+t[8]||"odd"===t[3])):t[3]&&e.error(t[0]),t},PSEUDO:function(t){var e,i=!t[6]&&t[2];return pt.CHILD.test(t[0])?null:(t[3]?t[2]=t[4]||t[5]||"":i&&ht.test(i)&&(e=C(i,!0))&&(e=i.indexOf(")",i.length-e)-i.length)&&(t[0]=t[0].slice(0,e),t[2]=i.slice(0,e)),t.slice(0,3))}},filter:{TAG:function(t){var e=t.replace(xt,kt).toLowerCase();return"*"===t?function(){return!0}:function(t){return t.nodeName&&t.nodeName.toLowerCase()===e}},CLASS:function(t){var e=V[t+" "];return e||(e=new RegExp("(^|"+it+")"+t+"("+it+"|$)"))&&V(t,function(t){return e.test("string"==typeof t.className&&t.className||"undefined"!=typeof t.getAttribute&&t.getAttribute("class")||"")})},ATTR:function(t,i,n){return function(r){var o=e.attr(r,t);return null==o?"!="===i:i?(o+="","="===i?o===n:"!="===i?o!==n:"^="===i?n&&0===o.indexOf(n):"*="===i?n&&o.indexOf(n)>-1:"$="===i?n&&o.slice(-n.length)===n:"~="===i?(" "+o.replace(at," ")+" ").indexOf(n)>-1:"|="===i?o===n||o.slice(0,n.length+1)===n+"-":!1):!0}},CHILD:function(t,e,i,n,r){var o="nth"!==t.slice(0,3),a="last"!==t.slice(-4),s="of-type"===e;return 1===n&&0===r?function(t){return!!t.parentNode}:function(e,i,l){var c,u,h,d,p,f,g=o!==a?"nextSibling":"previousSibling",m=e.parentNode,v=s&&e.nodeName.toLowerCase(),y=!l&&!s,b=!1;if(m){if(o){for(;g;){for(d=e;d=d[g];)if(s?d.nodeName.toLowerCase()===v:1===d.nodeType)return!1;f=g="only"===t&&!f&&"nextSibling"}return!0}if(f=[a?m.firstChild:m.lastChild],a&&y){for(d=m,h=d[B]||(d[B]={}),u=h[d.uniqueID]||(h[d.uniqueID]={}),c=u[t]||[],p=c[0]===j&&c[1],b=p&&c[2],d=p&&m.childNodes[p];d=++p&&d&&d[g]||(b=p=0)||f.pop();)if(1===d.nodeType&&++b&&d===e){u[t]=[j,p,b];break}}else if(y&&(d=e,h=d[B]||(d[B]={}),u=h[d.uniqueID]||(h[d.uniqueID]={}),c=u[t]||[],p=c[0]===j&&c[1],b=p),b===!1)for(;(d=++p&&d&&d[g]||(b=p=0)||f.pop())&&((s?d.nodeName.toLowerCase()!==v:1!==d.nodeType)||!++b||(y&&(h=d[B]||(d[B]={}),u=h[d.uniqueID]||(h[d.uniqueID]={}),u[t]=[j,b]),d!==e)););return b-=r,b===n||b%n===0&&b/n>=0}}},PSEUDO:function(t,i){var r,o=w.pseudos[t]||w.setFilters[t.toLowerCase()]||e.error("unsupported pseudo: "+t);return o[B]?o(i):o.length>1?(r=[t,t,"",i],w.setFilters.hasOwnProperty(t.toLowerCase())?n(function(t,e){for(var n,r=o(t,i),a=r.length;a--;)n=tt(t,r[a]),t[n]=!(e[n]=r[a])}):function(t){return o(t,0,r)}):o}},pseudos:{not:n(function(t){var e=[],i=[],r=D(t.replace(st,"$1"));return r[B]?n(function(t,e,i,n){for(var o,a=r(t,null,n,[]),s=t.length;s--;)(o=a[s])&&(t[s]=!(e[s]=o))}):function(t,n,o){return e[0]=t,r(e,null,o,i),e[0]=null,!i.pop()}}),has:n(function(t){return function(i){return e(t,i).length>0}}),contains:n(function(t){return t=t.replace(xt,kt),function(e){return(e.textContent||e.innerText||_(e)).indexOf(t)>-1}}),lang:n(function(t){return dt.test(t||"")||e.error("unsupported lang: "+t),t=t.replace(xt,kt).toLowerCase(),function(e){var i;do if(i=L?e.lang:e.getAttribute("xml:lang")||e.getAttribute("lang"))return i=i.toLowerCase(),i===t||0===i.indexOf(t+"-");while((e=e.parentNode)&&1===e.nodeType);return!1}}),target:function(e){var i=t.location&&t.location.hash;return i&&i.slice(1)===e.id},root:function(t){return t===N},focus:function(t){return t===F.activeElement&&(!F.hasFocus||F.hasFocus())&&!!(t.type||t.href||~t.tabIndex)},enabled:function(t){return t.disabled===!1},disabled:function(t){return t.disabled===!0},checked:function(t){var e=t.nodeName.toLowerCase();return"input"===e&&!!t.checked||"option"===e&&!!t.selected},selected:function(t){return t.parentNode&&t.parentNode.selectedIndex,t.selected===!0},empty:function(t){for(t=t.firstChild;t;t=t.nextSibling)if(t.nodeType<6)return!1;return!0},parent:function(t){return!w.pseudos.empty(t)},header:function(t){return gt.test(t.nodeName)},input:function(t){return ft.test(t.nodeName)},button:function(t){var e=t.nodeName.toLowerCase();return"input"===e&&"button"===t.type||"button"===e},text:function(t){var e;return"input"===t.nodeName.toLowerCase()&&"text"===t.type&&(null==(e=t.getAttribute("type"))||"text"===e.toLowerCase())},first:c(function(){return[0]}),last:c(function(t,e){return[e-1]}),eq:c(function(t,e,i){return[0>i?i+e:i]}),even:c(function(t,e){for(var i=0;e>i;i+=2)t.push(i);return t}),odd:c(function(t,e){
for(var i=1;e>i;i+=2)t.push(i);return t}),lt:c(function(t,e,i){for(var n=0>i?i+e:i;--n>=0;)t.push(n);return t}),gt:c(function(t,e,i){for(var n=0>i?i+e:i;++n<e;)t.push(n);return t})}},w.pseudos.nth=w.pseudos.eq;for(x in{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})w.pseudos[x]=s(x);for(x in{submit:!0,reset:!0})w.pseudos[x]=l(x);return h.prototype=w.filters=w.pseudos,w.setFilters=new h,C=e.tokenize=function(t,i){var n,r,o,a,s,l,c,u=q[t+" "];if(u)return i?0:u.slice(0);for(s=t,l=[],c=w.preFilter;s;){n&&!(r=lt.exec(s))||(r&&(s=s.slice(r[0].length)||s),l.push(o=[])),n=!1,(r=ct.exec(s))&&(n=r.shift(),o.push({value:n,type:r[0].replace(st," ")}),s=s.slice(n.length));for(a in w.filter)!(r=pt[a].exec(s))||c[a]&&!(r=c[a](r))||(n=r.shift(),o.push({value:n,type:a,matches:r}),s=s.slice(n.length));if(!n)break}return i?s.length:s?e.error(t):q(t,l).slice(0)},D=e.compile=function(t,e){var i,n=[],r=[],o=Y[t+" "];if(!o){for(e||(e=C(t)),i=e.length;i--;)o=y(e[i]),o[B]?n.push(o):r.push(o);o=Y(t,b(r,n)),o.selector=t}return o},P=e.select=function(t,e,i,n){var r,o,a,s,l,c="function"==typeof t&&t,h=!n&&C(t=c.selector||t);if(i=i||[],1===h.length){if(o=h[0]=h[0].slice(0),o.length>2&&"ID"===(a=o[0]).type&&k.getById&&9===e.nodeType&&L&&w.relative[o[1].type]){if(e=(w.find.ID(a.matches[0].replace(xt,kt),e)||[])[0],!e)return i;c&&(e=e.parentNode),t=t.slice(o.shift().value.length)}for(r=pt.needsContext.test(t)?0:o.length;r--&&(a=o[r],!w.relative[s=a.type]);)if((l=w.find[s])&&(n=l(a.matches[0].replace(xt,kt),yt.test(o[0].type)&&u(e.parentNode)||e))){if(o.splice(r,1),t=n.length&&d(o),!t)return Q.apply(i,n),i;break}}return(c||D(t,h))(n,e,!L,i,!e||yt.test(t)&&u(e.parentNode)||e),i},k.sortStable=B.split("").sort($).join("")===B,k.detectDuplicates=!!T,A(),k.sortDetached=r(function(t){return 1&t.compareDocumentPosition(F.createElement("div"))}),r(function(t){return t.innerHTML="<a href='#'></a>","#"===t.firstChild.getAttribute("href")})||o("type|href|height|width",function(t,e,i){return i?void 0:t.getAttribute(e,"type"===e.toLowerCase()?1:2)}),k.attributes&&r(function(t){return t.innerHTML="<input/>",t.firstChild.setAttribute("value",""),""===t.firstChild.getAttribute("value")})||o("value",function(t,e,i){return i||"input"!==t.nodeName.toLowerCase()?void 0:t.defaultValue}),r(function(t){return null==t.getAttribute("disabled")})||o(et,function(t,e,i){var n;return i?void 0:t[e]===!0?e.toLowerCase():(n=t.getAttributeNode(e))&&n.specified?n.value:null}),e}(t);ot.find=ut,ot.expr=ut.selectors,ot.expr[":"]=ot.expr.pseudos,ot.uniqueSort=ot.unique=ut.uniqueSort,ot.text=ut.getText,ot.isXMLDoc=ut.isXML,ot.contains=ut.contains;var ht=function(t,e,i){for(var n=[],r=void 0!==i;(t=t[e])&&9!==t.nodeType;)if(1===t.nodeType){if(r&&ot(t).is(i))break;n.push(t)}return n},dt=function(t,e){for(var i=[];t;t=t.nextSibling)1===t.nodeType&&t!==e&&i.push(t);return i},pt=ot.expr.match.needsContext,ft=/^<([\w-]+)\s*\/?>(?:<\/\1>|)$/,gt=/^.[^:#\[\.,]*$/;ot.filter=function(t,e,i){var n=e[0];return i&&(t=":not("+t+")"),1===e.length&&1===n.nodeType?ot.find.matchesSelector(n,t)?[n]:[]:ot.find.matches(t,ot.grep(e,function(t){return 1===t.nodeType}))},ot.fn.extend({find:function(t){var e,i=this.length,n=[],r=this;if("string"!=typeof t)return this.pushStack(ot(t).filter(function(){for(e=0;i>e;e++)if(ot.contains(r[e],this))return!0}));for(e=0;i>e;e++)ot.find(t,r[e],n);return n=this.pushStack(i>1?ot.unique(n):n),n.selector=this.selector?this.selector+" "+t:t,n},filter:function(t){return this.pushStack(n(this,t||[],!1))},not:function(t){return this.pushStack(n(this,t||[],!0))},is:function(t){return!!n(this,"string"==typeof t&&pt.test(t)?ot(t):t||[],!1).length}});var mt,vt=/^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]*))$/,yt=ot.fn.init=function(t,e,i){var n,r;if(!t)return this;if(i=i||mt,"string"==typeof t){if(n="<"===t[0]&&">"===t[t.length-1]&&t.length>=3?[null,t,null]:vt.exec(t),!n||!n[1]&&e)return!e||e.jquery?(e||i).find(t):this.constructor(e).find(t);if(n[1]){if(e=e instanceof ot?e[0]:e,ot.merge(this,ot.parseHTML(n[1],e&&e.nodeType?e.ownerDocument||e:K,!0)),ft.test(n[1])&&ot.isPlainObject(e))for(n in e)ot.isFunction(this[n])?this[n](e[n]):this.attr(n,e[n]);return this}return r=K.getElementById(n[2]),r&&r.parentNode&&(this.length=1,this[0]=r),this.context=K,this.selector=t,this}return t.nodeType?(this.context=this[0]=t,this.length=1,this):ot.isFunction(t)?void 0!==i.ready?i.ready(t):t(ot):(void 0!==t.selector&&(this.selector=t.selector,this.context=t.context),ot.makeArray(t,this))};yt.prototype=ot.fn,mt=ot(K);var bt=/^(?:parents|prev(?:Until|All))/,xt={children:!0,contents:!0,next:!0,prev:!0};ot.fn.extend({has:function(t){var e=ot(t,this),i=e.length;return this.filter(function(){for(var t=0;i>t;t++)if(ot.contains(this,e[t]))return!0})},closest:function(t,e){for(var i,n=0,r=this.length,o=[],a=pt.test(t)||"string"!=typeof t?ot(t,e||this.context):0;r>n;n++)for(i=this[n];i&&i!==e;i=i.parentNode)if(i.nodeType<11&&(a?a.index(i)>-1:1===i.nodeType&&ot.find.matchesSelector(i,t))){o.push(i);break}return this.pushStack(o.length>1?ot.uniqueSort(o):o)},index:function(t){return t?"string"==typeof t?Z.call(ot(t),this[0]):Z.call(this,t.jquery?t[0]:t):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(t,e){return this.pushStack(ot.uniqueSort(ot.merge(this.get(),ot(t,e))))},addBack:function(t){return this.add(null==t?this.prevObject:this.prevObject.filter(t))}}),ot.each({parent:function(t){var e=t.parentNode;return e&&11!==e.nodeType?e:null},parents:function(t){return ht(t,"parentNode")},parentsUntil:function(t,e,i){return ht(t,"parentNode",i)},next:function(t){return r(t,"nextSibling")},prev:function(t){return r(t,"previousSibling")},nextAll:function(t){return ht(t,"nextSibling")},prevAll:function(t){return ht(t,"previousSibling")},nextUntil:function(t,e,i){return ht(t,"nextSibling",i)},prevUntil:function(t,e,i){return ht(t,"previousSibling",i)},siblings:function(t){return dt((t.parentNode||{}).firstChild,t)},children:function(t){return dt(t.firstChild)},contents:function(t){return t.contentDocument||ot.merge([],t.childNodes)}},function(t,e){ot.fn[t]=function(i,n){var r=ot.map(this,e,i);return"Until"!==t.slice(-5)&&(n=i),n&&"string"==typeof n&&(r=ot.filter(n,r)),this.length>1&&(xt[t]||ot.uniqueSort(r),bt.test(t)&&r.reverse()),this.pushStack(r)}});var kt=/\S+/g;ot.Callbacks=function(t){t="string"==typeof t?o(t):ot.extend({},t);var e,i,n,r,a=[],s=[],l=-1,c=function(){for(r=t.once,n=e=!0;s.length;l=-1)for(i=s.shift();++l<a.length;)a[l].apply(i[0],i[1])===!1&&t.stopOnFalse&&(l=a.length,i=!1);t.memory||(i=!1),e=!1,r&&(a=i?[]:"")},u={add:function(){return a&&(i&&!e&&(l=a.length-1,s.push(i)),function n(e){ot.each(e,function(e,i){ot.isFunction(i)?t.unique&&u.has(i)||a.push(i):i&&i.length&&"string"!==ot.type(i)&&n(i)})}(arguments),i&&!e&&c()),this},remove:function(){return ot.each(arguments,function(t,e){for(var i;(i=ot.inArray(e,a,i))>-1;)a.splice(i,1),l>=i&&l--}),this},has:function(t){return t?ot.inArray(t,a)>-1:a.length>0},empty:function(){return a&&(a=[]),this},disable:function(){return r=s=[],a=i="",this},disabled:function(){return!a},lock:function(){return r=s=[],i||(a=i=""),this},locked:function(){return!!r},fireWith:function(t,i){return r||(i=i||[],i=[t,i.slice?i.slice():i],s.push(i),e||c()),this},fire:function(){return u.fireWith(this,arguments),this},fired:function(){return!!n}};return u},ot.extend({Deferred:function(t){var e=[["resolve","done",ot.Callbacks("once memory"),"resolved"],["reject","fail",ot.Callbacks("once memory"),"rejected"],["notify","progress",ot.Callbacks("memory")]],i="pending",n={state:function(){return i},always:function(){return r.done(arguments).fail(arguments),this},then:function(){var t=arguments;return ot.Deferred(function(i){ot.each(e,function(e,o){var a=ot.isFunction(t[e])&&t[e];r[o[1]](function(){var t=a&&a.apply(this,arguments);t&&ot.isFunction(t.promise)?t.promise().progress(i.notify).done(i.resolve).fail(i.reject):i[o[0]+"With"](this===n?i.promise():this,a?[t]:arguments)})}),t=null}).promise()},promise:function(t){return null!=t?ot.extend(t,n):n}},r={};return n.pipe=n.then,ot.each(e,function(t,o){var a=o[2],s=o[3];n[o[1]]=a.add,s&&a.add(function(){i=s},e[1^t][2].disable,e[2][2].lock),r[o[0]]=function(){return r[o[0]+"With"](this===r?n:this,arguments),this},r[o[0]+"With"]=a.fireWith}),n.promise(r),t&&t.call(r,r),r},when:function(t){var e,i,n,r=0,o=J.call(arguments),a=o.length,s=1!==a||t&&ot.isFunction(t.promise)?a:0,l=1===s?t:ot.Deferred(),c=function(t,i,n){return function(r){i[t]=this,n[t]=arguments.length>1?J.call(arguments):r,n===e?l.notifyWith(i,n):--s||l.resolveWith(i,n)}};if(a>1)for(e=new Array(a),i=new Array(a),n=new Array(a);a>r;r++)o[r]&&ot.isFunction(o[r].promise)?o[r].promise().progress(c(r,i,e)).done(c(r,n,o)).fail(l.reject):--s;return s||l.resolveWith(n,o),l.promise()}});var wt;ot.fn.ready=function(t){return ot.ready.promise().done(t),this},ot.extend({isReady:!1,readyWait:1,holdReady:function(t){t?ot.readyWait++:ot.ready(!0)},ready:function(t){(t===!0?--ot.readyWait:ot.isReady)||(ot.isReady=!0,t!==!0&&--ot.readyWait>0||(wt.resolveWith(K,[ot]),ot.fn.triggerHandler&&(ot(K).triggerHandler("ready"),ot(K).off("ready"))))}}),ot.ready.promise=function(e){return wt||(wt=ot.Deferred(),"complete"===K.readyState||"loading"!==K.readyState&&!K.documentElement.doScroll?t.setTimeout(ot.ready):(K.addEventListener("DOMContentLoaded",a),t.addEventListener("load",a))),wt.promise(e)},ot.ready.promise();var _t=function(t,e,i,n,r,o,a){var s=0,l=t.length,c=null==i;if("object"===ot.type(i)){r=!0;for(s in i)_t(t,e,s,i[s],!0,o,a)}else if(void 0!==n&&(r=!0,ot.isFunction(n)||(a=!0),c&&(a?(e.call(t,n),e=null):(c=e,e=function(t,e,i){return c.call(ot(t),i)})),e))for(;l>s;s++)e(t[s],i,a?n:n.call(t[s],s,e(t[s],i)));return r?t:c?e.call(t):l?e(t[0],i):o},St=function(t){return 1===t.nodeType||9===t.nodeType||!+t.nodeType};s.uid=1,s.prototype={register:function(t,e){var i=e||{};return t.nodeType?t[this.expando]=i:Object.defineProperty(t,this.expando,{value:i,writable:!0,configurable:!0}),t[this.expando]},cache:function(t){if(!St(t))return{};var e=t[this.expando];return e||(e={},St(t)&&(t.nodeType?t[this.expando]=e:Object.defineProperty(t,this.expando,{value:e,configurable:!0}))),e},set:function(t,e,i){var n,r=this.cache(t);if("string"==typeof e)r[e]=i;else for(n in e)r[n]=e[n];return r},get:function(t,e){return void 0===e?this.cache(t):t[this.expando]&&t[this.expando][e]},access:function(t,e,i){var n;return void 0===e||e&&"string"==typeof e&&void 0===i?(n=this.get(t,e),void 0!==n?n:this.get(t,ot.camelCase(e))):(this.set(t,e,i),void 0!==i?i:e)},remove:function(t,e){var i,n,r,o=t[this.expando];if(void 0!==o){if(void 0===e)this.register(t);else{ot.isArray(e)?n=e.concat(e.map(ot.camelCase)):(r=ot.camelCase(e),e in o?n=[e,r]:(n=r,n=n in o?[n]:n.match(kt)||[])),i=n.length;for(;i--;)delete o[n[i]]}(void 0===e||ot.isEmptyObject(o))&&(t.nodeType?t[this.expando]=void 0:delete t[this.expando])}},hasData:function(t){var e=t[this.expando];return void 0!==e&&!ot.isEmptyObject(e)}};var Ct=new s,Dt=new s,Pt=/^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,Mt=/[A-Z]/g;ot.extend({hasData:function(t){return Dt.hasData(t)||Ct.hasData(t)},data:function(t,e,i){return Dt.access(t,e,i)},removeData:function(t,e){Dt.remove(t,e)},_data:function(t,e,i){return Ct.access(t,e,i)},_removeData:function(t,e){Ct.remove(t,e)}}),ot.fn.extend({data:function(t,e){var i,n,r,o=this[0],a=o&&o.attributes;if(void 0===t){if(this.length&&(r=Dt.get(o),1===o.nodeType&&!Ct.get(o,"hasDataAttrs"))){for(i=a.length;i--;)a[i]&&(n=a[i].name,0===n.indexOf("data-")&&(n=ot.camelCase(n.slice(5)),l(o,n,r[n])));Ct.set(o,"hasDataAttrs",!0)}return r}return"object"==typeof t?this.each(function(){Dt.set(this,t)}):_t(this,function(e){var i,n;if(o&&void 0===e){if(i=Dt.get(o,t)||Dt.get(o,t.replace(Mt,"-$&").toLowerCase()),void 0!==i)return i;if(n=ot.camelCase(t),i=Dt.get(o,n),void 0!==i)return i;if(i=l(o,n,void 0),void 0!==i)return i}else n=ot.camelCase(t),this.each(function(){var i=Dt.get(this,n);Dt.set(this,n,e),t.indexOf("-")>-1&&void 0!==i&&Dt.set(this,t,e)})},null,e,arguments.length>1,null,!0)},removeData:function(t){return this.each(function(){Dt.remove(this,t)})}}),ot.extend({queue:function(t,e,i){var n;return t?(e=(e||"fx")+"queue",n=Ct.get(t,e),i&&(!n||ot.isArray(i)?n=Ct.access(t,e,ot.makeArray(i)):n.push(i)),n||[]):void 0},dequeue:function(t,e){e=e||"fx";var i=ot.queue(t,e),n=i.length,r=i.shift(),o=ot._queueHooks(t,e),a=function(){ot.dequeue(t,e)};"inprogress"===r&&(r=i.shift(),n--),r&&("fx"===e&&i.unshift("inprogress"),delete o.stop,r.call(t,a,o)),!n&&o&&o.empty.fire()},_queueHooks:function(t,e){var i=e+"queueHooks";return Ct.get(t,i)||Ct.access(t,i,{empty:ot.Callbacks("once memory").add(function(){Ct.remove(t,[e+"queue",i])})})}}),ot.fn.extend({queue:function(t,e){var i=2;return"string"!=typeof t&&(e=t,t="fx",i--),arguments.length<i?ot.queue(this[0],t):void 0===e?this:this.each(function(){var i=ot.queue(this,t,e);ot._queueHooks(this,t),"fx"===t&&"inprogress"!==i[0]&&ot.dequeue(this,t)})},dequeue:function(t){return this.each(function(){ot.dequeue(this,t)})},clearQueue:function(t){return this.queue(t||"fx",[])},promise:function(t,e){var i,n=1,r=ot.Deferred(),o=this,a=this.length,s=function(){--n||r.resolveWith(o,[o])};for("string"!=typeof t&&(e=t,t=void 0),t=t||"fx";a--;)i=Ct.get(o[a],t+"queueHooks"),i&&i.empty&&(n++,i.empty.add(s));return s(),r.promise(e)}});var It=/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,Tt=new RegExp("^(?:([+-])=|)("+It+")([a-z%]*)$","i"),At=["Top","Right","Bottom","Left"],Ft=function(t,e){return t=e||t,"none"===ot.css(t,"display")||!ot.contains(t.ownerDocument,t)},Nt=/^(?:checkbox|radio)$/i,Lt=/<([\w:-]+)/,Ot=/^$|\/(?:java|ecma)script/i,Et={option:[1,"<select multiple='multiple'>","</select>"],thead:[1,"<table>","</table>"],col:[2,"<table><colgroup>","</colgroup></table>"],tr:[2,"<table><tbody>","</tbody></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],_default:[0,"",""]};Et.optgroup=Et.option,Et.tbody=Et.tfoot=Et.colgroup=Et.caption=Et.thead,Et.th=Et.td;var Ht=/<|&#?\w+;/;!function(){var t=K.createDocumentFragment(),e=t.appendChild(K.createElement("div")),i=K.createElement("input");i.setAttribute("type","radio"),i.setAttribute("checked","checked"),i.setAttribute("name","t"),e.appendChild(i),nt.checkClone=e.cloneNode(!0).cloneNode(!0).lastChild.checked,e.innerHTML="<textarea>x</textarea>",nt.noCloneChecked=!!e.cloneNode(!0).lastChild.defaultValue}();var Rt=/^key/,Bt=/^(?:mouse|pointer|contextmenu|drag|drop)|click/,Wt=/^([^.]*)(?:\.(.+)|)/;ot.event={global:{},add:function(t,e,i,n,r){var o,a,s,l,c,u,h,d,p,f,g,m=Ct.get(t);if(m)for(i.handler&&(o=i,i=o.handler,r=o.selector),i.guid||(i.guid=ot.guid++),(l=m.events)||(l=m.events={}),(a=m.handle)||(a=m.handle=function(e){return"undefined"!=typeof ot&&ot.event.triggered!==e.type?ot.event.dispatch.apply(t,arguments):void 0}),e=(e||"").match(kt)||[""],c=e.length;c--;)s=Wt.exec(e[c])||[],p=g=s[1],f=(s[2]||"").split(".").sort(),p&&(h=ot.event.special[p]||{},p=(r?h.delegateType:h.bindType)||p,h=ot.event.special[p]||{},u=ot.extend({type:p,origType:g,data:n,handler:i,guid:i.guid,selector:r,needsContext:r&&ot.expr.match.needsContext.test(r),namespace:f.join(".")},o),(d=l[p])||(d=l[p]=[],d.delegateCount=0,h.setup&&h.setup.call(t,n,f,a)!==!1||t.addEventListener&&t.addEventListener(p,a)),h.add&&(h.add.call(t,u),u.handler.guid||(u.handler.guid=i.guid)),r?d.splice(d.delegateCount++,0,u):d.push(u),ot.event.global[p]=!0)},remove:function(t,e,i,n,r){var o,a,s,l,c,u,h,d,p,f,g,m=Ct.hasData(t)&&Ct.get(t);if(m&&(l=m.events)){for(e=(e||"").match(kt)||[""],c=e.length;c--;)if(s=Wt.exec(e[c])||[],p=g=s[1],f=(s[2]||"").split(".").sort(),p){for(h=ot.event.special[p]||{},p=(n?h.delegateType:h.bindType)||p,d=l[p]||[],s=s[2]&&new RegExp("(^|\\.)"+f.join("\\.(?:.*\\.|)")+"(\\.|$)"),a=o=d.length;o--;)u=d[o],!r&&g!==u.origType||i&&i.guid!==u.guid||s&&!s.test(u.namespace)||n&&n!==u.selector&&("**"!==n||!u.selector)||(d.splice(o,1),u.selector&&d.delegateCount--,h.remove&&h.remove.call(t,u));a&&!d.length&&(h.teardown&&h.teardown.call(t,f,m.handle)!==!1||ot.removeEvent(t,p,m.handle),delete l[p])}else for(p in l)ot.event.remove(t,p+e[c],i,n,!0);ot.isEmptyObject(l)&&Ct.remove(t,"handle events")}},dispatch:function(t){t=ot.event.fix(t);var e,i,n,r,o,a=[],s=J.call(arguments),l=(Ct.get(this,"events")||{})[t.type]||[],c=ot.event.special[t.type]||{};if(s[0]=t,t.delegateTarget=this,!c.preDispatch||c.preDispatch.call(this,t)!==!1){for(a=ot.event.handlers.call(this,t,l),e=0;(r=a[e++])&&!t.isPropagationStopped();)for(t.currentTarget=r.elem,i=0;(o=r.handlers[i++])&&!t.isImmediatePropagationStopped();)t.rnamespace&&!t.rnamespace.test(o.namespace)||(t.handleObj=o,t.data=o.data,n=((ot.event.special[o.origType]||{}).handle||o.handler).apply(r.elem,s),void 0!==n&&(t.result=n)===!1&&(t.preventDefault(),t.stopPropagation()));return c.postDispatch&&c.postDispatch.call(this,t),t.result}},handlers:function(t,e){var i,n,r,o,a=[],s=e.delegateCount,l=t.target;if(s&&l.nodeType&&("click"!==t.type||isNaN(t.button)||t.button<1))for(;l!==this;l=l.parentNode||this)if(1===l.nodeType&&(l.disabled!==!0||"click"!==t.type)){for(n=[],i=0;s>i;i++)o=e[i],r=o.selector+" ",void 0===n[r]&&(n[r]=o.needsContext?ot(r,this).index(l)>-1:ot.find(r,this,null,[l]).length),n[r]&&n.push(o);n.length&&a.push({elem:l,handlers:n})}return s<e.length&&a.push({elem:this,handlers:e.slice(s)}),a},props:"altKey bubbles cancelable ctrlKey currentTarget detail eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(" "),fixHooks:{},keyHooks:{props:"char charCode key keyCode".split(" "),filter:function(t,e){return null==t.which&&(t.which=null!=e.charCode?e.charCode:e.keyCode),t}},mouseHooks:{props:"button buttons clientX clientY offsetX offsetY pageX pageY screenX screenY toElement".split(" "),filter:function(t,e){var i,n,r,o=e.button;return null==t.pageX&&null!=e.clientX&&(i=t.target.ownerDocument||K,n=i.documentElement,r=i.body,t.pageX=e.clientX+(n&&n.scrollLeft||r&&r.scrollLeft||0)-(n&&n.clientLeft||r&&r.clientLeft||0),t.pageY=e.clientY+(n&&n.scrollTop||r&&r.scrollTop||0)-(n&&n.clientTop||r&&r.clientTop||0)),t.which||void 0===o||(t.which=1&o?1:2&o?3:4&o?2:0),t}},fix:function(t){if(t[ot.expando])return t;var e,i,n,r=t.type,o=t,a=this.fixHooks[r];for(a||(this.fixHooks[r]=a=Bt.test(r)?this.mouseHooks:Rt.test(r)?this.keyHooks:{}),n=a.props?this.props.concat(a.props):this.props,t=new ot.Event(o),e=n.length;e--;)i=n[e],t[i]=o[i];return t.target||(t.target=K),3===t.target.nodeType&&(t.target=t.target.parentNode),a.filter?a.filter(t,o):t},special:{load:{noBubble:!0},focus:{trigger:function(){return this!==g()&&this.focus?(this.focus(),!1):void 0},delegateType:"focusin"},blur:{trigger:function(){return this===g()&&this.blur?(this.blur(),!1):void 0},delegateType:"focusout"},click:{trigger:function(){return"checkbox"===this.type&&this.click&&ot.nodeName(this,"input")?(this.click(),!1):void 0},_default:function(t){return ot.nodeName(t.target,"a")}},beforeunload:{postDispatch:function(t){void 0!==t.result&&t.originalEvent&&(t.originalEvent.returnValue=t.result)}}}},ot.removeEvent=function(t,e,i){t.removeEventListener&&t.removeEventListener(e,i)},ot.Event=function(t,e){return this instanceof ot.Event?(t&&t.type?(this.originalEvent=t,this.type=t.type,this.isDefaultPrevented=t.defaultPrevented||void 0===t.defaultPrevented&&t.returnValue===!1?p:f):this.type=t,e&&ot.extend(this,e),this.timeStamp=t&&t.timeStamp||ot.now(),void(this[ot.expando]=!0)):new ot.Event(t,e)},ot.Event.prototype={constructor:ot.Event,isDefaultPrevented:f,isPropagationStopped:f,isImmediatePropagationStopped:f,isSimulated:!1,preventDefault:function(){var t=this.originalEvent;this.isDefaultPrevented=p,t&&!this.isSimulated&&t.preventDefault()},stopPropagation:function(){var t=this.originalEvent;this.isPropagationStopped=p,t&&!this.isSimulated&&t.stopPropagation()},stopImmediatePropagation:function(){var t=this.originalEvent;this.isImmediatePropagationStopped=p,t&&!this.isSimulated&&t.stopImmediatePropagation(),this.stopPropagation()}},ot.each({mouseenter:"mouseover",mouseleave:"mouseout",pointerenter:"pointerover",pointerleave:"pointerout"},function(t,e){ot.event.special[t]={delegateType:e,bindType:e,handle:function(t){var i,n=this,r=t.relatedTarget,o=t.handleObj;return r&&(r===n||ot.contains(n,r))||(t.type=o.origType,i=o.handler.apply(this,arguments),t.type=e),i}}}),ot.fn.extend({on:function(t,e,i,n){return m(this,t,e,i,n)},one:function(t,e,i,n){return m(this,t,e,i,n,1)},off:function(t,e,i){var n,r;if(t&&t.preventDefault&&t.handleObj)return n=t.handleObj,ot(t.delegateTarget).off(n.namespace?n.origType+"."+n.namespace:n.origType,n.selector,n.handler),this;if("object"==typeof t){for(r in t)this.off(r,e,t[r]);return this}return e!==!1&&"function"!=typeof e||(i=e,e=void 0),i===!1&&(i=f),this.each(function(){ot.event.remove(this,t,i,e)})}});var jt=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:-]+)[^>]*)\/>/gi,zt=/<script|<style|<link/i,Vt=/checked\s*(?:[^=]|=\s*.checked.)/i,qt=/^true\/(.*)/,Yt=/^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;ot.extend({htmlPrefilter:function(t){return t.replace(jt,"<$1></$2>")},clone:function(t,e,i){var n,r,o,a,s=t.cloneNode(!0),l=ot.contains(t.ownerDocument,t);if(!(nt.noCloneChecked||1!==t.nodeType&&11!==t.nodeType||ot.isXMLDoc(t)))for(a=u(s),o=u(t),n=0,r=o.length;r>n;n++)k(o[n],a[n]);if(e)if(i)for(o=o||u(t),a=a||u(s),n=0,r=o.length;r>n;n++)x(o[n],a[n]);else x(t,s);return a=u(s,"script"),a.length>0&&h(a,!l&&u(t,"script")),s},cleanData:function(t){for(var e,i,n,r=ot.event.special,o=0;void 0!==(i=t[o]);o++)if(St(i)){if(e=i[Ct.expando]){if(e.events)for(n in e.events)r[n]?ot.event.remove(i,n):ot.removeEvent(i,n,e.handle);i[Ct.expando]=void 0}i[Dt.expando]&&(i[Dt.expando]=void 0)}}}),ot.fn.extend({domManip:w,detach:function(t){return _(this,t,!0)},remove:function(t){return _(this,t)},text:function(t){return _t(this,function(t){return void 0===t?ot.text(this):this.empty().each(function(){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||(this.textContent=t)})},null,t,arguments.length)},append:function(){return w(this,arguments,function(t){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var e=v(this,t);e.appendChild(t)}})},prepend:function(){return w(this,arguments,function(t){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var e=v(this,t);e.insertBefore(t,e.firstChild)}})},before:function(){return w(this,arguments,function(t){this.parentNode&&this.parentNode.insertBefore(t,this)})},after:function(){return w(this,arguments,function(t){this.parentNode&&this.parentNode.insertBefore(t,this.nextSibling)})},empty:function(){for(var t,e=0;null!=(t=this[e]);e++)1===t.nodeType&&(ot.cleanData(u(t,!1)),t.textContent="");return this},clone:function(t,e){return t=null==t?!1:t,e=null==e?t:e,this.map(function(){return ot.clone(this,t,e)})},html:function(t){return _t(this,function(t){var e=this[0]||{},i=0,n=this.length;if(void 0===t&&1===e.nodeType)return e.innerHTML;if("string"==typeof t&&!zt.test(t)&&!Et[(Lt.exec(t)||["",""])[1].toLowerCase()]){t=ot.htmlPrefilter(t);try{for(;n>i;i++)e=this[i]||{},1===e.nodeType&&(ot.cleanData(u(e,!1)),e.innerHTML=t);e=0}catch(r){}}e&&this.empty().append(t)},null,t,arguments.length)},replaceWith:function(){var t=[];return w(this,arguments,function(e){var i=this.parentNode;ot.inArray(this,t)<0&&(ot.cleanData(u(this)),i&&i.replaceChild(e,this))},t)}}),ot.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(t,e){ot.fn[t]=function(t){for(var i,n=[],r=ot(t),o=r.length-1,a=0;o>=a;a++)i=a===o?this:this.clone(!0),ot(r[a])[e](i),Q.apply(n,i.get());return this.pushStack(n)}});var $t,Ut={HTML:"block",BODY:"block"},Xt=/^margin/,Kt=new RegExp("^("+It+")(?!px)[a-z%]+$","i"),Jt=function(e){var i=e.ownerDocument.defaultView;return i&&i.opener||(i=t),i.getComputedStyle(e)},Gt=function(t,e,i,n){var r,o,a={};for(o in e)a[o]=t.style[o],t.style[o]=e[o];r=i.apply(t,n||[]);for(o in e)t.style[o]=a[o];return r},Qt=K.documentElement;!function(){function e(){s.style.cssText="-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;position:relative;display:block;margin:auto;border:1px;padding:1px;top:1%;width:50%",s.innerHTML="",Qt.appendChild(a);var e=t.getComputedStyle(s);i="1%"!==e.top,o="2px"===e.marginLeft,n="4px"===e.width,s.style.marginRight="50%",r="4px"===e.marginRight,Qt.removeChild(a)}var i,n,r,o,a=K.createElement("div"),s=K.createElement("div");s.style&&(s.style.backgroundClip="content-box",s.cloneNode(!0).style.backgroundClip="",nt.clearCloneStyle="content-box"===s.style.backgroundClip,a.style.cssText="border:0;width:8px;height:0;top:0;left:-9999px;padding:0;margin-top:1px;position:absolute",a.appendChild(s),ot.extend(nt,{pixelPosition:function(){return e(),i},boxSizingReliable:function(){return null==n&&e(),n},pixelMarginRight:function(){return null==n&&e(),r},reliableMarginLeft:function(){return null==n&&e(),o},reliableMarginRight:function(){var e,i=s.appendChild(K.createElement("div"));return i.style.cssText=s.style.cssText="-webkit-box-sizing:content-box;box-sizing:content-box;display:block;margin:0;border:0;padding:0",i.style.marginRight=i.style.width="0",s.style.width="1px",Qt.appendChild(a),e=!parseFloat(t.getComputedStyle(i).marginRight),Qt.removeChild(a),s.removeChild(i),e}}))}();var Zt=/^(none|table(?!-c[ea]).+)/,te={position:"absolute",visibility:"hidden",display:"block"},ee={letterSpacing:"0",fontWeight:"400"},ie=["Webkit","O","Moz","ms"],ne=K.createElement("div").style;ot.extend({cssHooks:{opacity:{get:function(t,e){if(e){var i=D(t,"opacity");return""===i?"1":i}}}},cssNumber:{animationIterationCount:!0,columnCount:!0,fillOpacity:!0,flexGrow:!0,flexShrink:!0,fontWeight:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{"float":"cssFloat"},style:function(t,e,i,n){if(t&&3!==t.nodeType&&8!==t.nodeType&&t.style){var r,o,a,s=ot.camelCase(e),l=t.style;return e=ot.cssProps[s]||(ot.cssProps[s]=M(s)||s),a=ot.cssHooks[e]||ot.cssHooks[s],void 0===i?a&&"get"in a&&void 0!==(r=a.get(t,!1,n))?r:l[e]:(o=typeof i,"string"===o&&(r=Tt.exec(i))&&r[1]&&(i=c(t,e,r),o="number"),null!=i&&i===i&&("number"===o&&(i+=r&&r[3]||(ot.cssNumber[s]?"":"px")),nt.clearCloneStyle||""!==i||0!==e.indexOf("background")||(l[e]="inherit"),a&&"set"in a&&void 0===(i=a.set(t,i,n))||(l[e]=i)),void 0)}},css:function(t,e,i,n){var r,o,a,s=ot.camelCase(e);return e=ot.cssProps[s]||(ot.cssProps[s]=M(s)||s),a=ot.cssHooks[e]||ot.cssHooks[s],a&&"get"in a&&(r=a.get(t,!0,i)),void 0===r&&(r=D(t,e,n)),"normal"===r&&e in ee&&(r=ee[e]),""===i||i?(o=parseFloat(r),i===!0||isFinite(o)?o||0:r):r}}),ot.each(["height","width"],function(t,e){ot.cssHooks[e]={get:function(t,i,n){return i?Zt.test(ot.css(t,"display"))&&0===t.offsetWidth?Gt(t,te,function(){return A(t,e,n)}):A(t,e,n):void 0},set:function(t,i,n){var r,o=n&&Jt(t),a=n&&T(t,e,n,"border-box"===ot.css(t,"boxSizing",!1,o),o);return a&&(r=Tt.exec(i))&&"px"!==(r[3]||"px")&&(t.style[e]=i,i=ot.css(t,e)),I(t,i,a)}}}),ot.cssHooks.marginLeft=P(nt.reliableMarginLeft,function(t,e){return e?(parseFloat(D(t,"marginLeft"))||t.getBoundingClientRect().left-Gt(t,{marginLeft:0},function(){return t.getBoundingClientRect().left}))+"px":void 0}),ot.cssHooks.marginRight=P(nt.reliableMarginRight,function(t,e){return e?Gt(t,{display:"inline-block"},D,[t,"marginRight"]):void 0}),ot.each({margin:"",padding:"",border:"Width"},function(t,e){ot.cssHooks[t+e]={expand:function(i){for(var n=0,r={},o="string"==typeof i?i.split(" "):[i];4>n;n++)r[t+At[n]+e]=o[n]||o[n-2]||o[0];return r}},Xt.test(t)||(ot.cssHooks[t+e].set=I)}),ot.fn.extend({css:function(t,e){return _t(this,function(t,e,i){var n,r,o={},a=0;if(ot.isArray(e)){for(n=Jt(t),r=e.length;r>a;a++)o[e[a]]=ot.css(t,e[a],!1,n);return o}return void 0!==i?ot.style(t,e,i):ot.css(t,e)},t,e,arguments.length>1)},show:function(){return F(this,!0)},hide:function(){return F(this)},toggle:function(t){return"boolean"==typeof t?t?this.show():this.hide():this.each(function(){Ft(this)?ot(this).show():ot(this).hide()})}}),ot.Tween=N,N.prototype={constructor:N,init:function(t,e,i,n,r,o){this.elem=t,this.prop=i,this.easing=r||ot.easing._default,this.options=e,this.start=this.now=this.cur(),this.end=n,this.unit=o||(ot.cssNumber[i]?"":"px")},cur:function(){var t=N.propHooks[this.prop];return t&&t.get?t.get(this):N.propHooks._default.get(this)},run:function(t){var e,i=N.propHooks[this.prop];return this.options.duration?this.pos=e=ot.easing[this.easing](t,this.options.duration*t,0,1,this.options.duration):this.pos=e=t,this.now=(this.end-this.start)*e+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),i&&i.set?i.set(this):N.propHooks._default.set(this),this}},N.prototype.init.prototype=N.prototype,N.propHooks={_default:{get:function(t){var e;return 1!==t.elem.nodeType||null!=t.elem[t.prop]&&null==t.elem.style[t.prop]?t.elem[t.prop]:(e=ot.css(t.elem,t.prop,""),e&&"auto"!==e?e:0)},set:function(t){ot.fx.step[t.prop]?ot.fx.step[t.prop](t):1!==t.elem.nodeType||null==t.elem.style[ot.cssProps[t.prop]]&&!ot.cssHooks[t.prop]?t.elem[t.prop]=t.now:ot.style(t.elem,t.prop,t.now+t.unit)}}},N.propHooks.scrollTop=N.propHooks.scrollLeft={set:function(t){t.elem.nodeType&&t.elem.parentNode&&(t.elem[t.prop]=t.now)}},ot.easing={linear:function(t){return t},swing:function(t){return.5-Math.cos(t*Math.PI)/2},_default:"swing"},ot.fx=N.prototype.init,ot.fx.step={};var re,oe,ae=/^(?:toggle|show|hide)$/,se=/queueHooks$/;ot.Animation=ot.extend(B,{tweeners:{"*":[function(t,e){var i=this.createTween(t,e);return c(i.elem,t,Tt.exec(e),i),i}]},tweener:function(t,e){ot.isFunction(t)?(e=t,t=["*"]):t=t.match(kt);for(var i,n=0,r=t.length;r>n;n++)i=t[n],B.tweeners[i]=B.tweeners[i]||[],B.tweeners[i].unshift(e)},prefilters:[H],prefilter:function(t,e){e?B.prefilters.unshift(t):B.prefilters.push(t)}}),ot.speed=function(t,e,i){var n=t&&"object"==typeof t?ot.extend({},t):{complete:i||!i&&e||ot.isFunction(t)&&t,duration:t,easing:i&&e||e&&!ot.isFunction(e)&&e};return n.duration=ot.fx.off?0:"number"==typeof n.duration?n.duration:n.duration in ot.fx.speeds?ot.fx.speeds[n.duration]:ot.fx.speeds._default,null!=n.queue&&n.queue!==!0||(n.queue="fx"),n.old=n.complete,n.complete=function(){ot.isFunction(n.old)&&n.old.call(this),n.queue&&ot.dequeue(this,n.queue)},n},ot.fn.extend({fadeTo:function(t,e,i,n){return this.filter(Ft).css("opacity",0).show().end().animate({opacity:e},t,i,n)},animate:function(t,e,i,n){var r=ot.isEmptyObject(t),o=ot.speed(e,i,n),a=function(){var e=B(this,ot.extend({},t),o);(r||Ct.get(this,"finish"))&&e.stop(!0)};return a.finish=a,r||o.queue===!1?this.each(a):this.queue(o.queue,a)},stop:function(t,e,i){var n=function(t){var e=t.stop;delete t.stop,e(i)};return"string"!=typeof t&&(i=e,e=t,t=void 0),e&&t!==!1&&this.queue(t||"fx",[]),this.each(function(){var e=!0,r=null!=t&&t+"queueHooks",o=ot.timers,a=Ct.get(this);if(r)a[r]&&a[r].stop&&n(a[r]);else for(r in a)a[r]&&a[r].stop&&se.test(r)&&n(a[r]);for(r=o.length;r--;)o[r].elem!==this||null!=t&&o[r].queue!==t||(o[r].anim.stop(i),e=!1,o.splice(r,1));!e&&i||ot.dequeue(this,t)})},finish:function(t){return t!==!1&&(t=t||"fx"),this.each(function(){var e,i=Ct.get(this),n=i[t+"queue"],r=i[t+"queueHooks"],o=ot.timers,a=n?n.length:0;for(i.finish=!0,ot.queue(this,t,[]),r&&r.stop&&r.stop.call(this,!0),e=o.length;e--;)o[e].elem===this&&o[e].queue===t&&(o[e].anim.stop(!0),o.splice(e,1));for(e=0;a>e;e++)n[e]&&n[e].finish&&n[e].finish.call(this);delete i.finish})}}),ot.each(["toggle","show","hide"],function(t,e){var i=ot.fn[e];ot.fn[e]=function(t,n,r){return null==t||"boolean"==typeof t?i.apply(this,arguments):this.animate(O(e,!0),t,n,r)}}),ot.each({slideDown:O("show"),slideUp:O("hide"),slideToggle:O("toggle"),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},function(t,e){ot.fn[t]=function(t,i,n){return this.animate(e,t,i,n)}}),ot.timers=[],ot.fx.tick=function(){var t,e=0,i=ot.timers;for(re=ot.now();e<i.length;e++)t=i[e],t()||i[e]!==t||i.splice(e--,1);
i.length||ot.fx.stop(),re=void 0},ot.fx.timer=function(t){ot.timers.push(t),t()?ot.fx.start():ot.timers.pop()},ot.fx.interval=13,ot.fx.start=function(){oe||(oe=t.setInterval(ot.fx.tick,ot.fx.interval))},ot.fx.stop=function(){t.clearInterval(oe),oe=null},ot.fx.speeds={slow:600,fast:200,_default:400},ot.fn.delay=function(e,i){return e=ot.fx?ot.fx.speeds[e]||e:e,i=i||"fx",this.queue(i,function(i,n){var r=t.setTimeout(i,e);n.stop=function(){t.clearTimeout(r)}})},function(){var t=K.createElement("input"),e=K.createElement("select"),i=e.appendChild(K.createElement("option"));t.type="checkbox",nt.checkOn=""!==t.value,nt.optSelected=i.selected,e.disabled=!0,nt.optDisabled=!i.disabled,t=K.createElement("input"),t.value="t",t.type="radio",nt.radioValue="t"===t.value}();var le,ce=ot.expr.attrHandle;ot.fn.extend({attr:function(t,e){return _t(this,ot.attr,t,e,arguments.length>1)},removeAttr:function(t){return this.each(function(){ot.removeAttr(this,t)})}}),ot.extend({attr:function(t,e,i){var n,r,o=t.nodeType;if(3!==o&&8!==o&&2!==o)return"undefined"==typeof t.getAttribute?ot.prop(t,e,i):(1===o&&ot.isXMLDoc(t)||(e=e.toLowerCase(),r=ot.attrHooks[e]||(ot.expr.match.bool.test(e)?le:void 0)),void 0!==i?null===i?void ot.removeAttr(t,e):r&&"set"in r&&void 0!==(n=r.set(t,i,e))?n:(t.setAttribute(e,i+""),i):r&&"get"in r&&null!==(n=r.get(t,e))?n:(n=ot.find.attr(t,e),null==n?void 0:n))},attrHooks:{type:{set:function(t,e){if(!nt.radioValue&&"radio"===e&&ot.nodeName(t,"input")){var i=t.value;return t.setAttribute("type",e),i&&(t.value=i),e}}}},removeAttr:function(t,e){var i,n,r=0,o=e&&e.match(kt);if(o&&1===t.nodeType)for(;i=o[r++];)n=ot.propFix[i]||i,ot.expr.match.bool.test(i)&&(t[n]=!1),t.removeAttribute(i)}}),le={set:function(t,e,i){return e===!1?ot.removeAttr(t,i):t.setAttribute(i,i),i}},ot.each(ot.expr.match.bool.source.match(/\w+/g),function(t,e){var i=ce[e]||ot.find.attr;ce[e]=function(t,e,n){var r,o;return n||(o=ce[e],ce[e]=r,r=null!=i(t,e,n)?e.toLowerCase():null,ce[e]=o),r}});var ue=/^(?:input|select|textarea|button)$/i,he=/^(?:a|area)$/i;ot.fn.extend({prop:function(t,e){return _t(this,ot.prop,t,e,arguments.length>1)},removeProp:function(t){return this.each(function(){delete this[ot.propFix[t]||t]})}}),ot.extend({prop:function(t,e,i){var n,r,o=t.nodeType;if(3!==o&&8!==o&&2!==o)return 1===o&&ot.isXMLDoc(t)||(e=ot.propFix[e]||e,r=ot.propHooks[e]),void 0!==i?r&&"set"in r&&void 0!==(n=r.set(t,i,e))?n:t[e]=i:r&&"get"in r&&null!==(n=r.get(t,e))?n:t[e]},propHooks:{tabIndex:{get:function(t){var e=ot.find.attr(t,"tabindex");return e?parseInt(e,10):ue.test(t.nodeName)||he.test(t.nodeName)&&t.href?0:-1}}},propFix:{"for":"htmlFor","class":"className"}}),nt.optSelected||(ot.propHooks.selected={get:function(t){var e=t.parentNode;return e&&e.parentNode&&e.parentNode.selectedIndex,null},set:function(t){var e=t.parentNode;e&&(e.selectedIndex,e.parentNode&&e.parentNode.selectedIndex)}}),ot.each(["tabIndex","readOnly","maxLength","cellSpacing","cellPadding","rowSpan","colSpan","useMap","frameBorder","contentEditable"],function(){ot.propFix[this.toLowerCase()]=this});var de=/[\t\r\n\f]/g;ot.fn.extend({addClass:function(t){var e,i,n,r,o,a,s,l=0;if(ot.isFunction(t))return this.each(function(e){ot(this).addClass(t.call(this,e,W(this)))});if("string"==typeof t&&t)for(e=t.match(kt)||[];i=this[l++];)if(r=W(i),n=1===i.nodeType&&(" "+r+" ").replace(de," ")){for(a=0;o=e[a++];)n.indexOf(" "+o+" ")<0&&(n+=o+" ");s=ot.trim(n),r!==s&&i.setAttribute("class",s)}return this},removeClass:function(t){var e,i,n,r,o,a,s,l=0;if(ot.isFunction(t))return this.each(function(e){ot(this).removeClass(t.call(this,e,W(this)))});if(!arguments.length)return this.attr("class","");if("string"==typeof t&&t)for(e=t.match(kt)||[];i=this[l++];)if(r=W(i),n=1===i.nodeType&&(" "+r+" ").replace(de," ")){for(a=0;o=e[a++];)for(;n.indexOf(" "+o+" ")>-1;)n=n.replace(" "+o+" "," ");s=ot.trim(n),r!==s&&i.setAttribute("class",s)}return this},toggleClass:function(t,e){var i=typeof t;return"boolean"==typeof e&&"string"===i?e?this.addClass(t):this.removeClass(t):ot.isFunction(t)?this.each(function(i){ot(this).toggleClass(t.call(this,i,W(this),e),e)}):this.each(function(){var e,n,r,o;if("string"===i)for(n=0,r=ot(this),o=t.match(kt)||[];e=o[n++];)r.hasClass(e)?r.removeClass(e):r.addClass(e);else void 0!==t&&"boolean"!==i||(e=W(this),e&&Ct.set(this,"__className__",e),this.setAttribute&&this.setAttribute("class",e||t===!1?"":Ct.get(this,"__className__")||""))})},hasClass:function(t){var e,i,n=0;for(e=" "+t+" ";i=this[n++];)if(1===i.nodeType&&(" "+W(i)+" ").replace(de," ").indexOf(e)>-1)return!0;return!1}});var pe=/\r/g,fe=/[\x20\t\r\n\f]+/g;ot.fn.extend({val:function(t){var e,i,n,r=this[0];{if(arguments.length)return n=ot.isFunction(t),this.each(function(i){var r;1===this.nodeType&&(r=n?t.call(this,i,ot(this).val()):t,null==r?r="":"number"==typeof r?r+="":ot.isArray(r)&&(r=ot.map(r,function(t){return null==t?"":t+""})),e=ot.valHooks[this.type]||ot.valHooks[this.nodeName.toLowerCase()],e&&"set"in e&&void 0!==e.set(this,r,"value")||(this.value=r))});if(r)return e=ot.valHooks[r.type]||ot.valHooks[r.nodeName.toLowerCase()],e&&"get"in e&&void 0!==(i=e.get(r,"value"))?i:(i=r.value,"string"==typeof i?i.replace(pe,""):null==i?"":i)}}}),ot.extend({valHooks:{option:{get:function(t){var e=ot.find.attr(t,"value");return null!=e?e:ot.trim(ot.text(t)).replace(fe," ")}},select:{get:function(t){for(var e,i,n=t.options,r=t.selectedIndex,o="select-one"===t.type||0>r,a=o?null:[],s=o?r+1:n.length,l=0>r?s:o?r:0;s>l;l++)if(i=n[l],(i.selected||l===r)&&(nt.optDisabled?!i.disabled:null===i.getAttribute("disabled"))&&(!i.parentNode.disabled||!ot.nodeName(i.parentNode,"optgroup"))){if(e=ot(i).val(),o)return e;a.push(e)}return a},set:function(t,e){for(var i,n,r=t.options,o=ot.makeArray(e),a=r.length;a--;)n=r[a],(n.selected=ot.inArray(ot.valHooks.option.get(n),o)>-1)&&(i=!0);return i||(t.selectedIndex=-1),o}}}}),ot.each(["radio","checkbox"],function(){ot.valHooks[this]={set:function(t,e){return ot.isArray(e)?t.checked=ot.inArray(ot(t).val(),e)>-1:void 0}},nt.checkOn||(ot.valHooks[this].get=function(t){return null===t.getAttribute("value")?"on":t.value})});var ge=/^(?:focusinfocus|focusoutblur)$/;ot.extend(ot.event,{trigger:function(e,i,n,r){var o,a,s,l,c,u,h,d=[n||K],p=it.call(e,"type")?e.type:e,f=it.call(e,"namespace")?e.namespace.split("."):[];if(a=s=n=n||K,3!==n.nodeType&&8!==n.nodeType&&!ge.test(p+ot.event.triggered)&&(p.indexOf(".")>-1&&(f=p.split("."),p=f.shift(),f.sort()),c=p.indexOf(":")<0&&"on"+p,e=e[ot.expando]?e:new ot.Event(p,"object"==typeof e&&e),e.isTrigger=r?2:3,e.namespace=f.join("."),e.rnamespace=e.namespace?new RegExp("(^|\\.)"+f.join("\\.(?:.*\\.|)")+"(\\.|$)"):null,e.result=void 0,e.target||(e.target=n),i=null==i?[e]:ot.makeArray(i,[e]),h=ot.event.special[p]||{},r||!h.trigger||h.trigger.apply(n,i)!==!1)){if(!r&&!h.noBubble&&!ot.isWindow(n)){for(l=h.delegateType||p,ge.test(l+p)||(a=a.parentNode);a;a=a.parentNode)d.push(a),s=a;s===(n.ownerDocument||K)&&d.push(s.defaultView||s.parentWindow||t)}for(o=0;(a=d[o++])&&!e.isPropagationStopped();)e.type=o>1?l:h.bindType||p,u=(Ct.get(a,"events")||{})[e.type]&&Ct.get(a,"handle"),u&&u.apply(a,i),u=c&&a[c],u&&u.apply&&St(a)&&(e.result=u.apply(a,i),e.result===!1&&e.preventDefault());return e.type=p,r||e.isDefaultPrevented()||h._default&&h._default.apply(d.pop(),i)!==!1||!St(n)||c&&ot.isFunction(n[p])&&!ot.isWindow(n)&&(s=n[c],s&&(n[c]=null),ot.event.triggered=p,n[p](),ot.event.triggered=void 0,s&&(n[c]=s)),e.result}},simulate:function(t,e,i){var n=ot.extend(new ot.Event,i,{type:t,isSimulated:!0});ot.event.trigger(n,null,e)}}),ot.fn.extend({trigger:function(t,e){return this.each(function(){ot.event.trigger(t,e,this)})},triggerHandler:function(t,e){var i=this[0];return i?ot.event.trigger(t,e,i,!0):void 0}}),ot.each("blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu".split(" "),function(t,e){ot.fn[e]=function(t,i){return arguments.length>0?this.on(e,null,t,i):this.trigger(e)}}),ot.fn.extend({hover:function(t,e){return this.mouseenter(t).mouseleave(e||t)}}),nt.focusin="onfocusin"in t,nt.focusin||ot.each({focus:"focusin",blur:"focusout"},function(t,e){var i=function(t){ot.event.simulate(e,t.target,ot.event.fix(t))};ot.event.special[e]={setup:function(){var n=this.ownerDocument||this,r=Ct.access(n,e);r||n.addEventListener(t,i,!0),Ct.access(n,e,(r||0)+1)},teardown:function(){var n=this.ownerDocument||this,r=Ct.access(n,e)-1;r?Ct.access(n,e,r):(n.removeEventListener(t,i,!0),Ct.remove(n,e))}}});var me=t.location,ve=ot.now(),ye=/\?/;ot.parseJSON=function(t){return JSON.parse(t+"")},ot.parseXML=function(e){var i;if(!e||"string"!=typeof e)return null;try{i=(new t.DOMParser).parseFromString(e,"text/xml")}catch(n){i=void 0}return i&&!i.getElementsByTagName("parsererror").length||ot.error("Invalid XML: "+e),i};var be=/#.*$/,xe=/([?&])_=[^&]*/,ke=/^(.*?):[ \t]*([^\r\n]*)$/gm,we=/^(?:about|app|app-storage|.+-extension|file|res|widget):$/,_e=/^(?:GET|HEAD)$/,Se=/^\/\//,Ce={},De={},Pe="*/".concat("*"),Me=K.createElement("a");Me.href=me.href,ot.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:me.href,type:"GET",isLocal:we.test(me.protocol),global:!0,processData:!0,async:!0,contentType:"application/x-www-form-urlencoded; charset=UTF-8",accepts:{"*":Pe,text:"text/plain",html:"text/html",xml:"application/xml, text/xml",json:"application/json, text/javascript"},contents:{xml:/\bxml\b/,html:/\bhtml/,json:/\bjson\b/},responseFields:{xml:"responseXML",text:"responseText",json:"responseJSON"},converters:{"* text":String,"text html":!0,"text json":ot.parseJSON,"text xml":ot.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(t,e){return e?V(V(t,ot.ajaxSettings),e):V(ot.ajaxSettings,t)},ajaxPrefilter:j(Ce),ajaxTransport:j(De),ajax:function(e,i){function n(e,i,n,s){var c,h,y,b,k,_=i;2!==x&&(x=2,l&&t.clearTimeout(l),r=void 0,a=s||"",w.readyState=e>0?4:0,c=e>=200&&300>e||304===e,n&&(b=q(d,w,n)),b=Y(d,b,w,c),c?(d.ifModified&&(k=w.getResponseHeader("Last-Modified"),k&&(ot.lastModified[o]=k),k=w.getResponseHeader("etag"),k&&(ot.etag[o]=k)),204===e||"HEAD"===d.type?_="nocontent":304===e?_="notmodified":(_=b.state,h=b.data,y=b.error,c=!y)):(y=_,!e&&_||(_="error",0>e&&(e=0))),w.status=e,w.statusText=(i||_)+"",c?g.resolveWith(p,[h,_,w]):g.rejectWith(p,[w,_,y]),w.statusCode(v),v=void 0,u&&f.trigger(c?"ajaxSuccess":"ajaxError",[w,d,c?h:y]),m.fireWith(p,[w,_]),u&&(f.trigger("ajaxComplete",[w,d]),--ot.active||ot.event.trigger("ajaxStop")))}"object"==typeof e&&(i=e,e=void 0),i=i||{};var r,o,a,s,l,c,u,h,d=ot.ajaxSetup({},i),p=d.context||d,f=d.context&&(p.nodeType||p.jquery)?ot(p):ot.event,g=ot.Deferred(),m=ot.Callbacks("once memory"),v=d.statusCode||{},y={},b={},x=0,k="canceled",w={readyState:0,getResponseHeader:function(t){var e;if(2===x){if(!s)for(s={};e=ke.exec(a);)s[e[1].toLowerCase()]=e[2];e=s[t.toLowerCase()]}return null==e?null:e},getAllResponseHeaders:function(){return 2===x?a:null},setRequestHeader:function(t,e){var i=t.toLowerCase();return x||(t=b[i]=b[i]||t,y[t]=e),this},overrideMimeType:function(t){return x||(d.mimeType=t),this},statusCode:function(t){var e;if(t)if(2>x)for(e in t)v[e]=[v[e],t[e]];else w.always(t[w.status]);return this},abort:function(t){var e=t||k;return r&&r.abort(e),n(0,e),this}};if(g.promise(w).complete=m.add,w.success=w.done,w.error=w.fail,d.url=((e||d.url||me.href)+"").replace(be,"").replace(Se,me.protocol+"//"),d.type=i.method||i.type||d.method||d.type,d.dataTypes=ot.trim(d.dataType||"*").toLowerCase().match(kt)||[""],null==d.crossDomain){c=K.createElement("a");try{c.href=d.url,c.href=c.href,d.crossDomain=Me.protocol+"//"+Me.host!=c.protocol+"//"+c.host}catch(_){d.crossDomain=!0}}if(d.data&&d.processData&&"string"!=typeof d.data&&(d.data=ot.param(d.data,d.traditional)),z(Ce,d,i,w),2===x)return w;u=ot.event&&d.global,u&&0===ot.active++&&ot.event.trigger("ajaxStart"),d.type=d.type.toUpperCase(),d.hasContent=!_e.test(d.type),o=d.url,d.hasContent||(d.data&&(o=d.url+=(ye.test(o)?"&":"?")+d.data,delete d.data),d.cache===!1&&(d.url=xe.test(o)?o.replace(xe,"$1_="+ve++):o+(ye.test(o)?"&":"?")+"_="+ve++)),d.ifModified&&(ot.lastModified[o]&&w.setRequestHeader("If-Modified-Since",ot.lastModified[o]),ot.etag[o]&&w.setRequestHeader("If-None-Match",ot.etag[o])),(d.data&&d.hasContent&&d.contentType!==!1||i.contentType)&&w.setRequestHeader("Content-Type",d.contentType),w.setRequestHeader("Accept",d.dataTypes[0]&&d.accepts[d.dataTypes[0]]?d.accepts[d.dataTypes[0]]+("*"!==d.dataTypes[0]?", "+Pe+"; q=0.01":""):d.accepts["*"]);for(h in d.headers)w.setRequestHeader(h,d.headers[h]);if(d.beforeSend&&(d.beforeSend.call(p,w,d)===!1||2===x))return w.abort();k="abort";for(h in{success:1,error:1,complete:1})w[h](d[h]);if(r=z(De,d,i,w)){if(w.readyState=1,u&&f.trigger("ajaxSend",[w,d]),2===x)return w;d.async&&d.timeout>0&&(l=t.setTimeout(function(){w.abort("timeout")},d.timeout));try{x=1,r.send(y,n)}catch(_){if(!(2>x))throw _;n(-1,_)}}else n(-1,"No Transport");return w},getJSON:function(t,e,i){return ot.get(t,e,i,"json")},getScript:function(t,e){return ot.get(t,void 0,e,"script")}}),ot.each(["get","post"],function(t,e){ot[e]=function(t,i,n,r){return ot.isFunction(i)&&(r=r||n,n=i,i=void 0),ot.ajax(ot.extend({url:t,type:e,dataType:r,data:i,success:n},ot.isPlainObject(t)&&t))}}),ot._evalUrl=function(t){return ot.ajax({url:t,type:"GET",dataType:"script",async:!1,global:!1,"throws":!0})},ot.fn.extend({wrapAll:function(t){var e;return ot.isFunction(t)?this.each(function(e){ot(this).wrapAll(t.call(this,e))}):(this[0]&&(e=ot(t,this[0].ownerDocument).eq(0).clone(!0),this[0].parentNode&&e.insertBefore(this[0]),e.map(function(){for(var t=this;t.firstElementChild;)t=t.firstElementChild;return t}).append(this)),this)},wrapInner:function(t){return ot.isFunction(t)?this.each(function(e){ot(this).wrapInner(t.call(this,e))}):this.each(function(){var e=ot(this),i=e.contents();i.length?i.wrapAll(t):e.append(t)})},wrap:function(t){var e=ot.isFunction(t);return this.each(function(i){ot(this).wrapAll(e?t.call(this,i):t)})},unwrap:function(){return this.parent().each(function(){ot.nodeName(this,"body")||ot(this).replaceWith(this.childNodes)}).end()}}),ot.expr.filters.hidden=function(t){return!ot.expr.filters.visible(t)},ot.expr.filters.visible=function(t){return t.offsetWidth>0||t.offsetHeight>0||t.getClientRects().length>0};var Ie=/%20/g,Te=/\[\]$/,Ae=/\r?\n/g,Fe=/^(?:submit|button|image|reset|file)$/i,Ne=/^(?:input|select|textarea|keygen)/i;ot.param=function(t,e){var i,n=[],r=function(t,e){e=ot.isFunction(e)?e():null==e?"":e,n[n.length]=encodeURIComponent(t)+"="+encodeURIComponent(e)};if(void 0===e&&(e=ot.ajaxSettings&&ot.ajaxSettings.traditional),ot.isArray(t)||t.jquery&&!ot.isPlainObject(t))ot.each(t,function(){r(this.name,this.value)});else for(i in t)$(i,t[i],e,r);return n.join("&").replace(Ie,"+")},ot.fn.extend({serialize:function(){return ot.param(this.serializeArray())},serializeArray:function(){return this.map(function(){var t=ot.prop(this,"elements");return t?ot.makeArray(t):this}).filter(function(){var t=this.type;return this.name&&!ot(this).is(":disabled")&&Ne.test(this.nodeName)&&!Fe.test(t)&&(this.checked||!Nt.test(t))}).map(function(t,e){var i=ot(this).val();return null==i?null:ot.isArray(i)?ot.map(i,function(t){return{name:e.name,value:t.replace(Ae,"\r\n")}}):{name:e.name,value:i.replace(Ae,"\r\n")}}).get()}}),ot.ajaxSettings.xhr=function(){try{return new t.XMLHttpRequest}catch(e){}};var Le={0:200,1223:204},Oe=ot.ajaxSettings.xhr();nt.cors=!!Oe&&"withCredentials"in Oe,nt.ajax=Oe=!!Oe,ot.ajaxTransport(function(e){var i,n;return nt.cors||Oe&&!e.crossDomain?{send:function(r,o){var a,s=e.xhr();if(s.open(e.type,e.url,e.async,e.username,e.password),e.xhrFields)for(a in e.xhrFields)s[a]=e.xhrFields[a];e.mimeType&&s.overrideMimeType&&s.overrideMimeType(e.mimeType),e.crossDomain||r["X-Requested-With"]||(r["X-Requested-With"]="XMLHttpRequest");for(a in r)s.setRequestHeader(a,r[a]);i=function(t){return function(){i&&(i=n=s.onload=s.onerror=s.onabort=s.onreadystatechange=null,"abort"===t?s.abort():"error"===t?"number"!=typeof s.status?o(0,"error"):o(s.status,s.statusText):o(Le[s.status]||s.status,s.statusText,"text"!==(s.responseType||"text")||"string"!=typeof s.responseText?{binary:s.response}:{text:s.responseText},s.getAllResponseHeaders()))}},s.onload=i(),n=s.onerror=i("error"),void 0!==s.onabort?s.onabort=n:s.onreadystatechange=function(){4===s.readyState&&t.setTimeout(function(){i&&n()})},i=i("abort");try{s.send(e.hasContent&&e.data||null)}catch(l){if(i)throw l}},abort:function(){i&&i()}}:void 0}),ot.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},contents:{script:/\b(?:java|ecma)script\b/},converters:{"text script":function(t){return ot.globalEval(t),t}}}),ot.ajaxPrefilter("script",function(t){void 0===t.cache&&(t.cache=!1),t.crossDomain&&(t.type="GET")}),ot.ajaxTransport("script",function(t){if(t.crossDomain){var e,i;return{send:function(n,r){e=ot("<script>").prop({charset:t.scriptCharset,src:t.url}).on("load error",i=function(t){e.remove(),i=null,t&&r("error"===t.type?404:200,t.type)}),K.head.appendChild(e[0])},abort:function(){i&&i()}}}});var Ee=[],He=/(=)\?(?=&|$)|\?\?/;ot.ajaxSetup({jsonp:"callback",jsonpCallback:function(){var t=Ee.pop()||ot.expando+"_"+ve++;return this[t]=!0,t}}),ot.ajaxPrefilter("json jsonp",function(e,i,n){var r,o,a,s=e.jsonp!==!1&&(He.test(e.url)?"url":"string"==typeof e.data&&0===(e.contentType||"").indexOf("application/x-www-form-urlencoded")&&He.test(e.data)&&"data");return s||"jsonp"===e.dataTypes[0]?(r=e.jsonpCallback=ot.isFunction(e.jsonpCallback)?e.jsonpCallback():e.jsonpCallback,s?e[s]=e[s].replace(He,"$1"+r):e.jsonp!==!1&&(e.url+=(ye.test(e.url)?"&":"?")+e.jsonp+"="+r),e.converters["script json"]=function(){return a||ot.error(r+" was not called"),a[0]},e.dataTypes[0]="json",o=t[r],t[r]=function(){a=arguments},n.always(function(){void 0===o?ot(t).removeProp(r):t[r]=o,e[r]&&(e.jsonpCallback=i.jsonpCallback,Ee.push(r)),a&&ot.isFunction(o)&&o(a[0]),a=o=void 0}),"script"):void 0}),ot.parseHTML=function(t,e,i){if(!t||"string"!=typeof t)return null;"boolean"==typeof e&&(i=e,e=!1),e=e||K;var n=ft.exec(t),r=!i&&[];return n?[e.createElement(n[1])]:(n=d([t],e,r),r&&r.length&&ot(r).remove(),ot.merge([],n.childNodes))};var Re=ot.fn.load;ot.fn.load=function(t,e,i){if("string"!=typeof t&&Re)return Re.apply(this,arguments);var n,r,o,a=this,s=t.indexOf(" ");return s>-1&&(n=ot.trim(t.slice(s)),t=t.slice(0,s)),ot.isFunction(e)?(i=e,e=void 0):e&&"object"==typeof e&&(r="POST"),a.length>0&&ot.ajax({url:t,type:r||"GET",dataType:"html",data:e}).done(function(t){o=arguments,a.html(n?ot("<div>").append(ot.parseHTML(t)).find(n):t)}).always(i&&function(t,e){a.each(function(){i.apply(this,o||[t.responseText,e,t])})}),this},ot.each(["ajaxStart","ajaxStop","ajaxComplete","ajaxError","ajaxSuccess","ajaxSend"],function(t,e){ot.fn[e]=function(t){return this.on(e,t)}}),ot.expr.filters.animated=function(t){return ot.grep(ot.timers,function(e){return t===e.elem}).length},ot.offset={setOffset:function(t,e,i){var n,r,o,a,s,l,c,u=ot.css(t,"position"),h=ot(t),d={};"static"===u&&(t.style.position="relative"),s=h.offset(),o=ot.css(t,"top"),l=ot.css(t,"left"),c=("absolute"===u||"fixed"===u)&&(o+l).indexOf("auto")>-1,c?(n=h.position(),a=n.top,r=n.left):(a=parseFloat(o)||0,r=parseFloat(l)||0),ot.isFunction(e)&&(e=e.call(t,i,ot.extend({},s))),null!=e.top&&(d.top=e.top-s.top+a),null!=e.left&&(d.left=e.left-s.left+r),"using"in e?e.using.call(t,d):h.css(d)}},ot.fn.extend({offset:function(t){if(arguments.length)return void 0===t?this:this.each(function(e){ot.offset.setOffset(this,t,e)});var e,i,n=this[0],r={top:0,left:0},o=n&&n.ownerDocument;if(o)return e=o.documentElement,ot.contains(e,n)?(r=n.getBoundingClientRect(),i=U(o),{top:r.top+i.pageYOffset-e.clientTop,left:r.left+i.pageXOffset-e.clientLeft}):r},position:function(){if(this[0]){var t,e,i=this[0],n={top:0,left:0};return"fixed"===ot.css(i,"position")?e=i.getBoundingClientRect():(t=this.offsetParent(),e=this.offset(),ot.nodeName(t[0],"html")||(n=t.offset()),n.top+=ot.css(t[0],"borderTopWidth",!0),n.left+=ot.css(t[0],"borderLeftWidth",!0)),{top:e.top-n.top-ot.css(i,"marginTop",!0),left:e.left-n.left-ot.css(i,"marginLeft",!0)}}},offsetParent:function(){return this.map(function(){for(var t=this.offsetParent;t&&"static"===ot.css(t,"position");)t=t.offsetParent;return t||Qt})}}),ot.each({scrollLeft:"pageXOffset",scrollTop:"pageYOffset"},function(t,e){var i="pageYOffset"===e;ot.fn[t]=function(n){return _t(this,function(t,n,r){var o=U(t);return void 0===r?o?o[e]:t[n]:void(o?o.scrollTo(i?o.pageXOffset:r,i?r:o.pageYOffset):t[n]=r)},t,n,arguments.length)}}),ot.each(["top","left"],function(t,e){ot.cssHooks[e]=P(nt.pixelPosition,function(t,i){return i?(i=D(t,e),Kt.test(i)?ot(t).position()[e]+"px":i):void 0})}),ot.each({Height:"height",Width:"width"},function(t,e){ot.each({padding:"inner"+t,content:e,"":"outer"+t},function(i,n){ot.fn[n]=function(n,r){var o=arguments.length&&(i||"boolean"!=typeof n),a=i||(n===!0||r===!0?"margin":"border");return _t(this,function(e,i,n){var r;return ot.isWindow(e)?e.document.documentElement["client"+t]:9===e.nodeType?(r=e.documentElement,Math.max(e.body["scroll"+t],r["scroll"+t],e.body["offset"+t],r["offset"+t],r["client"+t])):void 0===n?ot.css(e,i,a):ot.style(e,i,n,a)},e,o?n:void 0,o,null)}})}),ot.fn.extend({bind:function(t,e,i){return this.on(t,null,e,i)},unbind:function(t,e){return this.off(t,null,e)},delegate:function(t,e,i,n){return this.on(e,t,i,n)},undelegate:function(t,e,i){return 1===arguments.length?this.off(t,"**"):this.off(e,t||"**",i)},size:function(){return this.length}}),ot.fn.andSelf=ot.fn.addBack,"function"==typeof define&&define.amd&&define("jquery",[],function(){return ot});var Be=t.jQuery,We=t.$;return ot.noConflict=function(e){return t.$===ot&&(t.$=We),e&&t.jQuery===ot&&(t.jQuery=Be),ot},e||(t.jQuery=t.$=ot),ot}),function(t){"function"==typeof define&&define.amd?define(["jquery"],t):t(jQuery)}(function(t){function e(e,n){var r,o,a,s=e.nodeName.toLowerCase();return"area"===s?(r=e.parentNode,o=r.name,e.href&&o&&"map"===r.nodeName.toLowerCase()?(a=t("img[usemap='#"+o+"']")[0],!!a&&i(a)):!1):(/^(input|select|textarea|button|object)$/.test(s)?!e.disabled:"a"===s?e.href||n:n)&&i(e)}function i(e){return t.expr.filters.visible(e)&&!t(e).parents().addBack().filter(function(){return"hidden"===t.css(this,"visibility")}).length}t.ui=t.ui||{},t.extend(t.ui,{version:"1.11.4",keyCode:{BACKSPACE:8,COMMA:188,DELETE:46,DOWN:40,END:35,ENTER:13,ESCAPE:27,HOME:36,LEFT:37,PAGE_DOWN:34,PAGE_UP:33,PERIOD:190,RIGHT:39,SPACE:32,TAB:9,UP:38}}),t.fn.extend({scrollParent:function(e){var i=this.css("position"),n="absolute"===i,r=e?/(auto|scroll|hidden)/:/(auto|scroll)/,o=this.parents().filter(function(){var e=t(this);return n&&"static"===e.css("position")?!1:r.test(e.css("overflow")+e.css("overflow-y")+e.css("overflow-x"))}).eq(0);return"fixed"!==i&&o.length?o:t(this[0].ownerDocument||document)},uniqueId:function(){var t=0;return function(){return this.each(function(){this.id||(this.id="ui-id-"+ ++t)})}}(),removeUniqueId:function(){return this.each(function(){/^ui-id-\d+$/.test(this.id)&&t(this).removeAttr("id")})}}),t.extend(t.expr[":"],{data:t.expr.createPseudo?t.expr.createPseudo(function(e){return function(i){return!!t.data(i,e)}}):function(e,i,n){return!!t.data(e,n[3])},focusable:function(i){return e(i,!isNaN(t.attr(i,"tabindex")))},tabbable:function(i){var n=t.attr(i,"tabindex"),r=isNaN(n);return(r||n>=0)&&e(i,!r)}}),t("<a>").outerWidth(1).jquery||t.each(["Width","Height"],function(e,i){function n(e,i,n,o){return t.each(r,function(){i-=parseFloat(t.css(e,"padding"+this))||0,n&&(i-=parseFloat(t.css(e,"border"+this+"Width"))||0),o&&(i-=parseFloat(t.css(e,"margin"+this))||0)}),i}var r="Width"===i?["Left","Right"]:["Top","Bottom"],o=i.toLowerCase(),a={innerWidth:t.fn.innerWidth,innerHeight:t.fn.innerHeight,outerWidth:t.fn.outerWidth,outerHeight:t.fn.outerHeight};t.fn["inner"+i]=function(e){return void 0===e?a["inner"+i].call(this):this.each(function(){t(this).css(o,n(this,e)+"px")})},t.fn["outer"+i]=function(e,r){return"number"!=typeof e?a["outer"+i].call(this,e):this.each(function(){t(this).css(o,n(this,e,!0,r)+"px")})}}),t.fn.addBack||(t.fn.addBack=function(t){return this.add(null==t?this.prevObject:this.prevObject.filter(t))}),t("<a>").data("a-b","a").removeData("a-b").data("a-b")&&(t.fn.removeData=function(e){return function(i){return arguments.length?e.call(this,t.camelCase(i)):e.call(this)}}(t.fn.removeData)),t.ui.ie=!!/msie [\w.]+/.exec(navigator.userAgent.toLowerCase()),t.fn.extend({focus:function(e){return function(i,n){return"number"==typeof i?this.each(function(){var e=this;setTimeout(function(){t(e).focus(),n&&n.call(e)},i)}):e.apply(this,arguments)}}(t.fn.focus),disableSelection:function(){var t="onselectstart"in document.createElement("div")?"selectstart":"mousedown";return function(){return this.bind(t+".ui-disableSelection",function(t){t.preventDefault()})}}(),enableSelection:function(){return this.unbind(".ui-disableSelection")},zIndex:function(e){if(void 0!==e)return this.css("zIndex",e);if(this.length)for(var i,n,r=t(this[0]);r.length&&r[0]!==document;){if(i=r.css("position"),("absolute"===i||"relative"===i||"fixed"===i)&&(n=parseInt(r.css("zIndex"),10),!isNaN(n)&&0!==n))return n;r=r.parent()}return 0}}),t.ui.plugin={add:function(e,i,n){var r,o=t.ui[e].prototype;for(r in n)o.plugins[r]=o.plugins[r]||[],o.plugins[r].push([i,n[r]])},call:function(t,e,i,n){var r,o=t.plugins[e];if(o&&(n||t.element[0].parentNode&&11!==t.element[0].parentNode.nodeType))for(r=0;r<o.length;r++)t.options[o[r][0]]&&o[r][1].apply(t.element,i)}}}),function(t){"function"==typeof define&&define.amd?define(["jquery"],t):t(jQuery)}(function(t){var e=0,i=Array.prototype.slice;return t.cleanData=function(e){return function(i){var n,r,o;for(o=0;null!=(r=i[o]);o++)try{n=t._data(r,"events"),n&&n.remove&&t(r).triggerHandler("remove")}catch(a){}e(i)}}(t.cleanData),t.widget=function(e,i,n){var r,o,a,s,l={},c=e.split(".")[0];return e=e.split(".")[1],r=c+"-"+e,n||(n=i,i=t.Widget),t.expr[":"][r.toLowerCase()]=function(e){return!!t.data(e,r)},t[c]=t[c]||{},o=t[c][e],a=t[c][e]=function(t,e){return this._createWidget?void(arguments.length&&this._createWidget(t,e)):new a(t,e)},t.extend(a,o,{version:n.version,_proto:t.extend({},n),_childConstructors:[]}),s=new i,s.options=t.widget.extend({},s.options),t.each(n,function(e,n){return t.isFunction(n)?void(l[e]=function(){var t=function(){return i.prototype[e].apply(this,arguments)},r=function(t){return i.prototype[e].apply(this,t)};return function(){var e,i=this._super,o=this._superApply;return this._super=t,this._superApply=r,e=n.apply(this,arguments),this._super=i,this._superApply=o,e}}()):void(l[e]=n)}),a.prototype=t.widget.extend(s,{widgetEventPrefix:o?s.widgetEventPrefix||e:e},l,{constructor:a,namespace:c,widgetName:e,widgetFullName:r}),o?(t.each(o._childConstructors,function(e,i){var n=i.prototype;t.widget(n.namespace+"."+n.widgetName,a,i._proto)}),delete o._childConstructors):i._childConstructors.push(a),t.widget.bridge(e,a),a},t.widget.extend=function(e){for(var n,r,o=i.call(arguments,1),a=0,s=o.length;s>a;a++)for(n in o[a])r=o[a][n],o[a].hasOwnProperty(n)&&void 0!==r&&(t.isPlainObject(r)?e[n]=t.isPlainObject(e[n])?t.widget.extend({},e[n],r):t.widget.extend({},r):e[n]=r);return e},t.widget.bridge=function(e,n){var r=n.prototype.widgetFullName||e;t.fn[e]=function(o){var a="string"==typeof o,s=i.call(arguments,1),l=this;return a?this.each(function(){var i,n=t.data(this,r);return"instance"===o?(l=n,!1):n?t.isFunction(n[o])&&"_"!==o.charAt(0)?(i=n[o].apply(n,s),i!==n&&void 0!==i?(l=i&&i.jquery?l.pushStack(i.get()):i,!1):void 0):t.error("no such method '"+o+"' for "+e+" widget instance"):t.error("cannot call methods on "+e+" prior to initialization; attempted to call method '"+o+"'")}):(s.length&&(o=t.widget.extend.apply(null,[o].concat(s))),this.each(function(){var e=t.data(this,r);e?(e.option(o||{}),e._init&&e._init()):t.data(this,r,new n(o,this))})),l}},t.Widget=function(){},t.Widget._childConstructors=[],t.Widget.prototype={widgetName:"widget",widgetEventPrefix:"",defaultElement:"<div>",options:{disabled:!1,create:null},_createWidget:function(i,n){n=t(n||this.defaultElement||this)[0],this.element=t(n),this.uuid=e++,this.eventNamespace="."+this.widgetName+this.uuid,this.bindings=t(),this.hoverable=t(),this.focusable=t(),n!==this&&(t.data(n,this.widgetFullName,this),this._on(!0,this.element,{remove:function(t){t.target===n&&this.destroy()}}),this.document=t(n.style?n.ownerDocument:n.document||n),this.window=t(this.document[0].defaultView||this.document[0].parentWindow)),this.options=t.widget.extend({},this.options,this._getCreateOptions(),i),this._create(),this._trigger("create",null,this._getCreateEventData()),this._init()},_getCreateOptions:t.noop,_getCreateEventData:t.noop,_create:t.noop,_init:t.noop,destroy:function(){this._destroy(),this.element.unbind(this.eventNamespace).removeData(this.widgetFullName).removeData(t.camelCase(this.widgetFullName)),this.widget().unbind(this.eventNamespace).removeAttr("aria-disabled").removeClass(this.widgetFullName+"-disabled ui-state-disabled"),this.bindings.unbind(this.eventNamespace),this.hoverable.removeClass("ui-state-hover"),this.focusable.removeClass("ui-state-focus")},_destroy:t.noop,widget:function(){return this.element},option:function(e,i){var n,r,o,a=e;if(0===arguments.length)return t.widget.extend({},this.options);if("string"==typeof e)if(a={},n=e.split("."),e=n.shift(),n.length){for(r=a[e]=t.widget.extend({},this.options[e]),o=0;o<n.length-1;o++)r[n[o]]=r[n[o]]||{},r=r[n[o]];if(e=n.pop(),1===arguments.length)return void 0===r[e]?null:r[e];r[e]=i}else{if(1===arguments.length)return void 0===this.options[e]?null:this.options[e];a[e]=i}return this._setOptions(a),this},_setOptions:function(t){var e;for(e in t)this._setOption(e,t[e]);return this},_setOption:function(t,e){return this.options[t]=e,"disabled"===t&&(this.widget().toggleClass(this.widgetFullName+"-disabled",!!e),e&&(this.hoverable.removeClass("ui-state-hover"),this.focusable.removeClass("ui-state-focus"))),this},enable:function(){return this._setOptions({disabled:!1})},disable:function(){return this._setOptions({disabled:!0})},_on:function(e,i,n){var r,o=this;"boolean"!=typeof e&&(n=i,i=e,e=!1),n?(i=r=t(i),this.bindings=this.bindings.add(i)):(n=i,i=this.element,r=this.widget()),t.each(n,function(n,a){function s(){return e||o.options.disabled!==!0&&!t(this).hasClass("ui-state-disabled")?("string"==typeof a?o[a]:a).apply(o,arguments):void 0}"string"!=typeof a&&(s.guid=a.guid=a.guid||s.guid||t.guid++);var l=n.match(/^([\w:-]*)\s*(.*)$/),c=l[1]+o.eventNamespace,u=l[2];u?r.delegate(u,c,s):i.bind(c,s)})},_off:function(e,i){i=(i||"").split(" ").join(this.eventNamespace+" ")+this.eventNamespace,e.unbind(i).undelegate(i),this.bindings=t(this.bindings.not(e).get()),this.focusable=t(this.focusable.not(e).get()),this.hoverable=t(this.hoverable.not(e).get())},_delay:function(t,e){function i(){return("string"==typeof t?n[t]:t).apply(n,arguments)}var n=this;return setTimeout(i,e||0)},_hoverable:function(e){this.hoverable=this.hoverable.add(e),this._on(e,{mouseenter:function(e){t(e.currentTarget).addClass("ui-state-hover")},mouseleave:function(e){t(e.currentTarget).removeClass("ui-state-hover")}})},_focusable:function(e){this.focusable=this.focusable.add(e),this._on(e,{focusin:function(e){t(e.currentTarget).addClass("ui-state-focus")},focusout:function(e){t(e.currentTarget).removeClass("ui-state-focus")}})},_trigger:function(e,i,n){var r,o,a=this.options[e];if(n=n||{},i=t.Event(i),i.type=(e===this.widgetEventPrefix?e:this.widgetEventPrefix+e).toLowerCase(),i.target=this.element[0],o=i.originalEvent)for(r in o)r in i||(i[r]=o[r]);return this.element.trigger(i,n),!(t.isFunction(a)&&a.apply(this.element[0],[i].concat(n))===!1||i.isDefaultPrevented());
}},t.each({show:"fadeIn",hide:"fadeOut"},function(e,i){t.Widget.prototype["_"+e]=function(n,r,o){"string"==typeof r&&(r={effect:r});var a,s=r?r===!0||"number"==typeof r?i:r.effect||i:e;r=r||{},"number"==typeof r&&(r={duration:r}),a=!t.isEmptyObject(r),r.complete=o,r.delay&&n.delay(r.delay),a&&t.effects&&t.effects.effect[s]?n[e](r):s!==e&&n[s]?n[s](r.duration,r.easing,o):n.queue(function(i){t(this)[e](),o&&o.call(n[0]),i()})}}),t.widget}),function(t){"function"==typeof define&&define.amd?define(["jquery","./widget"],t):t(jQuery)}(function(t){var e=!1;return t(document).mouseup(function(){e=!1}),t.widget("ui.mouse",{version:"1.11.4",options:{cancel:"input,textarea,button,select,option",distance:1,delay:0},_mouseInit:function(){var e=this;this.element.bind("mousedown."+this.widgetName,function(t){return e._mouseDown(t)}).bind("click."+this.widgetName,function(i){return!0===t.data(i.target,e.widgetName+".preventClickEvent")?(t.removeData(i.target,e.widgetName+".preventClickEvent"),i.stopImmediatePropagation(),!1):void 0}),this.started=!1},_mouseDestroy:function(){this.element.unbind("."+this.widgetName),this._mouseMoveDelegate&&this.document.unbind("mousemove."+this.widgetName,this._mouseMoveDelegate).unbind("mouseup."+this.widgetName,this._mouseUpDelegate)},_mouseDown:function(i){if(!e){this._mouseMoved=!1,this._mouseStarted&&this._mouseUp(i),this._mouseDownEvent=i;var n=this,r=1===i.which,o="string"==typeof this.options.cancel&&i.target.nodeName?t(i.target).closest(this.options.cancel).length:!1;return r&&!o&&this._mouseCapture(i)?(this.mouseDelayMet=!this.options.delay,this.mouseDelayMet||(this._mouseDelayTimer=setTimeout(function(){n.mouseDelayMet=!0},this.options.delay)),this._mouseDistanceMet(i)&&this._mouseDelayMet(i)&&(this._mouseStarted=this._mouseStart(i)!==!1,!this._mouseStarted)?(i.preventDefault(),!0):(!0===t.data(i.target,this.widgetName+".preventClickEvent")&&t.removeData(i.target,this.widgetName+".preventClickEvent"),this._mouseMoveDelegate=function(t){return n._mouseMove(t)},this._mouseUpDelegate=function(t){return n._mouseUp(t)},this.document.bind("mousemove."+this.widgetName,this._mouseMoveDelegate).bind("mouseup."+this.widgetName,this._mouseUpDelegate),i.preventDefault(),e=!0,!0)):!0}},_mouseMove:function(e){if(this._mouseMoved){if(t.ui.ie&&(!document.documentMode||document.documentMode<9)&&!e.button)return this._mouseUp(e);if(!e.which)return this._mouseUp(e)}return(e.which||e.button)&&(this._mouseMoved=!0),this._mouseStarted?(this._mouseDrag(e),e.preventDefault()):(this._mouseDistanceMet(e)&&this._mouseDelayMet(e)&&(this._mouseStarted=this._mouseStart(this._mouseDownEvent,e)!==!1,this._mouseStarted?this._mouseDrag(e):this._mouseUp(e)),!this._mouseStarted)},_mouseUp:function(i){return this.document.unbind("mousemove."+this.widgetName,this._mouseMoveDelegate).unbind("mouseup."+this.widgetName,this._mouseUpDelegate),this._mouseStarted&&(this._mouseStarted=!1,i.target===this._mouseDownEvent.target&&t.data(i.target,this.widgetName+".preventClickEvent",!0),this._mouseStop(i)),e=!1,!1},_mouseDistanceMet:function(t){return Math.max(Math.abs(this._mouseDownEvent.pageX-t.pageX),Math.abs(this._mouseDownEvent.pageY-t.pageY))>=this.options.distance},_mouseDelayMet:function(){return this.mouseDelayMet},_mouseStart:function(){},_mouseDrag:function(){},_mouseStop:function(){},_mouseCapture:function(){return!0}})}),function(t){"function"==typeof define&&define.amd?define(["jquery","./core","./mouse","./widget"],t):t(jQuery)}(function(t){return t.widget("ui.draggable",t.ui.mouse,{version:"1.11.4",widgetEventPrefix:"drag",options:{addClasses:!0,appendTo:"parent",axis:!1,connectToSortable:!1,containment:!1,cursor:"auto",cursorAt:!1,grid:!1,handle:!1,helper:"original",iframeFix:!1,opacity:!1,refreshPositions:!1,revert:!1,revertDuration:500,scope:"default",scroll:!0,scrollSensitivity:20,scrollSpeed:20,snap:!1,snapMode:"both",snapTolerance:20,stack:!1,zIndex:!1,drag:null,start:null,stop:null},_create:function(){"original"===this.options.helper&&this._setPositionRelative(),this.options.addClasses&&this.element.addClass("ui-draggable"),this.options.disabled&&this.element.addClass("ui-draggable-disabled"),this._setHandleClassName(),this._mouseInit()},_setOption:function(t,e){this._super(t,e),"handle"===t&&(this._removeHandleClassName(),this._setHandleClassName())},_destroy:function(){return(this.helper||this.element).is(".ui-draggable-dragging")?void(this.destroyOnClear=!0):(this.element.removeClass("ui-draggable ui-draggable-dragging ui-draggable-disabled"),this._removeHandleClassName(),void this._mouseDestroy())},_mouseCapture:function(e){var i=this.options;return this._blurActiveElement(e),this.helper||i.disabled||t(e.target).closest(".ui-resizable-handle").length>0?!1:(this.handle=this._getHandle(e),this.handle?(this._blockFrames(i.iframeFix===!0?"iframe":i.iframeFix),!0):!1)},_blockFrames:function(e){this.iframeBlocks=this.document.find(e).map(function(){var e=t(this);return t("<div>").css("position","absolute").appendTo(e.parent()).outerWidth(e.outerWidth()).outerHeight(e.outerHeight()).offset(e.offset())[0]})},_unblockFrames:function(){this.iframeBlocks&&(this.iframeBlocks.remove(),delete this.iframeBlocks)},_blurActiveElement:function(e){var i=this.document[0];if(this.handleElement.is(e.target))try{i.activeElement&&"body"!==i.activeElement.nodeName.toLowerCase()&&t(i.activeElement).blur()}catch(n){}},_mouseStart:function(e){var i=this.options;return this.helper=this._createHelper(e),this.helper.addClass("ui-draggable-dragging"),this._cacheHelperProportions(),t.ui.ddmanager&&(t.ui.ddmanager.current=this),this._cacheMargins(),this.cssPosition=this.helper.css("position"),this.scrollParent=this.helper.scrollParent(!0),this.offsetParent=this.helper.offsetParent(),this.hasFixedAncestor=this.helper.parents().filter(function(){return"fixed"===t(this).css("position")}).length>0,this.positionAbs=this.element.offset(),this._refreshOffsets(e),this.originalPosition=this.position=this._generatePosition(e,!1),this.originalPageX=e.pageX,this.originalPageY=e.pageY,i.cursorAt&&this._adjustOffsetFromHelper(i.cursorAt),this._setContainment(),this._trigger("start",e)===!1?(this._clear(),!1):(this._cacheHelperProportions(),t.ui.ddmanager&&!i.dropBehaviour&&t.ui.ddmanager.prepareOffsets(this,e),this._normalizeRightBottom(),this._mouseDrag(e,!0),t.ui.ddmanager&&t.ui.ddmanager.dragStart(this,e),!0)},_refreshOffsets:function(t){this.offset={top:this.positionAbs.top-this.margins.top,left:this.positionAbs.left-this.margins.left,scroll:!1,parent:this._getParentOffset(),relative:this._getRelativeOffset()},this.offset.click={left:t.pageX-this.offset.left,top:t.pageY-this.offset.top}},_mouseDrag:function(e,i){if(this.hasFixedAncestor&&(this.offset.parent=this._getParentOffset()),this.position=this._generatePosition(e,!0),this.positionAbs=this._convertPositionTo("absolute"),!i){var n=this._uiHash();if(this._trigger("drag",e,n)===!1)return this._mouseUp({}),!1;this.position=n.position}return this.helper[0].style.left=this.position.left+"px",this.helper[0].style.top=this.position.top+"px",t.ui.ddmanager&&t.ui.ddmanager.drag(this,e),!1},_mouseStop:function(e){var i=this,n=!1;return t.ui.ddmanager&&!this.options.dropBehaviour&&(n=t.ui.ddmanager.drop(this,e)),this.dropped&&(n=this.dropped,this.dropped=!1),"invalid"===this.options.revert&&!n||"valid"===this.options.revert&&n||this.options.revert===!0||t.isFunction(this.options.revert)&&this.options.revert.call(this.element,n)?t(this.helper).animate(this.originalPosition,parseInt(this.options.revertDuration,10),function(){i._trigger("stop",e)!==!1&&i._clear()}):this._trigger("stop",e)!==!1&&this._clear(),!1},_mouseUp:function(e){return this._unblockFrames(),t.ui.ddmanager&&t.ui.ddmanager.dragStop(this,e),this.handleElement.is(e.target)&&this.element.focus(),t.ui.mouse.prototype._mouseUp.call(this,e)},cancel:function(){return this.helper.is(".ui-draggable-dragging")?this._mouseUp({}):this._clear(),this},_getHandle:function(e){return this.options.handle?!!t(e.target).closest(this.element.find(this.options.handle)).length:!0},_setHandleClassName:function(){this.handleElement=this.options.handle?this.element.find(this.options.handle):this.element,this.handleElement.addClass("ui-draggable-handle")},_removeHandleClassName:function(){this.handleElement.removeClass("ui-draggable-handle")},_createHelper:function(e){var i=this.options,n=t.isFunction(i.helper),r=n?t(i.helper.apply(this.element[0],[e])):"clone"===i.helper?this.element.clone().removeAttr("id"):this.element;return r.parents("body").length||r.appendTo("parent"===i.appendTo?this.element[0].parentNode:i.appendTo),n&&r[0]===this.element[0]&&this._setPositionRelative(),r[0]===this.element[0]||/(fixed|absolute)/.test(r.css("position"))||r.css("position","absolute"),r},_setPositionRelative:function(){/^(?:r|a|f)/.test(this.element.css("position"))||(this.element[0].style.position="relative")},_adjustOffsetFromHelper:function(e){"string"==typeof e&&(e=e.split(" ")),t.isArray(e)&&(e={left:+e[0],top:+e[1]||0}),"left"in e&&(this.offset.click.left=e.left+this.margins.left),"right"in e&&(this.offset.click.left=this.helperProportions.width-e.right+this.margins.left),"top"in e&&(this.offset.click.top=e.top+this.margins.top),"bottom"in e&&(this.offset.click.top=this.helperProportions.height-e.bottom+this.margins.top)},_isRootNode:function(t){return/(html|body)/i.test(t.tagName)||t===this.document[0]},_getParentOffset:function(){var e=this.offsetParent.offset(),i=this.document[0];return"absolute"===this.cssPosition&&this.scrollParent[0]!==i&&t.contains(this.scrollParent[0],this.offsetParent[0])&&(e.left+=this.scrollParent.scrollLeft(),e.top+=this.scrollParent.scrollTop()),this._isRootNode(this.offsetParent[0])&&(e={top:0,left:0}),{top:e.top+(parseInt(this.offsetParent.css("borderTopWidth"),10)||0),left:e.left+(parseInt(this.offsetParent.css("borderLeftWidth"),10)||0)}},_getRelativeOffset:function(){if("relative"!==this.cssPosition)return{top:0,left:0};var t=this.element.position(),e=this._isRootNode(this.scrollParent[0]);return{top:t.top-(parseInt(this.helper.css("top"),10)||0)+(e?0:this.scrollParent.scrollTop()),left:t.left-(parseInt(this.helper.css("left"),10)||0)+(e?0:this.scrollParent.scrollLeft())}},_cacheMargins:function(){this.margins={left:parseInt(this.element.css("marginLeft"),10)||0,top:parseInt(this.element.css("marginTop"),10)||0,right:parseInt(this.element.css("marginRight"),10)||0,bottom:parseInt(this.element.css("marginBottom"),10)||0}},_cacheHelperProportions:function(){this.helperProportions={width:this.helper.outerWidth(),height:this.helper.outerHeight()}},_setContainment:function(){var e,i,n,r=this.options,o=this.document[0];return this.relativeContainer=null,r.containment?"window"===r.containment?void(this.containment=[t(window).scrollLeft()-this.offset.relative.left-this.offset.parent.left,t(window).scrollTop()-this.offset.relative.top-this.offset.parent.top,t(window).scrollLeft()+t(window).width()-this.helperProportions.width-this.margins.left,t(window).scrollTop()+(t(window).height()||o.body.parentNode.scrollHeight)-this.helperProportions.height-this.margins.top]):"document"===r.containment?void(this.containment=[0,0,t(o).width()-this.helperProportions.width-this.margins.left,(t(o).height()||o.body.parentNode.scrollHeight)-this.helperProportions.height-this.margins.top]):r.containment.constructor===Array?void(this.containment=r.containment):("parent"===r.containment&&(r.containment=this.helper[0].parentNode),i=t(r.containment),n=i[0],void(n&&(e=/(scroll|auto)/.test(i.css("overflow")),this.containment=[(parseInt(i.css("borderLeftWidth"),10)||0)+(parseInt(i.css("paddingLeft"),10)||0),(parseInt(i.css("borderTopWidth"),10)||0)+(parseInt(i.css("paddingTop"),10)||0),(e?Math.max(n.scrollWidth,n.offsetWidth):n.offsetWidth)-(parseInt(i.css("borderRightWidth"),10)||0)-(parseInt(i.css("paddingRight"),10)||0)-this.helperProportions.width-this.margins.left-this.margins.right,(e?Math.max(n.scrollHeight,n.offsetHeight):n.offsetHeight)-(parseInt(i.css("borderBottomWidth"),10)||0)-(parseInt(i.css("paddingBottom"),10)||0)-this.helperProportions.height-this.margins.top-this.margins.bottom],this.relativeContainer=i))):void(this.containment=null)},_convertPositionTo:function(t,e){e||(e=this.position);var i="absolute"===t?1:-1,n=this._isRootNode(this.scrollParent[0]);return{top:e.top+this.offset.relative.top*i+this.offset.parent.top*i-("fixed"===this.cssPosition?-this.offset.scroll.top:n?0:this.offset.scroll.top)*i,left:e.left+this.offset.relative.left*i+this.offset.parent.left*i-("fixed"===this.cssPosition?-this.offset.scroll.left:n?0:this.offset.scroll.left)*i}},_generatePosition:function(t,e){var i,n,r,o,a=this.options,s=this._isRootNode(this.scrollParent[0]),l=t.pageX,c=t.pageY;return s&&this.offset.scroll||(this.offset.scroll={top:this.scrollParent.scrollTop(),left:this.scrollParent.scrollLeft()}),e&&(this.containment&&(this.relativeContainer?(n=this.relativeContainer.offset(),i=[this.containment[0]+n.left,this.containment[1]+n.top,this.containment[2]+n.left,this.containment[3]+n.top]):i=this.containment,t.pageX-this.offset.click.left<i[0]&&(l=i[0]+this.offset.click.left),t.pageY-this.offset.click.top<i[1]&&(c=i[1]+this.offset.click.top),t.pageX-this.offset.click.left>i[2]&&(l=i[2]+this.offset.click.left),t.pageY-this.offset.click.top>i[3]&&(c=i[3]+this.offset.click.top)),a.grid&&(r=a.grid[1]?this.originalPageY+Math.round((c-this.originalPageY)/a.grid[1])*a.grid[1]:this.originalPageY,c=i?r-this.offset.click.top>=i[1]||r-this.offset.click.top>i[3]?r:r-this.offset.click.top>=i[1]?r-a.grid[1]:r+a.grid[1]:r,o=a.grid[0]?this.originalPageX+Math.round((l-this.originalPageX)/a.grid[0])*a.grid[0]:this.originalPageX,l=i?o-this.offset.click.left>=i[0]||o-this.offset.click.left>i[2]?o:o-this.offset.click.left>=i[0]?o-a.grid[0]:o+a.grid[0]:o),"y"===a.axis&&(l=this.originalPageX),"x"===a.axis&&(c=this.originalPageY)),{top:c-this.offset.click.top-this.offset.relative.top-this.offset.parent.top+("fixed"===this.cssPosition?-this.offset.scroll.top:s?0:this.offset.scroll.top),left:l-this.offset.click.left-this.offset.relative.left-this.offset.parent.left+("fixed"===this.cssPosition?-this.offset.scroll.left:s?0:this.offset.scroll.left)}},_clear:function(){this.helper.removeClass("ui-draggable-dragging"),this.helper[0]===this.element[0]||this.cancelHelperRemoval||this.helper.remove(),this.helper=null,this.cancelHelperRemoval=!1,this.destroyOnClear&&this.destroy()},_normalizeRightBottom:function(){"y"!==this.options.axis&&"auto"!==this.helper.css("right")&&(this.helper.width(this.helper.width()),this.helper.css("right","auto")),"x"!==this.options.axis&&"auto"!==this.helper.css("bottom")&&(this.helper.height(this.helper.height()),this.helper.css("bottom","auto"))},_trigger:function(e,i,n){return n=n||this._uiHash(),t.ui.plugin.call(this,e,[i,n,this],!0),/^(drag|start|stop)/.test(e)&&(this.positionAbs=this._convertPositionTo("absolute"),n.offset=this.positionAbs),t.Widget.prototype._trigger.call(this,e,i,n)},plugins:{},_uiHash:function(){return{helper:this.helper,position:this.position,originalPosition:this.originalPosition,offset:this.positionAbs}}}),t.ui.plugin.add("draggable","connectToSortable",{start:function(e,i,n){var r=t.extend({},i,{item:n.element});n.sortables=[],t(n.options.connectToSortable).each(function(){var i=t(this).sortable("instance");i&&!i.options.disabled&&(n.sortables.push(i),i.refreshPositions(),i._trigger("activate",e,r))})},stop:function(e,i,n){var r=t.extend({},i,{item:n.element});n.cancelHelperRemoval=!1,t.each(n.sortables,function(){var t=this;t.isOver?(t.isOver=0,n.cancelHelperRemoval=!0,t.cancelHelperRemoval=!1,t._storedCSS={position:t.placeholder.css("position"),top:t.placeholder.css("top"),left:t.placeholder.css("left")},t._mouseStop(e),t.options.helper=t.options._helper):(t.cancelHelperRemoval=!0,t._trigger("deactivate",e,r))})},drag:function(e,i,n){t.each(n.sortables,function(){var r=!1,o=this;o.positionAbs=n.positionAbs,o.helperProportions=n.helperProportions,o.offset.click=n.offset.click,o._intersectsWith(o.containerCache)&&(r=!0,t.each(n.sortables,function(){return this.positionAbs=n.positionAbs,this.helperProportions=n.helperProportions,this.offset.click=n.offset.click,this!==o&&this._intersectsWith(this.containerCache)&&t.contains(o.element[0],this.element[0])&&(r=!1),r})),r?(o.isOver||(o.isOver=1,n._parent=i.helper.parent(),o.currentItem=i.helper.appendTo(o.element).data("ui-sortable-item",!0),o.options._helper=o.options.helper,o.options.helper=function(){return i.helper[0]},e.target=o.currentItem[0],o._mouseCapture(e,!0),o._mouseStart(e,!0,!0),o.offset.click.top=n.offset.click.top,o.offset.click.left=n.offset.click.left,o.offset.parent.left-=n.offset.parent.left-o.offset.parent.left,o.offset.parent.top-=n.offset.parent.top-o.offset.parent.top,n._trigger("toSortable",e),n.dropped=o.element,t.each(n.sortables,function(){this.refreshPositions()}),n.currentItem=n.element,o.fromOutside=n),o.currentItem&&(o._mouseDrag(e),i.position=o.position)):o.isOver&&(o.isOver=0,o.cancelHelperRemoval=!0,o.options._revert=o.options.revert,o.options.revert=!1,o._trigger("out",e,o._uiHash(o)),o._mouseStop(e,!0),o.options.revert=o.options._revert,o.options.helper=o.options._helper,o.placeholder&&o.placeholder.remove(),i.helper.appendTo(n._parent),n._refreshOffsets(e),i.position=n._generatePosition(e,!0),n._trigger("fromSortable",e),n.dropped=!1,t.each(n.sortables,function(){this.refreshPositions()}))})}}),t.ui.plugin.add("draggable","cursor",{start:function(e,i,n){var r=t("body"),o=n.options;r.css("cursor")&&(o._cursor=r.css("cursor")),r.css("cursor",o.cursor)},stop:function(e,i,n){var r=n.options;r._cursor&&t("body").css("cursor",r._cursor)}}),t.ui.plugin.add("draggable","opacity",{start:function(e,i,n){var r=t(i.helper),o=n.options;r.css("opacity")&&(o._opacity=r.css("opacity")),r.css("opacity",o.opacity)},stop:function(e,i,n){var r=n.options;r._opacity&&t(i.helper).css("opacity",r._opacity)}}),t.ui.plugin.add("draggable","scroll",{start:function(t,e,i){i.scrollParentNotHidden||(i.scrollParentNotHidden=i.helper.scrollParent(!1)),i.scrollParentNotHidden[0]!==i.document[0]&&"HTML"!==i.scrollParentNotHidden[0].tagName&&(i.overflowOffset=i.scrollParentNotHidden.offset())},drag:function(e,i,n){var r=n.options,o=!1,a=n.scrollParentNotHidden[0],s=n.document[0];a!==s&&"HTML"!==a.tagName?(r.axis&&"x"===r.axis||(n.overflowOffset.top+a.offsetHeight-e.pageY<r.scrollSensitivity?a.scrollTop=o=a.scrollTop+r.scrollSpeed:e.pageY-n.overflowOffset.top<r.scrollSensitivity&&(a.scrollTop=o=a.scrollTop-r.scrollSpeed)),r.axis&&"y"===r.axis||(n.overflowOffset.left+a.offsetWidth-e.pageX<r.scrollSensitivity?a.scrollLeft=o=a.scrollLeft+r.scrollSpeed:e.pageX-n.overflowOffset.left<r.scrollSensitivity&&(a.scrollLeft=o=a.scrollLeft-r.scrollSpeed))):(r.axis&&"x"===r.axis||(e.pageY-t(s).scrollTop()<r.scrollSensitivity?o=t(s).scrollTop(t(s).scrollTop()-r.scrollSpeed):t(window).height()-(e.pageY-t(s).scrollTop())<r.scrollSensitivity&&(o=t(s).scrollTop(t(s).scrollTop()+r.scrollSpeed))),r.axis&&"y"===r.axis||(e.pageX-t(s).scrollLeft()<r.scrollSensitivity?o=t(s).scrollLeft(t(s).scrollLeft()-r.scrollSpeed):t(window).width()-(e.pageX-t(s).scrollLeft())<r.scrollSensitivity&&(o=t(s).scrollLeft(t(s).scrollLeft()+r.scrollSpeed)))),o!==!1&&t.ui.ddmanager&&!r.dropBehaviour&&t.ui.ddmanager.prepareOffsets(n,e)}}),t.ui.plugin.add("draggable","snap",{start:function(e,i,n){var r=n.options;n.snapElements=[],t(r.snap.constructor!==String?r.snap.items||":data(ui-draggable)":r.snap).each(function(){var e=t(this),i=e.offset();this!==n.element[0]&&n.snapElements.push({item:this,width:e.outerWidth(),height:e.outerHeight(),top:i.top,left:i.left})})},drag:function(e,i,n){var r,o,a,s,l,c,u,h,d,p,f=n.options,g=f.snapTolerance,m=i.offset.left,v=m+n.helperProportions.width,y=i.offset.top,b=y+n.helperProportions.height;for(d=n.snapElements.length-1;d>=0;d--)l=n.snapElements[d].left-n.margins.left,c=l+n.snapElements[d].width,u=n.snapElements[d].top-n.margins.top,h=u+n.snapElements[d].height,l-g>v||m>c+g||u-g>b||y>h+g||!t.contains(n.snapElements[d].item.ownerDocument,n.snapElements[d].item)?(n.snapElements[d].snapping&&n.options.snap.release&&n.options.snap.release.call(n.element,e,t.extend(n._uiHash(),{snapItem:n.snapElements[d].item})),n.snapElements[d].snapping=!1):("inner"!==f.snapMode&&(r=Math.abs(u-b)<=g,o=Math.abs(h-y)<=g,a=Math.abs(l-v)<=g,s=Math.abs(c-m)<=g,r&&(i.position.top=n._convertPositionTo("relative",{top:u-n.helperProportions.height,left:0}).top),o&&(i.position.top=n._convertPositionTo("relative",{top:h,left:0}).top),a&&(i.position.left=n._convertPositionTo("relative",{top:0,left:l-n.helperProportions.width}).left),s&&(i.position.left=n._convertPositionTo("relative",{top:0,left:c}).left)),p=r||o||a||s,"outer"!==f.snapMode&&(r=Math.abs(u-y)<=g,o=Math.abs(h-b)<=g,a=Math.abs(l-m)<=g,s=Math.abs(c-v)<=g,r&&(i.position.top=n._convertPositionTo("relative",{top:u,left:0}).top),o&&(i.position.top=n._convertPositionTo("relative",{top:h-n.helperProportions.height,left:0}).top),a&&(i.position.left=n._convertPositionTo("relative",{top:0,left:l}).left),s&&(i.position.left=n._convertPositionTo("relative",{top:0,left:c-n.helperProportions.width}).left)),!n.snapElements[d].snapping&&(r||o||a||s||p)&&n.options.snap.snap&&n.options.snap.snap.call(n.element,e,t.extend(n._uiHash(),{snapItem:n.snapElements[d].item})),n.snapElements[d].snapping=r||o||a||s||p)}}),t.ui.plugin.add("draggable","stack",{start:function(e,i,n){var r,o=n.options,a=t.makeArray(t(o.stack)).sort(function(e,i){return(parseInt(t(e).css("zIndex"),10)||0)-(parseInt(t(i).css("zIndex"),10)||0)});a.length&&(r=parseInt(t(a[0]).css("zIndex"),10)||0,t(a).each(function(e){t(this).css("zIndex",r+e)}),this.css("zIndex",r+a.length))}}),t.ui.plugin.add("draggable","zIndex",{start:function(e,i,n){var r=t(i.helper),o=n.options;r.css("zIndex")&&(o._zIndex=r.css("zIndex")),r.css("zIndex",o.zIndex)},stop:function(e,i,n){var r=n.options;r._zIndex&&t(i.helper).css("zIndex",r._zIndex)}}),t.ui.draggable}),function(t){"function"==typeof define&&define.amd?define(["jquery","./core","./widget","./mouse","./draggable"],t):t(jQuery)}(function(t){return t.widget("ui.droppable",{version:"1.11.1",widgetEventPrefix:"drop",options:{accept:"*",activeClass:!1,addClasses:!0,greedy:!1,hoverClass:!1,scope:"default",tolerance:"intersect",activate:null,deactivate:null,drop:null,out:null,over:null},_create:function(){var e,i=this.options,n=i.accept;if(this.isover=!1,this.isout=!0,i.iframeFix){if(windowTest=this.window.length&&this.window.length>0?this.window[0]:this.window,void 0===windowTest||null===windowTest)throw"[IframeFix] Window is not defined.. lets blow up because we are unable to find the iframe.";if(this.iframe=windowTest.frameElement,void 0===this.iframe||null===this.iframe)throw"[Droppable] You are specifing iframe fix for a object that does not exist inside a iframe"}this.accept=t.isFunction(n)?n:function(t){return t.is(n)},this.proportions=function(){return arguments.length?void(e=arguments[0]):e?e:e={width:this.element[0].offsetWidth,height:this.element[0].offsetHeight}},this._addToManager(i.scope),i.addClasses&&this.element.addClass("ui-droppable")},_addToManager:function(e){t.ui.ddmanager.droppables[e]=t.ui.ddmanager.droppables[e]||[],t.ui.ddmanager.droppables[e].push(this)},_splice:function(t){for(var e=0;e<t.length;e++)t[e]===this&&t.splice(e,1)},_destroy:function(){var e=t.ui.ddmanager.droppables[this.options.scope];this._splice(e),this.element.removeClass("ui-droppable ui-droppable-disabled")},_setOption:function(e,i){if("accept"===e)this.accept=t.isFunction(i)?i:function(t){return t.is(i)};else if("scope"===e){var n=t.ui.ddmanager.droppables[this.options.scope];this._splice(n),this._addToManager(i)}this._super(e,i)},_activate:function(e){var i=t.ui.ddmanager.current;this.options.activeClass&&this.element.addClass(this.options.activeClass),i&&this._trigger("activate",e,this.ui(i))},_deactivate:function(e){var i=t.ui.ddmanager.current;this.options.activeClass&&this.element.removeClass(this.options.activeClass),i&&this._trigger("deactivate",e,this.ui(i))},_over:function(e){var i=t.ui.ddmanager.current;i&&(i.currentItem||i.element)[0]!==this.element[0]&&this.accept.call(this.element[0],i.currentItem||i.element)&&(this.options.hoverClass&&this.element.addClass(this.options.hoverClass),this._trigger("over",e,this.ui(i)))},_out:function(e){var i=t.ui.ddmanager.current;i&&(i.currentItem||i.element)[0]!==this.element[0]&&this.accept.call(this.element[0],i.currentItem||i.element)&&(this.options.hoverClass&&this.element.removeClass(this.options.hoverClass),this._trigger("out",e,this.ui(i)))},_drop:function(e,i){var n=i||t.ui.ddmanager.current,r=!1;return n&&(n.currentItem||n.element)[0]!==this.element[0]?(this.element.find(":data(ui-droppable)").not(".ui-draggable-dragging").each(function(){var i=t(this).droppable("instance");return i.options.greedy&&!i.options.disabled&&i.options.scope===n.options.scope&&i.accept.call(i.element[0],n.currentItem||n.element)&&t.ui.intersect(n,t.extend(i,{offset:i.element.offset()}),i.options.tolerance,e)?(r=!0,!1):void 0}),r?!1:this.accept.call(this.element[0],n.currentItem||n.element)?(this.options.activeClass&&this.element.removeClass(this.options.activeClass),this.options.hoverClass&&this.element.removeClass(this.options.hoverClass),this._trigger("drop",e,this.ui(n)),this.element):!1):!1},ui:function(t){return{draggable:t.currentItem||t.element,helper:t.helper,position:t.position,offset:t.positionAbs}}}),t.ui.intersect=function(){function e(t,e,i){return t>=e&&e+i>t}return function(i,n,r){if(!n.offset)return!1;var o,a,s=(i.positionAbs||i.position.absolute).left,l=(i.positionAbs||i.position.absolute).top,c=s+i.helperProportions.width,u=l+i.helperProportions.height,h=n.offset.left,d=n.offset.top,p=h+n.proportions().width,f=d+n.proportions().height;if(n.options.iframeFix){var g=t("iframe.active").offset(),m=t("iframe.active").width(),v=t("iframe.active").height(),y=t("iframe.active").contents().scrollTop(),b=t("iframe.active").contents().scrollLeft();if(l<g.top||s<g.left||s+i.helperProportions.width>g.left+m||l+i.helperProportions.height>g.top+v)return!1;h=g.left+n.offset.left-b,p=h+n.proportions().width,d=g.top+n.offset.top-y,f=d+n.proportions().height}switch(r){case"fit":return s>=h&&p>=c&&l>=d&&f>=u;case"intersect":return h<s+i.helperProportions.width/2&&c-i.helperProportions.width/2<p&&d<l+i.helperProportions.height/2&&u-i.helperProportions.height/2<f;case"pointer":return o=(i.positionAbs||i.position.absolute).left+(i.clickOffset||i.offset.click).left,a=(i.positionAbs||i.position.absolute).top+(i.clickOffset||i.offset.click).top,e(a,d,n.proportions().height)&&e(o,h,n.proportions().width);case"touch":return(l>=d&&f>=l||u>=d&&f>=u||d>l&&u>f)&&(s>=h&&p>=s||c>=h&&p>=c||h>s&&c>p);default:return!1}}}(),t.ui.ddmanager={current:null,droppables:{"default":[]},prepareOffsets:function(e,i){var n,r,o=t.ui.ddmanager.droppables[e.options.scope]||[],a=i?i.type:null,s=(e.currentItem||e.element).find(":data(ui-droppable)").addBack();t:for(n=0;n<o.length;n++)if(!(o[n].options.disabled||e&&!o[n].accept.call(o[n].element[0],e.currentItem||e.element))){for(r=0;r<s.length;r++)if(s[r]===o[n].element[0]){o[n].proportions().height=0;continue t}o[n].visible="none"!==o[n].element.css("display"),o[n].visible&&("mousedown"===a&&o[n]._activate.call(o[n],i),o[n].offset=o[n].element.offset(),o[n].proportions({width:o[n].element[0].offsetWidth,height:o[n].element[0].offsetHeight}))}},drop:function(e,i){var n=!1;return t.each((t.ui.ddmanager.droppables[e.options.scope]||[]).slice(),function(){this.options&&(!this.options.disabled&&this.visible&&t.ui.intersect(e,this,this.options.tolerance)&&(n=this._drop.call(this,i)||n),!this.options.disabled&&this.visible&&this.accept.call(this.element[0],e.currentItem||e.element)&&(this.isout=!0,this.isover=!1,this._deactivate.call(this,i)))}),n},dragStart:function(e,i){e.element.parentsUntil("body").bind("scroll.droppable",function(){e.options.refreshPositions||t.ui.ddmanager.prepareOffsets(e,i)})},drag:function(e,i){e.options.refreshPositions&&t.ui.ddmanager.prepareOffsets(e,i),t.each(t.ui.ddmanager.droppables[e.options.scope]||[],function(){if(!this.options.disabled&&!this.greedyChild&&this.visible){var n,r,o,a=t.ui.intersect(e,this,this.options.tolerance),s=!a&&this.isover?"isout":a&&!this.isover?"isover":null;s&&(this.options.greedy&&(r=this.options.scope,o=this.element.parents(":data(ui-droppable)").filter(function(){return t(this).droppable("instance").options.scope===r}),o.length&&(n=t(o[0]).droppable("instance"),n.greedyChild="isover"===s)),n&&"isover"===s&&(n.isover=!1,n.isout=!0,n._out.call(n,i)),this[s]=!0,this["isout"===s?"isover":"isout"]=!1,this["isover"===s?"_over":"_out"].call(this,i),n&&"isout"===s&&(n.isout=!1,n.isover=!0,n._over.call(n,i)))}})},dragStop:function(e,i){e.element.parentsUntil("body").unbind("scroll.droppable"),e.options.refreshPositions||t.ui.ddmanager.prepareOffsets(e,i)}},t.ui.droppable}),function(t){"function"==typeof define&&define.amd?define(["jquery","./core"],t):t(jQuery)}(function(t){function e(t){for(var e,i;t.length&&t[0]!==document;){if(e=t.css("position"),("absolute"===e||"relative"===e||"fixed"===e)&&(i=parseInt(t.css("zIndex"),10),!isNaN(i)&&0!==i))return i;t=t.parent()}return 0}function i(){this._curInst=null,this._keyEvent=!1,this._disabledInputs=[],this._datepickerShowing=!1,this._inDialog=!1,this._mainDivId="ui-datepicker-div",this._inlineClass="ui-datepicker-inline",this._appendClass="ui-datepicker-append",this._triggerClass="ui-datepicker-trigger",this._dialogClass="ui-datepicker-dialog",this._disableClass="ui-datepicker-disabled",this._unselectableClass="ui-datepicker-unselectable",this._currentClass="ui-datepicker-current-day",this._dayOverClass="ui-datepicker-days-cell-over",this.regional=[],this.regional[""]={closeText:"Done",prevText:"Prev",nextText:"Next",currentText:"Today",monthNames:["January","February","March","April","May","June","July","August","September","October","November","December"],monthNamesShort:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],dayNames:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],dayNamesShort:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],dayNamesMin:["Su","Mo","Tu","We","Th","Fr","Sa"],weekHeader:"Wk",dateFormat:"mm/dd/yy",firstDay:0,isRTL:!1,showMonthAfterYear:!1,yearSuffix:""},this._defaults={showOn:"focus",showAnim:"fadeIn",showOptions:{},defaultDate:null,appendText:"",buttonText:"...",buttonImage:"",buttonImageOnly:!1,hideIfNoPrevNext:!1,navigationAsDateFormat:!1,gotoCurrent:!1,changeMonth:!1,changeYear:!1,yearRange:"c-10:c+10",showOtherMonths:!1,selectOtherMonths:!1,showWeek:!1,calculateWeek:this.iso8601Week,shortYearCutoff:"+10",minDate:null,maxDate:null,duration:"fast",beforeShowDay:null,beforeShow:null,onSelect:null,onChangeMonthYear:null,onClose:null,numberOfMonths:1,showCurrentAtPos:0,stepMonths:1,stepBigMonths:12,altField:"",altFormat:"",constrainInput:!0,showButtonPanel:!1,autoSize:!1,disabled:!1},t.extend(this._defaults,this.regional[""]),this.regional.en=t.extend(!0,{},this.regional[""]),this.regional["en-US"]=t.extend(!0,{},this.regional.en),this.dpDiv=n(t("<div id='"+this._mainDivId+"' class='ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all'></div>"))}function n(e){var i="button, .ui-datepicker-prev, .ui-datepicker-next, .ui-datepicker-calendar td a";return e.delegate(i,"mouseout",function(){t(this).removeClass("ui-state-hover"),-1!==this.className.indexOf("ui-datepicker-prev")&&t(this).removeClass("ui-datepicker-prev-hover"),-1!==this.className.indexOf("ui-datepicker-next")&&t(this).removeClass("ui-datepicker-next-hover")}).delegate(i,"mouseover",r)}function r(){t.datepicker._isDisabledDatepicker(a.inline?a.dpDiv.parent()[0]:a.input[0])||(t(this).parents(".ui-datepicker-calendar").find("a").removeClass("ui-state-hover"),t(this).addClass("ui-state-hover"),
-1!==this.className.indexOf("ui-datepicker-prev")&&t(this).addClass("ui-datepicker-prev-hover"),-1!==this.className.indexOf("ui-datepicker-next")&&t(this).addClass("ui-datepicker-next-hover"))}function o(e,i){t.extend(e,i);for(var n in i)null==i[n]&&(e[n]=i[n]);return e}t.extend(t.ui,{datepicker:{version:"1.11.4"}});var a;return t.extend(i.prototype,{markerClassName:"hasDatepicker",maxRows:4,_widgetDatepicker:function(){return this.dpDiv},setDefaults:function(t){return o(this._defaults,t||{}),this},_attachDatepicker:function(e,i){var n,r,o;n=e.nodeName.toLowerCase(),r="div"===n||"span"===n,e.id||(this.uuid+=1,e.id="dp"+this.uuid),o=this._newInst(t(e),r),o.settings=t.extend({},i||{}),"input"===n?this._connectDatepicker(e,o):r&&this._inlineDatepicker(e,o)},_newInst:function(e,i){var r=e[0].id.replace(/([^A-Za-z0-9_\-])/g,"\\\\$1");return{id:r,input:e,selectedDay:0,selectedMonth:0,selectedYear:0,drawMonth:0,drawYear:0,inline:i,dpDiv:i?n(t("<div class='"+this._inlineClass+" ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all'></div>")):this.dpDiv}},_connectDatepicker:function(e,i){var n=t(e);i.append=t([]),i.trigger=t([]),n.hasClass(this.markerClassName)||(this._attachments(n,i),n.addClass(this.markerClassName).keydown(this._doKeyDown).keypress(this._doKeyPress).keyup(this._doKeyUp),this._autoSize(i),t.data(e,"datepicker",i),i.settings.disabled&&this._disableDatepicker(e))},_attachments:function(e,i){var n,r,o,a=this._get(i,"appendText"),s=this._get(i,"isRTL");i.append&&i.append.remove(),a&&(i.append=t("<span class='"+this._appendClass+"'>"+a+"</span>"),e[s?"before":"after"](i.append)),e.unbind("focus",this._showDatepicker),i.trigger&&i.trigger.remove(),n=this._get(i,"showOn"),"focus"!==n&&"both"!==n||e.focus(this._showDatepicker),"button"!==n&&"both"!==n||(r=this._get(i,"buttonText"),o=this._get(i,"buttonImage"),i.trigger=t(this._get(i,"buttonImageOnly")?t("<img/>").addClass(this._triggerClass).attr({src:o,alt:r,title:r}):t("<button type='button'></button>").addClass(this._triggerClass).html(o?t("<img/>").attr({src:o,alt:r,title:r}):r)),e[s?"before":"after"](i.trigger),i.trigger.click(function(){return t.datepicker._datepickerShowing&&t.datepicker._lastInput===e[0]?t.datepicker._hideDatepicker():t.datepicker._datepickerShowing&&t.datepicker._lastInput!==e[0]?(t.datepicker._hideDatepicker(),t.datepicker._showDatepicker(e[0])):t.datepicker._showDatepicker(e[0]),!1}))},_autoSize:function(t){if(this._get(t,"autoSize")&&!t.inline){var e,i,n,r,o=new Date(2009,11,20),a=this._get(t,"dateFormat");a.match(/[DM]/)&&(e=function(t){for(i=0,n=0,r=0;r<t.length;r++)t[r].length>i&&(i=t[r].length,n=r);return n},o.setMonth(e(this._get(t,a.match(/MM/)?"monthNames":"monthNamesShort"))),o.setDate(e(this._get(t,a.match(/DD/)?"dayNames":"dayNamesShort"))+20-o.getDay())),t.input.attr("size",this._formatDate(t,o).length)}},_inlineDatepicker:function(e,i){var n=t(e);n.hasClass(this.markerClassName)||(n.addClass(this.markerClassName).append(i.dpDiv),t.data(e,"datepicker",i),this._setDate(i,this._getDefaultDate(i),!0),this._updateDatepicker(i),this._updateAlternate(i),i.settings.disabled&&this._disableDatepicker(e),i.dpDiv.css("display","block"))},_dialogDatepicker:function(e,i,n,r,a){var s,l,c,u,h,d=this._dialogInst;return d||(this.uuid+=1,s="dp"+this.uuid,this._dialogInput=t("<input type='text' id='"+s+"' style='position: absolute; top: -100px; width: 0px;'/>"),this._dialogInput.keydown(this._doKeyDown),t("body").append(this._dialogInput),d=this._dialogInst=this._newInst(this._dialogInput,!1),d.settings={},t.data(this._dialogInput[0],"datepicker",d)),o(d.settings,r||{}),i=i&&i.constructor===Date?this._formatDate(d,i):i,this._dialogInput.val(i),this._pos=a?a.length?a:[a.pageX,a.pageY]:null,this._pos||(l=document.documentElement.clientWidth,c=document.documentElement.clientHeight,u=document.documentElement.scrollLeft||document.body.scrollLeft,h=document.documentElement.scrollTop||document.body.scrollTop,this._pos=[l/2-100+u,c/2-150+h]),this._dialogInput.css("left",this._pos[0]+20+"px").css("top",this._pos[1]+"px"),d.settings.onSelect=n,this._inDialog=!0,this.dpDiv.addClass(this._dialogClass),this._showDatepicker(this._dialogInput[0]),t.blockUI&&t.blockUI(this.dpDiv),t.data(this._dialogInput[0],"datepicker",d),this},_destroyDatepicker:function(e){var i,n=t(e),r=t.data(e,"datepicker");n.hasClass(this.markerClassName)&&(i=e.nodeName.toLowerCase(),t.removeData(e,"datepicker"),"input"===i?(r.append.remove(),r.trigger.remove(),n.removeClass(this.markerClassName).unbind("focus",this._showDatepicker).unbind("keydown",this._doKeyDown).unbind("keypress",this._doKeyPress).unbind("keyup",this._doKeyUp)):"div"!==i&&"span"!==i||n.removeClass(this.markerClassName).empty(),a===r&&(a=null))},_enableDatepicker:function(e){var i,n,r=t(e),o=t.data(e,"datepicker");r.hasClass(this.markerClassName)&&(i=e.nodeName.toLowerCase(),"input"===i?(e.disabled=!1,o.trigger.filter("button").each(function(){this.disabled=!1}).end().filter("img").css({opacity:"1.0",cursor:""})):"div"!==i&&"span"!==i||(n=r.children("."+this._inlineClass),n.children().removeClass("ui-state-disabled"),n.find("select.ui-datepicker-month, select.ui-datepicker-year").prop("disabled",!1)),this._disabledInputs=t.map(this._disabledInputs,function(t){return t===e?null:t}))},_disableDatepicker:function(e){var i,n,r=t(e),o=t.data(e,"datepicker");r.hasClass(this.markerClassName)&&(i=e.nodeName.toLowerCase(),"input"===i?(e.disabled=!0,o.trigger.filter("button").each(function(){this.disabled=!0}).end().filter("img").css({opacity:"0.5",cursor:"default"})):"div"!==i&&"span"!==i||(n=r.children("."+this._inlineClass),n.children().addClass("ui-state-disabled"),n.find("select.ui-datepicker-month, select.ui-datepicker-year").prop("disabled",!0)),this._disabledInputs=t.map(this._disabledInputs,function(t){return t===e?null:t}),this._disabledInputs[this._disabledInputs.length]=e)},_isDisabledDatepicker:function(t){if(!t)return!1;for(var e=0;e<this._disabledInputs.length;e++)if(this._disabledInputs[e]===t)return!0;return!1},_getInst:function(e){try{return t.data(e,"datepicker")}catch(i){throw"Missing instance data for this datepicker"}},_optionDatepicker:function(e,i,n){var r,a,s,l,c=this._getInst(e);return 2===arguments.length&&"string"==typeof i?"defaults"===i?t.extend({},t.datepicker._defaults):c?"all"===i?t.extend({},c.settings):this._get(c,i):null:(r=i||{},"string"==typeof i&&(r={},r[i]=n),void(c&&(this._curInst===c&&this._hideDatepicker(),a=this._getDateDatepicker(e,!0),s=this._getMinMaxDate(c,"min"),l=this._getMinMaxDate(c,"max"),o(c.settings,r),null!==s&&void 0!==r.dateFormat&&void 0===r.minDate&&(c.settings.minDate=this._formatDate(c,s)),null!==l&&void 0!==r.dateFormat&&void 0===r.maxDate&&(c.settings.maxDate=this._formatDate(c,l)),"disabled"in r&&(r.disabled?this._disableDatepicker(e):this._enableDatepicker(e)),this._attachments(t(e),c),this._autoSize(c),this._setDate(c,a),this._updateAlternate(c),this._updateDatepicker(c))))},_changeDatepicker:function(t,e,i){this._optionDatepicker(t,e,i)},_refreshDatepicker:function(t){var e=this._getInst(t);e&&this._updateDatepicker(e)},_setDateDatepicker:function(t,e){var i=this._getInst(t);i&&(this._setDate(i,e),this._updateDatepicker(i),this._updateAlternate(i))},_getDateDatepicker:function(t,e){var i=this._getInst(t);return i&&!i.inline&&this._setDateFromField(i,e),i?this._getDate(i):null},_doKeyDown:function(e){var i,n,r,o=t.datepicker._getInst(e.target),a=!0,s=o.dpDiv.is(".ui-datepicker-rtl");if(o._keyEvent=!0,t.datepicker._datepickerShowing)switch(e.keyCode){case 9:t.datepicker._hideDatepicker(),a=!1;break;case 13:return r=t("td."+t.datepicker._dayOverClass+":not(."+t.datepicker._currentClass+")",o.dpDiv),r[0]&&t.datepicker._selectDay(e.target,o.selectedMonth,o.selectedYear,r[0]),i=t.datepicker._get(o,"onSelect"),i?(n=t.datepicker._formatDate(o),i.apply(o.input?o.input[0]:null,[n,o])):t.datepicker._hideDatepicker(),!1;case 27:t.datepicker._hideDatepicker();break;case 33:t.datepicker._adjustDate(e.target,e.ctrlKey?-t.datepicker._get(o,"stepBigMonths"):-t.datepicker._get(o,"stepMonths"),"M");break;case 34:t.datepicker._adjustDate(e.target,e.ctrlKey?+t.datepicker._get(o,"stepBigMonths"):+t.datepicker._get(o,"stepMonths"),"M");break;case 35:(e.ctrlKey||e.metaKey)&&t.datepicker._clearDate(e.target),a=e.ctrlKey||e.metaKey;break;case 36:(e.ctrlKey||e.metaKey)&&t.datepicker._gotoToday(e.target),a=e.ctrlKey||e.metaKey;break;case 37:(e.ctrlKey||e.metaKey)&&t.datepicker._adjustDate(e.target,s?1:-1,"D"),a=e.ctrlKey||e.metaKey,e.originalEvent.altKey&&t.datepicker._adjustDate(e.target,e.ctrlKey?-t.datepicker._get(o,"stepBigMonths"):-t.datepicker._get(o,"stepMonths"),"M");break;case 38:(e.ctrlKey||e.metaKey)&&t.datepicker._adjustDate(e.target,-7,"D"),a=e.ctrlKey||e.metaKey;break;case 39:(e.ctrlKey||e.metaKey)&&t.datepicker._adjustDate(e.target,s?-1:1,"D"),a=e.ctrlKey||e.metaKey,e.originalEvent.altKey&&t.datepicker._adjustDate(e.target,e.ctrlKey?+t.datepicker._get(o,"stepBigMonths"):+t.datepicker._get(o,"stepMonths"),"M");break;case 40:(e.ctrlKey||e.metaKey)&&t.datepicker._adjustDate(e.target,7,"D"),a=e.ctrlKey||e.metaKey;break;default:a=!1}else 36===e.keyCode&&e.ctrlKey?t.datepicker._showDatepicker(this):a=!1;a&&(e.preventDefault(),e.stopPropagation())},_doKeyPress:function(e){var i,n,r=t.datepicker._getInst(e.target);return t.datepicker._get(r,"constrainInput")?(i=t.datepicker._possibleChars(t.datepicker._get(r,"dateFormat")),n=String.fromCharCode(null==e.charCode?e.keyCode:e.charCode),e.ctrlKey||e.metaKey||" ">n||!i||i.indexOf(n)>-1):void 0},_doKeyUp:function(e){var i,n=t.datepicker._getInst(e.target);if(n.input.val()!==n.lastVal)try{i=t.datepicker.parseDate(t.datepicker._get(n,"dateFormat"),n.input?n.input.val():null,t.datepicker._getFormatConfig(n)),i&&(t.datepicker._setDateFromField(n),t.datepicker._updateAlternate(n),t.datepicker._updateDatepicker(n))}catch(r){}return!0},_showDatepicker:function(i){if(i=i.target||i,"input"!==i.nodeName.toLowerCase()&&(i=t("input",i.parentNode)[0]),!t.datepicker._isDisabledDatepicker(i)&&t.datepicker._lastInput!==i){var n,r,a,s,l,c,u;n=t.datepicker._getInst(i),t.datepicker._curInst&&t.datepicker._curInst!==n&&(t.datepicker._curInst.dpDiv.stop(!0,!0),n&&t.datepicker._datepickerShowing&&t.datepicker._hideDatepicker(t.datepicker._curInst.input[0])),r=t.datepicker._get(n,"beforeShow"),a=r?r.apply(i,[i,n]):{},a!==!1&&(o(n.settings,a),n.lastVal=null,t.datepicker._lastInput=i,t.datepicker._setDateFromField(n),t.datepicker._inDialog&&(i.value=""),t.datepicker._pos||(t.datepicker._pos=t.datepicker._findPos(i),t.datepicker._pos[1]+=i.offsetHeight),s=!1,t(i).parents().each(function(){return s|="fixed"===t(this).css("position"),!s}),l={left:t.datepicker._pos[0],top:t.datepicker._pos[1]},t.datepicker._pos=null,n.dpDiv.empty(),n.dpDiv.css({position:"absolute",display:"block",top:"-1000px"}),t.datepicker._updateDatepicker(n),l=t.datepicker._checkOffset(n,l,s),n.dpDiv.css({position:t.datepicker._inDialog&&t.blockUI?"static":s?"fixed":"absolute",display:"none",left:l.left+"px",top:l.top+"px"}),n.inline||(c=t.datepicker._get(n,"showAnim"),u=t.datepicker._get(n,"duration"),n.dpDiv.css("z-index",e(t(i))+1),t.datepicker._datepickerShowing=!0,t.effects&&t.effects.effect[c]?n.dpDiv.show(c,t.datepicker._get(n,"showOptions"),u):n.dpDiv[c||"show"](c?u:null),t.datepicker._shouldFocusInput(n)&&n.input.focus(),t.datepicker._curInst=n))}},_updateDatepicker:function(e){this.maxRows=4,a=e,e.dpDiv.empty().append(this._generateHTML(e)),this._attachHandlers(e);var i,n=this._getNumberOfMonths(e),o=n[1],s=17,l=e.dpDiv.find("."+this._dayOverClass+" a");l.length>0&&r.apply(l.get(0)),e.dpDiv.removeClass("ui-datepicker-multi-2 ui-datepicker-multi-3 ui-datepicker-multi-4").width(""),o>1&&e.dpDiv.addClass("ui-datepicker-multi-"+o).css("width",s*o+"em"),e.dpDiv[(1!==n[0]||1!==n[1]?"add":"remove")+"Class"]("ui-datepicker-multi"),e.dpDiv[(this._get(e,"isRTL")?"add":"remove")+"Class"]("ui-datepicker-rtl"),e===t.datepicker._curInst&&t.datepicker._datepickerShowing&&t.datepicker._shouldFocusInput(e)&&e.input.focus(),e.yearshtml&&(i=e.yearshtml,setTimeout(function(){i===e.yearshtml&&e.yearshtml&&e.dpDiv.find("select.ui-datepicker-year:first").replaceWith(e.yearshtml),i=e.yearshtml=null},0))},_shouldFocusInput:function(t){return t.input&&t.input.is(":visible")&&!t.input.is(":disabled")&&!t.input.is(":focus")},_checkOffset:function(e,i,n){var r=e.dpDiv.outerWidth(),o=e.dpDiv.outerHeight(),a=e.input?e.input.outerWidth():0,s=e.input?e.input.outerHeight():0,l=document.documentElement.clientWidth+(n?0:t(document).scrollLeft()),c=document.documentElement.clientHeight+(n?0:t(document).scrollTop());return i.left-=this._get(e,"isRTL")?r-a:0,i.left-=n&&i.left===e.input.offset().left?t(document).scrollLeft():0,i.top-=n&&i.top===e.input.offset().top+s?t(document).scrollTop():0,i.left-=Math.min(i.left,i.left+r>l&&l>r?Math.abs(i.left+r-l):0),i.top-=Math.min(i.top,i.top+o>c&&c>o?Math.abs(o+s):0),i},_findPos:function(e){for(var i,n=this._getInst(e),r=this._get(n,"isRTL");e&&("hidden"===e.type||1!==e.nodeType||t.expr.filters.hidden(e));)e=e[r?"previousSibling":"nextSibling"];return i=t(e).offset(),[i.left,i.top]},_hideDatepicker:function(e){var i,n,r,o,a=this._curInst;!a||e&&a!==t.data(e,"datepicker")||this._datepickerShowing&&(i=this._get(a,"showAnim"),n=this._get(a,"duration"),r=function(){t.datepicker._tidyDialog(a)},t.effects&&(t.effects.effect[i]||t.effects[i])?a.dpDiv.hide(i,t.datepicker._get(a,"showOptions"),n,r):a.dpDiv["slideDown"===i?"slideUp":"fadeIn"===i?"fadeOut":"hide"](i?n:null,r),i||r(),this._datepickerShowing=!1,o=this._get(a,"onClose"),o&&o.apply(a.input?a.input[0]:null,[a.input?a.input.val():"",a]),this._lastInput=null,this._inDialog&&(this._dialogInput.css({position:"absolute",left:"0",top:"-100px"}),t.blockUI&&(t.unblockUI(),t("body").append(this.dpDiv))),this._inDialog=!1)},_tidyDialog:function(t){t.dpDiv.removeClass(this._dialogClass).unbind(".ui-datepicker-calendar")},_checkExternalClick:function(e){if(t.datepicker._curInst){var i=t(e.target),n=t.datepicker._getInst(i[0]);(i[0].id===t.datepicker._mainDivId||0!==i.parents("#"+t.datepicker._mainDivId).length||i.hasClass(t.datepicker.markerClassName)||i.closest("."+t.datepicker._triggerClass).length||!t.datepicker._datepickerShowing||t.datepicker._inDialog&&t.blockUI)&&(!i.hasClass(t.datepicker.markerClassName)||t.datepicker._curInst===n)||t.datepicker._hideDatepicker()}},_adjustDate:function(e,i,n){var r=t(e),o=this._getInst(r[0]);this._isDisabledDatepicker(r[0])||(this._adjustInstDate(o,i+("M"===n?this._get(o,"showCurrentAtPos"):0),n),this._updateDatepicker(o))},_gotoToday:function(e){var i,n=t(e),r=this._getInst(n[0]);this._get(r,"gotoCurrent")&&r.currentDay?(r.selectedDay=r.currentDay,r.drawMonth=r.selectedMonth=r.currentMonth,r.drawYear=r.selectedYear=r.currentYear):(i=new Date,r.selectedDay=i.getDate(),r.drawMonth=r.selectedMonth=i.getMonth(),r.drawYear=r.selectedYear=i.getFullYear()),this._notifyChange(r),this._adjustDate(n)},_selectMonthYear:function(e,i,n){var r=t(e),o=this._getInst(r[0]);o["selected"+("M"===n?"Month":"Year")]=o["draw"+("M"===n?"Month":"Year")]=parseInt(i.options[i.selectedIndex].value,10),this._notifyChange(o),this._adjustDate(r)},_selectDay:function(e,i,n,r){var o,a=t(e);t(r).hasClass(this._unselectableClass)||this._isDisabledDatepicker(a[0])||(o=this._getInst(a[0]),o.selectedDay=o.currentDay=t("a",r).html(),o.selectedMonth=o.currentMonth=i,o.selectedYear=o.currentYear=n,this._selectDate(e,this._formatDate(o,o.currentDay,o.currentMonth,o.currentYear)))},_clearDate:function(e){var i=t(e);this._selectDate(i,"")},_selectDate:function(e,i){var n,r=t(e),o=this._getInst(r[0]);i=null!=i?i:this._formatDate(o),o.input&&o.input.val(i),this._updateAlternate(o),n=this._get(o,"onSelect"),n?n.apply(o.input?o.input[0]:null,[i,o]):o.input&&o.input.trigger("change"),o.inline?this._updateDatepicker(o):(this._hideDatepicker(),this._lastInput=o.input[0],"object"!=typeof o.input[0]&&o.input.focus(),this._lastInput=null)},_updateAlternate:function(e){var i,n,r,o=this._get(e,"altField");o&&(i=this._get(e,"altFormat")||this._get(e,"dateFormat"),n=this._getDate(e),r=this.formatDate(i,n,this._getFormatConfig(e)),t(o).each(function(){t(this).val(r)}))},noWeekends:function(t){var e=t.getDay();return[e>0&&6>e,""]},iso8601Week:function(t){var e,i=new Date(t.getTime());return i.setDate(i.getDate()+4-(i.getDay()||7)),e=i.getTime(),i.setMonth(0),i.setDate(1),Math.floor(Math.round((e-i)/864e5)/7)+1},parseDate:function(e,i,n){if(null==e||null==i)throw"Invalid arguments";if(i="object"==typeof i?i.toString():i+"",""===i)return null;var r,o,a,s,l=0,c=(n?n.shortYearCutoff:null)||this._defaults.shortYearCutoff,u="string"!=typeof c?c:(new Date).getFullYear()%100+parseInt(c,10),h=(n?n.dayNamesShort:null)||this._defaults.dayNamesShort,d=(n?n.dayNames:null)||this._defaults.dayNames,p=(n?n.monthNamesShort:null)||this._defaults.monthNamesShort,f=(n?n.monthNames:null)||this._defaults.monthNames,g=-1,m=-1,v=-1,y=-1,b=!1,x=function(t){var i=r+1<e.length&&e.charAt(r+1)===t;return i&&r++,i},k=function(t){var e=x(t),n="@"===t?14:"!"===t?20:"y"===t&&e?4:"o"===t?3:2,r="y"===t?n:1,o=new RegExp("^\\d{"+r+","+n+"}"),a=i.substring(l).match(o);if(!a)throw"Missing number at position "+l;return l+=a[0].length,parseInt(a[0],10)},w=function(e,n,r){var o=-1,a=t.map(x(e)?r:n,function(t,e){return[[e,t]]}).sort(function(t,e){return-(t[1].length-e[1].length)});if(t.each(a,function(t,e){var n=e[1];return i.substr(l,n.length).toLowerCase()===n.toLowerCase()?(o=e[0],l+=n.length,!1):void 0}),-1!==o)return o+1;throw"Unknown name at position "+l},_=function(){if(i.charAt(l)!==e.charAt(r))throw"Unexpected literal at position "+l;l++};for(r=0;r<e.length;r++)if(b)"'"!==e.charAt(r)||x("'")?_():b=!1;else switch(e.charAt(r)){case"d":v=k("d");break;case"D":w("D",h,d);break;case"o":y=k("o");break;case"m":m=k("m");break;case"M":m=w("M",p,f);break;case"y":g=k("y");break;case"@":s=new Date(k("@")),g=s.getFullYear(),m=s.getMonth()+1,v=s.getDate();break;case"!":s=new Date((k("!")-this._ticksTo1970)/1e4),g=s.getFullYear(),m=s.getMonth()+1,v=s.getDate();break;case"'":x("'")?_():b=!0;break;default:_()}if(l<i.length&&(a=i.substr(l),!/^\s+/.test(a)))throw"Extra/unparsed characters found in date: "+a;if(-1===g?g=(new Date).getFullYear():100>g&&(g+=(new Date).getFullYear()-(new Date).getFullYear()%100+(u>=g?0:-100)),y>-1)for(m=1,v=y;;){if(o=this._getDaysInMonth(g,m-1),o>=v)break;m++,v-=o}if(s=this._daylightSavingAdjust(new Date(g,m-1,v)),s.getFullYear()!==g||s.getMonth()+1!==m||s.getDate()!==v)throw"Invalid date";return s},ATOM:"yy-mm-dd",COOKIE:"D, dd M yy",ISO_8601:"yy-mm-dd",RFC_822:"D, d M y",RFC_850:"DD, dd-M-y",RFC_1036:"D, d M y",RFC_1123:"D, d M yy",RFC_2822:"D, d M yy",RSS:"D, d M y",TICKS:"!",TIMESTAMP:"@",W3C:"yy-mm-dd",_ticksTo1970:24*(718685+Math.floor(492.5)-Math.floor(19.7)+Math.floor(4.925))*60*60*1e7,formatDate:function(t,e,i){if(!e)return"";var n,r=(i?i.dayNamesShort:null)||this._defaults.dayNamesShort,o=(i?i.dayNames:null)||this._defaults.dayNames,a=(i?i.monthNamesShort:null)||this._defaults.monthNamesShort,s=(i?i.monthNames:null)||this._defaults.monthNames,l=function(e){var i=n+1<t.length&&t.charAt(n+1)===e;return i&&n++,i},c=function(t,e,i){var n=""+e;if(l(t))for(;n.length<i;)n="0"+n;return n},u=function(t,e,i,n){return l(t)?n[e]:i[e]},h="",d=!1;if(e)for(n=0;n<t.length;n++)if(d)"'"!==t.charAt(n)||l("'")?h+=t.charAt(n):d=!1;else switch(t.charAt(n)){case"d":h+=c("d",e.getDate(),2);break;case"D":h+=u("D",e.getDay(),r,o);break;case"o":h+=c("o",Math.round((new Date(e.getFullYear(),e.getMonth(),e.getDate()).getTime()-new Date(e.getFullYear(),0,0).getTime())/864e5),3);break;case"m":h+=c("m",e.getMonth()+1,2);break;case"M":h+=u("M",e.getMonth(),a,s);break;case"y":h+=l("y")?e.getFullYear():(e.getYear()%100<10?"0":"")+e.getYear()%100;break;case"@":h+=e.getTime();break;case"!":h+=1e4*e.getTime()+this._ticksTo1970;break;case"'":l("'")?h+="'":d=!0;break;default:h+=t.charAt(n)}return h},_possibleChars:function(t){var e,i="",n=!1,r=function(i){var n=e+1<t.length&&t.charAt(e+1)===i;return n&&e++,n};for(e=0;e<t.length;e++)if(n)"'"!==t.charAt(e)||r("'")?i+=t.charAt(e):n=!1;else switch(t.charAt(e)){case"d":case"m":case"y":case"@":i+="0123456789";break;case"D":case"M":return null;case"'":r("'")?i+="'":n=!0;break;default:i+=t.charAt(e)}return i},_get:function(t,e){return void 0!==t.settings[e]?t.settings[e]:this._defaults[e]},_setDateFromField:function(t,e){if(t.input.val()!==t.lastVal){var i=this._get(t,"dateFormat"),n=t.lastVal=t.input?t.input.val():null,r=this._getDefaultDate(t),o=r,a=this._getFormatConfig(t);try{o=this.parseDate(i,n,a)||r}catch(s){n=e?"":n}t.selectedDay=o.getDate(),t.drawMonth=t.selectedMonth=o.getMonth(),t.drawYear=t.selectedYear=o.getFullYear(),t.currentDay=n?o.getDate():0,t.currentMonth=n?o.getMonth():0,t.currentYear=n?o.getFullYear():0,this._adjustInstDate(t)}},_getDefaultDate:function(t){return this._restrictMinMax(t,this._determineDate(t,this._get(t,"defaultDate"),new Date))},_determineDate:function(e,i,n){var r=function(t){var e=new Date;return e.setDate(e.getDate()+t),e},o=function(i){try{return t.datepicker.parseDate(t.datepicker._get(e,"dateFormat"),i,t.datepicker._getFormatConfig(e))}catch(n){}for(var r=(i.toLowerCase().match(/^c/)?t.datepicker._getDate(e):null)||new Date,o=r.getFullYear(),a=r.getMonth(),s=r.getDate(),l=/([+\-]?[0-9]+)\s*(d|D|w|W|m|M|y|Y)?/g,c=l.exec(i);c;){switch(c[2]||"d"){case"d":case"D":s+=parseInt(c[1],10);break;case"w":case"W":s+=7*parseInt(c[1],10);break;case"m":case"M":a+=parseInt(c[1],10),s=Math.min(s,t.datepicker._getDaysInMonth(o,a));break;case"y":case"Y":o+=parseInt(c[1],10),s=Math.min(s,t.datepicker._getDaysInMonth(o,a))}c=l.exec(i)}return new Date(o,a,s)},a=null==i||""===i?n:"string"==typeof i?o(i):"number"==typeof i?isNaN(i)?n:r(i):new Date(i.getTime());return a=a&&"Invalid Date"===a.toString()?n:a,a&&(a.setHours(0),a.setMinutes(0),a.setSeconds(0),a.setMilliseconds(0)),this._daylightSavingAdjust(a)},_daylightSavingAdjust:function(t){return t?(t.setHours(t.getHours()>12?t.getHours()+2:0),t):null},_setDate:function(t,e,i){var n=!e,r=t.selectedMonth,o=t.selectedYear,a=this._restrictMinMax(t,this._determineDate(t,e,new Date));t.selectedDay=t.currentDay=a.getDate(),t.drawMonth=t.selectedMonth=t.currentMonth=a.getMonth(),t.drawYear=t.selectedYear=t.currentYear=a.getFullYear(),r===t.selectedMonth&&o===t.selectedYear||i||this._notifyChange(t),this._adjustInstDate(t),t.input&&t.input.val(n?"":this._formatDate(t))},_getDate:function(t){var e=!t.currentYear||t.input&&""===t.input.val()?null:this._daylightSavingAdjust(new Date(t.currentYear,t.currentMonth,t.currentDay));return e},_attachHandlers:function(e){var i=this._get(e,"stepMonths"),n="#"+e.id.replace(/\\\\/g,"\\");e.dpDiv.find("[data-handler]").map(function(){var e={prev:function(){t.datepicker._adjustDate(n,-i,"M")},next:function(){t.datepicker._adjustDate(n,+i,"M")},hide:function(){t.datepicker._hideDatepicker()},today:function(){t.datepicker._gotoToday(n)},selectDay:function(){return t.datepicker._selectDay(n,+this.getAttribute("data-month"),+this.getAttribute("data-year"),this),!1},selectMonth:function(){return t.datepicker._selectMonthYear(n,this,"M"),!1},selectYear:function(){return t.datepicker._selectMonthYear(n,this,"Y"),!1}};t(this).bind(this.getAttribute("data-event"),e[this.getAttribute("data-handler")])})},_generateHTML:function(t){var e,i,n,r,o,a,s,l,c,u,h,d,p,f,g,m,v,y,b,x,k,w,_,S,C,D,P,M,I,T,A,F,N,L,O,E,H,R,B,W=new Date,j=this._daylightSavingAdjust(new Date(W.getFullYear(),W.getMonth(),W.getDate())),z=this._get(t,"isRTL"),V=this._get(t,"showButtonPanel"),q=this._get(t,"hideIfNoPrevNext"),Y=this._get(t,"navigationAsDateFormat"),$=this._getNumberOfMonths(t),U=this._get(t,"showCurrentAtPos"),X=this._get(t,"stepMonths"),K=1!==$[0]||1!==$[1],J=this._daylightSavingAdjust(t.currentDay?new Date(t.currentYear,t.currentMonth,t.currentDay):new Date(9999,9,9)),G=this._getMinMaxDate(t,"min"),Q=this._getMinMaxDate(t,"max"),Z=t.drawMonth-U,tt=t.drawYear;if(0>Z&&(Z+=12,tt--),Q)for(e=this._daylightSavingAdjust(new Date(Q.getFullYear(),Q.getMonth()-$[0]*$[1]+1,Q.getDate())),e=G&&G>e?G:e;this._daylightSavingAdjust(new Date(tt,Z,1))>e;)Z--,0>Z&&(Z=11,tt--);for(t.drawMonth=Z,t.drawYear=tt,i=this._get(t,"prevText"),i=Y?this.formatDate(i,this._daylightSavingAdjust(new Date(tt,Z-X,1)),this._getFormatConfig(t)):i,n=this._canAdjustMonth(t,-1,tt,Z)?"<a class='ui-datepicker-prev ui-corner-all' data-handler='prev' data-event='click' title='"+i+"'><span class='ui-icon ui-icon-circle-triangle-"+(z?"e":"w")+"'>"+i+"</span></a>":q?"":"<a class='ui-datepicker-prev ui-corner-all ui-state-disabled' title='"+i+"'><span class='ui-icon ui-icon-circle-triangle-"+(z?"e":"w")+"'>"+i+"</span></a>",r=this._get(t,"nextText"),r=Y?this.formatDate(r,this._daylightSavingAdjust(new Date(tt,Z+X,1)),this._getFormatConfig(t)):r,o=this._canAdjustMonth(t,1,tt,Z)?"<a class='ui-datepicker-next ui-corner-all' data-handler='next' data-event='click' title='"+r+"'><span class='ui-icon ui-icon-circle-triangle-"+(z?"w":"e")+"'>"+r+"</span></a>":q?"":"<a class='ui-datepicker-next ui-corner-all ui-state-disabled' title='"+r+"'><span class='ui-icon ui-icon-circle-triangle-"+(z?"w":"e")+"'>"+r+"</span></a>",a=this._get(t,"currentText"),s=this._get(t,"gotoCurrent")&&t.currentDay?J:j,a=Y?this.formatDate(a,s,this._getFormatConfig(t)):a,l=t.inline?"":"<button type='button' class='ui-datepicker-close ui-state-default ui-priority-primary ui-corner-all' data-handler='hide' data-event='click'>"+this._get(t,"closeText")+"</button>",c=V?"<div class='ui-datepicker-buttonpane ui-widget-content'>"+(z?l:"")+(this._isInRange(t,s)?"<button type='button' class='ui-datepicker-current ui-state-default ui-priority-secondary ui-corner-all' data-handler='today' data-event='click'>"+a+"</button>":"")+(z?"":l)+"</div>":"",u=parseInt(this._get(t,"firstDay"),10),u=isNaN(u)?0:u,h=this._get(t,"showWeek"),d=this._get(t,"dayNames"),p=this._get(t,"dayNamesMin"),f=this._get(t,"monthNames"),g=this._get(t,"monthNamesShort"),m=this._get(t,"beforeShowDay"),v=this._get(t,"showOtherMonths"),y=this._get(t,"selectOtherMonths"),b=this._getDefaultDate(t),x="",w=0;w<$[0];w++){for(_="",this.maxRows=4,S=0;S<$[1];S++){if(C=this._daylightSavingAdjust(new Date(tt,Z,t.selectedDay)),D=" ui-corner-all",P="",K){if(P+="<div class='ui-datepicker-group",$[1]>1)switch(S){case 0:P+=" ui-datepicker-group-first",D=" ui-corner-"+(z?"right":"left");break;case $[1]-1:P+=" ui-datepicker-group-last",D=" ui-corner-"+(z?"left":"right");break;default:P+=" ui-datepicker-group-middle",D=""}P+="'>"}for(P+="<div class='ui-datepicker-header ui-widget-header ui-helper-clearfix"+D+"'>"+(/all|left/.test(D)&&0===w?z?o:n:"")+(/all|right/.test(D)&&0===w?z?n:o:"")+this._generateMonthYearHeader(t,Z,tt,G,Q,w>0||S>0,f,g)+"</div><table class='ui-datepicker-calendar'><thead><tr>",M=h?"<th class='ui-datepicker-week-col'>"+this._get(t,"weekHeader")+"</th>":"",k=0;7>k;k++)I=(k+u)%7,M+="<th scope='col'"+((k+u+6)%7>=5?" class='ui-datepicker-week-end'":"")+"><span title='"+d[I]+"'>"+p[I]+"</span></th>";for(P+=M+"</tr></thead><tbody>",T=this._getDaysInMonth(tt,Z),tt===t.selectedYear&&Z===t.selectedMonth&&(t.selectedDay=Math.min(t.selectedDay,T)),A=(this._getFirstDayOfMonth(tt,Z)-u+7)%7,F=Math.ceil((A+T)/7),N=K&&this.maxRows>F?this.maxRows:F,this.maxRows=N,L=this._daylightSavingAdjust(new Date(tt,Z,1-A)),O=0;N>O;O++){for(P+="<tr>",E=h?"<td class='ui-datepicker-week-col'>"+this._get(t,"calculateWeek")(L)+"</td>":"",k=0;7>k;k++)H=m?m.apply(t.input?t.input[0]:null,[L]):[!0,""],R=L.getMonth()!==Z,B=R&&!y||!H[0]||G&&G>L||Q&&L>Q,E+="<td class='"+((k+u+6)%7>=5?" ui-datepicker-week-end":"")+(R?" ui-datepicker-other-month":"")+(L.getTime()===C.getTime()&&Z===t.selectedMonth&&t._keyEvent||b.getTime()===L.getTime()&&b.getTime()===C.getTime()?" "+this._dayOverClass:"")+(B?" "+this._unselectableClass+" ui-state-disabled":"")+(R&&!v?"":" "+H[1]+(L.getTime()===J.getTime()?" "+this._currentClass:"")+(L.getTime()===j.getTime()?" ui-datepicker-today":""))+"'"+(R&&!v||!H[2]?"":" title='"+H[2].replace(/'/g,"&#39;")+"'")+(B?"":" data-handler='selectDay' data-event='click' data-month='"+L.getMonth()+"' data-year='"+L.getFullYear()+"'")+">"+(R&&!v?"&#xa0;":B?"<span class='ui-state-default'>"+L.getDate()+"</span>":"<a class='ui-state-default"+(L.getTime()===j.getTime()?" ui-state-highlight":"")+(L.getTime()===J.getTime()?" ui-state-active":"")+(R?" ui-priority-secondary":"")+"' href='#'>"+L.getDate()+"</a>")+"</td>",L.setDate(L.getDate()+1),L=this._daylightSavingAdjust(L);P+=E+"</tr>"}Z++,Z>11&&(Z=0,tt++),P+="</tbody></table>"+(K?"</div>"+($[0]>0&&S===$[1]-1?"<div class='ui-datepicker-row-break'></div>":""):""),_+=P}x+=_}return x+=c,t._keyEvent=!1,x},_generateMonthYearHeader:function(t,e,i,n,r,o,a,s){var l,c,u,h,d,p,f,g,m=this._get(t,"changeMonth"),v=this._get(t,"changeYear"),y=this._get(t,"showMonthAfterYear"),b="<div class='ui-datepicker-title'>",x="";if(o||!m)x+="<span class='ui-datepicker-month'>"+a[e]+"</span>";else{for(l=n&&n.getFullYear()===i,c=r&&r.getFullYear()===i,x+="<select class='ui-datepicker-month' data-handler='selectMonth' data-event='change'>",u=0;12>u;u++)(!l||u>=n.getMonth())&&(!c||u<=r.getMonth())&&(x+="<option value='"+u+"'"+(u===e?" selected='selected'":"")+">"+s[u]+"</option>");x+="</select>"}if(y||(b+=x+(!o&&m&&v?"":"&#xa0;")),!t.yearshtml)if(t.yearshtml="",o||!v)b+="<span class='ui-datepicker-year'>"+i+"</span>";else{for(h=this._get(t,"yearRange").split(":"),d=(new Date).getFullYear(),p=function(t){var e=t.match(/c[+\-].*/)?i+parseInt(t.substring(1),10):t.match(/[+\-].*/)?d+parseInt(t,10):parseInt(t,10);return isNaN(e)?d:e},f=p(h[0]),g=Math.max(f,p(h[1]||"")),f=n?Math.max(f,n.getFullYear()):f,g=r?Math.min(g,r.getFullYear()):g,t.yearshtml+="<select class='ui-datepicker-year' data-handler='selectYear' data-event='change'>";g>=f;f++)t.yearshtml+="<option value='"+f+"'"+(f===i?" selected='selected'":"")+">"+f+"</option>";t.yearshtml+="</select>",b+=t.yearshtml,t.yearshtml=null}return b+=this._get(t,"yearSuffix"),y&&(b+=(!o&&m&&v?"":"&#xa0;")+x),b+="</div>"},_adjustInstDate:function(t,e,i){var n=t.drawYear+("Y"===i?e:0),r=t.drawMonth+("M"===i?e:0),o=Math.min(t.selectedDay,this._getDaysInMonth(n,r))+("D"===i?e:0),a=this._restrictMinMax(t,this._daylightSavingAdjust(new Date(n,r,o)));t.selectedDay=a.getDate(),t.drawMonth=t.selectedMonth=a.getMonth(),t.drawYear=t.selectedYear=a.getFullYear(),"M"!==i&&"Y"!==i||this._notifyChange(t)},_restrictMinMax:function(t,e){var i=this._getMinMaxDate(t,"min"),n=this._getMinMaxDate(t,"max"),r=i&&i>e?i:e;return n&&r>n?n:r},_notifyChange:function(t){var e=this._get(t,"onChangeMonthYear");e&&e.apply(t.input?t.input[0]:null,[t.selectedYear,t.selectedMonth+1,t])},_getNumberOfMonths:function(t){var e=this._get(t,"numberOfMonths");return null==e?[1,1]:"number"==typeof e?[1,e]:e},_getMinMaxDate:function(t,e){return this._determineDate(t,this._get(t,e+"Date"),null)},_getDaysInMonth:function(t,e){return 32-this._daylightSavingAdjust(new Date(t,e,32)).getDate()},_getFirstDayOfMonth:function(t,e){return new Date(t,e,1).getDay()},_canAdjustMonth:function(t,e,i,n){var r=this._getNumberOfMonths(t),o=this._daylightSavingAdjust(new Date(i,n+(0>e?e:r[0]*r[1]),1));return 0>e&&o.setDate(this._getDaysInMonth(o.getFullYear(),o.getMonth())),this._isInRange(t,o)},_isInRange:function(t,e){var i,n,r=this._getMinMaxDate(t,"min"),o=this._getMinMaxDate(t,"max"),a=null,s=null,l=this._get(t,"yearRange");return l&&(i=l.split(":"),n=(new Date).getFullYear(),a=parseInt(i[0],10),s=parseInt(i[1],10),i[0].match(/[+\-].*/)&&(a+=n),i[1].match(/[+\-].*/)&&(s+=n)),(!r||e.getTime()>=r.getTime())&&(!o||e.getTime()<=o.getTime())&&(!a||e.getFullYear()>=a)&&(!s||e.getFullYear()<=s)},_getFormatConfig:function(t){var e=this._get(t,"shortYearCutoff");return e="string"!=typeof e?e:(new Date).getFullYear()%100+parseInt(e,10),{shortYearCutoff:e,dayNamesShort:this._get(t,"dayNamesShort"),dayNames:this._get(t,"dayNames"),
monthNamesShort:this._get(t,"monthNamesShort"),monthNames:this._get(t,"monthNames")}},_formatDate:function(t,e,i,n){e||(t.currentDay=t.selectedDay,t.currentMonth=t.selectedMonth,t.currentYear=t.selectedYear);var r=e?"object"==typeof e?e:this._daylightSavingAdjust(new Date(n,i,e)):this._daylightSavingAdjust(new Date(t.currentYear,t.currentMonth,t.currentDay));return this.formatDate(this._get(t,"dateFormat"),r,this._getFormatConfig(t))}}),t.fn.datepicker=function(e){if(!this.length)return this;t.datepicker.initialized||(t(document).mousedown(t.datepicker._checkExternalClick),t.datepicker.initialized=!0),0===t("#"+t.datepicker._mainDivId).length&&t("body").append(t.datepicker.dpDiv);var i=Array.prototype.slice.call(arguments,1);return"string"!=typeof e||"isDisabled"!==e&&"getDate"!==e&&"widget"!==e?"option"===e&&2===arguments.length&&"string"==typeof arguments[1]?t.datepicker["_"+e+"Datepicker"].apply(t.datepicker,[this[0]].concat(i)):this.each(function(){"string"==typeof e?t.datepicker["_"+e+"Datepicker"].apply(t.datepicker,[this].concat(i)):t.datepicker._attachDatepicker(this,e)}):t.datepicker["_"+e+"Datepicker"].apply(t.datepicker,[this[0]].concat(i))},t.datepicker=new i,t.datepicker.initialized=!1,t.datepicker.uuid=(new Date).getTime(),t.datepicker.version="1.11.4",t.datepicker}),function(t){"function"==typeof define&&define.amd?define(["jquery","./core","./mouse","./widget"],t):t(jQuery)}(function(t){return t.widget("ui.sortable",t.ui.mouse,{version:"1.11.4",widgetEventPrefix:"sort",ready:!1,options:{appendTo:"parent",axis:!1,connectWith:!1,containment:!1,cursor:"auto",cursorAt:!1,dropOnEmpty:!0,forcePlaceholderSize:!1,forceHelperSize:!1,grid:!1,handle:!1,helper:"original",items:"> *",opacity:!1,placeholder:!1,revert:!1,scroll:!0,scrollSensitivity:20,scrollSpeed:20,scope:"default",tolerance:"intersect",zIndex:1e3,activate:null,beforeStop:null,change:null,deactivate:null,out:null,over:null,receive:null,remove:null,sort:null,start:null,stop:null,update:null},_isOverAxis:function(t,e,i){return t>=e&&e+i>t},_isFloating:function(t){return/left|right/.test(t.css("float"))||/inline|table-cell/.test(t.css("display"))},_create:function(){this.containerCache={},this.element.addClass("ui-sortable"),this.refresh(),this.offset=this.element.offset(),this._mouseInit(),this._setHandleClassName(),this.ready=!0},_setOption:function(t,e){this._super(t,e),"handle"===t&&this._setHandleClassName()},_setHandleClassName:function(){this.element.find(".ui-sortable-handle").removeClass("ui-sortable-handle"),t.each(this.items,function(){(this.instance.options.handle?this.item.find(this.instance.options.handle):this.item).addClass("ui-sortable-handle")})},_destroy:function(){this.element.removeClass("ui-sortable ui-sortable-disabled").find(".ui-sortable-handle").removeClass("ui-sortable-handle"),this._mouseDestroy();for(var t=this.items.length-1;t>=0;t--)this.items[t].item.removeData(this.widgetName+"-item");return this},_mouseCapture:function(e,i){var n=null,r=!1,o=this;return this.reverting?!1:this.options.disabled||"static"===this.options.type?!1:(this._refreshItems(e),t(e.target).parents().each(function(){return t.data(this,o.widgetName+"-item")===o?(n=t(this),!1):void 0}),t.data(e.target,o.widgetName+"-item")===o&&(n=t(e.target)),n&&(!this.options.handle||i||(t(this.options.handle,n).find("*").addBack().each(function(){this===e.target&&(r=!0)}),r))?(this.currentItem=n,this._removeCurrentsFromItems(),!0):!1)},_mouseStart:function(e,i,n){var r,o,a=this.options;if(this.currentContainer=this,this.refreshPositions(),this.helper=this._createHelper(e),this._cacheHelperProportions(),this._cacheMargins(),this.scrollParent=this.helper.scrollParent(),this.offset=this.currentItem.offset(),this.offset={top:this.offset.top-this.margins.top,left:this.offset.left-this.margins.left},t.extend(this.offset,{click:{left:e.pageX-this.offset.left,top:e.pageY-this.offset.top},parent:this._getParentOffset(),relative:this._getRelativeOffset()}),this.helper.css("position","absolute"),this.cssPosition=this.helper.css("position"),this.originalPosition=this._generatePosition(e),this.originalPageX=e.pageX,this.originalPageY=e.pageY,a.cursorAt&&this._adjustOffsetFromHelper(a.cursorAt),this.domPosition={prev:this.currentItem.prev()[0],parent:this.currentItem.parent()[0]},this.helper[0]!==this.currentItem[0]&&this.currentItem.hide(),this._createPlaceholder(),a.containment&&this._setContainment(),a.cursor&&"auto"!==a.cursor&&(o=this.document.find("body"),this.storedCursor=o.css("cursor"),o.css("cursor",a.cursor),this.storedStylesheet=t("<style>*{ cursor: "+a.cursor+" !important; }</style>").appendTo(o)),a.opacity&&(this.helper.css("opacity")&&(this._storedOpacity=this.helper.css("opacity")),this.helper.css("opacity",a.opacity)),a.zIndex&&(this.helper.css("zIndex")&&(this._storedZIndex=this.helper.css("zIndex")),this.helper.css("zIndex",a.zIndex)),this.scrollParent[0]!==this.document[0]&&"HTML"!==this.scrollParent[0].tagName&&(this.overflowOffset=this.scrollParent.offset()),this._trigger("start",e,this._uiHash()),this._preserveHelperProportions||this._cacheHelperProportions(),!n)for(r=this.containers.length-1;r>=0;r--)this.containers[r]._trigger("activate",e,this._uiHash(this));return t.ui.ddmanager&&(t.ui.ddmanager.current=this),t.ui.ddmanager&&!a.dropBehaviour&&t.ui.ddmanager.prepareOffsets(this,e),this.dragging=!0,this.helper.addClass("ui-sortable-helper"),this._mouseDrag(e),!0},_mouseDrag:function(e){var i,n,r,o,a=this.options,s=!1;for(this.position=this._generatePosition(e),this.positionAbs=this._convertPositionTo("absolute"),this.lastPositionAbs||(this.lastPositionAbs=this.positionAbs),this.options.scroll&&(this.scrollParent[0]!==this.document[0]&&"HTML"!==this.scrollParent[0].tagName?(this.overflowOffset.top+this.scrollParent[0].offsetHeight-e.pageY<a.scrollSensitivity?this.scrollParent[0].scrollTop=s=this.scrollParent[0].scrollTop+a.scrollSpeed:e.pageY-this.overflowOffset.top<a.scrollSensitivity&&(this.scrollParent[0].scrollTop=s=this.scrollParent[0].scrollTop-a.scrollSpeed),this.overflowOffset.left+this.scrollParent[0].offsetWidth-e.pageX<a.scrollSensitivity?this.scrollParent[0].scrollLeft=s=this.scrollParent[0].scrollLeft+a.scrollSpeed:e.pageX-this.overflowOffset.left<a.scrollSensitivity&&(this.scrollParent[0].scrollLeft=s=this.scrollParent[0].scrollLeft-a.scrollSpeed)):(e.pageY-this.document.scrollTop()<a.scrollSensitivity?s=this.document.scrollTop(this.document.scrollTop()-a.scrollSpeed):this.window.height()-(e.pageY-this.document.scrollTop())<a.scrollSensitivity&&(s=this.document.scrollTop(this.document.scrollTop()+a.scrollSpeed)),e.pageX-this.document.scrollLeft()<a.scrollSensitivity?s=this.document.scrollLeft(this.document.scrollLeft()-a.scrollSpeed):this.window.width()-(e.pageX-this.document.scrollLeft())<a.scrollSensitivity&&(s=this.document.scrollLeft(this.document.scrollLeft()+a.scrollSpeed))),s!==!1&&t.ui.ddmanager&&!a.dropBehaviour&&t.ui.ddmanager.prepareOffsets(this,e)),this.positionAbs=this._convertPositionTo("absolute"),this.options.axis&&"y"===this.options.axis||(this.helper[0].style.left=this.position.left+"px"),this.options.axis&&"x"===this.options.axis||(this.helper[0].style.top=this.position.top+"px"),i=this.items.length-1;i>=0;i--)if(n=this.items[i],r=n.item[0],o=this._intersectsWithPointer(n),o&&n.instance===this.currentContainer&&r!==this.currentItem[0]&&this.placeholder[1===o?"next":"prev"]()[0]!==r&&!t.contains(this.placeholder[0],r)&&("semi-dynamic"===this.options.type?!t.contains(this.element[0],r):!0)){if(this.direction=1===o?"down":"up","pointer"!==this.options.tolerance&&!this._intersectsWithSides(n))break;this._rearrange(e,n),this._trigger("change",e,this._uiHash());break}return this._contactContainers(e),t.ui.ddmanager&&t.ui.ddmanager.drag(this,e),this._trigger("sort",e,this._uiHash()),this.lastPositionAbs=this.positionAbs,!1},_mouseStop:function(e,i){if(e){if(t.ui.ddmanager&&!this.options.dropBehaviour&&t.ui.ddmanager.drop(this,e),this.options.revert){var n=this,r=this.placeholder.offset(),o=this.options.axis,a={};o&&"x"!==o||(a.left=r.left-this.offset.parent.left-this.margins.left+(this.offsetParent[0]===this.document[0].body?0:this.offsetParent[0].scrollLeft)),o&&"y"!==o||(a.top=r.top-this.offset.parent.top-this.margins.top+(this.offsetParent[0]===this.document[0].body?0:this.offsetParent[0].scrollTop)),this.reverting=!0,t(this.helper).animate(a,parseInt(this.options.revert,10)||500,function(){n._clear(e)})}else this._clear(e,i);return!1}},cancel:function(){if(this.dragging){this._mouseUp({target:null}),"original"===this.options.helper?this.currentItem.css(this._storedCSS).removeClass("ui-sortable-helper"):this.currentItem.show();for(var e=this.containers.length-1;e>=0;e--)this.containers[e]._trigger("deactivate",null,this._uiHash(this)),this.containers[e].containerCache.over&&(this.containers[e]._trigger("out",null,this._uiHash(this)),this.containers[e].containerCache.over=0)}return this.placeholder&&(this.placeholder[0].parentNode&&this.placeholder[0].parentNode.removeChild(this.placeholder[0]),"original"!==this.options.helper&&this.helper&&this.helper[0].parentNode&&this.helper.remove(),t.extend(this,{helper:null,dragging:!1,reverting:!1,_noFinalSort:null}),this.domPosition.prev?t(this.domPosition.prev).after(this.currentItem):t(this.domPosition.parent).prepend(this.currentItem)),this},serialize:function(e){var i=this._getItemsAsjQuery(e&&e.connected),n=[];return e=e||{},t(i).each(function(){var i=(t(e.item||this).attr(e.attribute||"id")||"").match(e.expression||/(.+)[\-=_](.+)/);i&&n.push((e.key||i[1]+"[]")+"="+(e.key&&e.expression?i[1]:i[2]))}),!n.length&&e.key&&n.push(e.key+"="),n.join("&")},toArray:function(e){var i=this._getItemsAsjQuery(e&&e.connected),n=[];return e=e||{},i.each(function(){n.push(t(e.item||this).attr(e.attribute||"id")||"")}),n},_intersectsWith:function(t){var e=this.positionAbs.left,i=e+this.helperProportions.width,n=this.positionAbs.top,r=n+this.helperProportions.height,o=t.left,a=o+t.width,s=t.top,l=s+t.height,c=this.offset.click.top,u=this.offset.click.left,h="x"===this.options.axis||n+c>s&&l>n+c,d="y"===this.options.axis||e+u>o&&a>e+u,p=h&&d;return"pointer"===this.options.tolerance||this.options.forcePointerForContainers||"pointer"!==this.options.tolerance&&this.helperProportions[this.floating?"width":"height"]>t[this.floating?"width":"height"]?p:o<e+this.helperProportions.width/2&&i-this.helperProportions.width/2<a&&s<n+this.helperProportions.height/2&&r-this.helperProportions.height/2<l},_intersectsWithPointer:function(t){var e="x"===this.options.axis||this._isOverAxis(this.positionAbs.top+this.offset.click.top,t.top,t.height),i="y"===this.options.axis||this._isOverAxis(this.positionAbs.left+this.offset.click.left,t.left,t.width),n=e&&i,r=this._getDragVerticalDirection(),o=this._getDragHorizontalDirection();return n?this.floating?o&&"right"===o||"down"===r?2:1:r&&("down"===r?2:1):!1},_intersectsWithSides:function(t){var e=this._isOverAxis(this.positionAbs.top+this.offset.click.top,t.top+t.height/2,t.height),i=this._isOverAxis(this.positionAbs.left+this.offset.click.left,t.left+t.width/2,t.width),n=this._getDragVerticalDirection(),r=this._getDragHorizontalDirection();return this.floating&&r?"right"===r&&i||"left"===r&&!i:n&&("down"===n&&e||"up"===n&&!e)},_getDragVerticalDirection:function(){var t=this.positionAbs.top-this.lastPositionAbs.top;return 0!==t&&(t>0?"down":"up")},_getDragHorizontalDirection:function(){var t=this.positionAbs.left-this.lastPositionAbs.left;return 0!==t&&(t>0?"right":"left")},refresh:function(t){return this._refreshItems(t),this._setHandleClassName(),this.refreshPositions(),this},_connectWith:function(){var t=this.options;return t.connectWith.constructor===String?[t.connectWith]:t.connectWith},_getItemsAsjQuery:function(e){function i(){s.push(this)}var n,r,o,a,s=[],l=[],c=this._connectWith();if(c&&e)for(n=c.length-1;n>=0;n--)for(o=t(c[n],this.document[0]),r=o.length-1;r>=0;r--)a=t.data(o[r],this.widgetFullName),a&&a!==this&&!a.options.disabled&&l.push([t.isFunction(a.options.items)?a.options.items.call(a.element):t(a.options.items,a.element).not(".ui-sortable-helper").not(".ui-sortable-placeholder"),a]);for(l.push([t.isFunction(this.options.items)?this.options.items.call(this.element,null,{options:this.options,item:this.currentItem}):t(this.options.items,this.element).not(".ui-sortable-helper").not(".ui-sortable-placeholder"),this]),n=l.length-1;n>=0;n--)l[n][0].each(i);return t(s)},_removeCurrentsFromItems:function(){var e=this.currentItem.find(":data("+this.widgetName+"-item)");this.items=t.grep(this.items,function(t){for(var i=0;i<e.length;i++)if(e[i]===t.item[0])return!1;return!0})},_refreshItems:function(e){this.items=[],this.containers=[this];var i,n,r,o,a,s,l,c,u=this.items,h=[[t.isFunction(this.options.items)?this.options.items.call(this.element[0],e,{item:this.currentItem}):t(this.options.items,this.element),this]],d=this._connectWith();if(d&&this.ready)for(i=d.length-1;i>=0;i--)for(r=t(d[i],this.document[0]),n=r.length-1;n>=0;n--)o=t.data(r[n],this.widgetFullName),o&&o!==this&&!o.options.disabled&&(h.push([t.isFunction(o.options.items)?o.options.items.call(o.element[0],e,{item:this.currentItem}):t(o.options.items,o.element),o]),this.containers.push(o));for(i=h.length-1;i>=0;i--)for(a=h[i][1],s=h[i][0],n=0,c=s.length;c>n;n++)l=t(s[n]),l.data(this.widgetName+"-item",a),u.push({item:l,instance:a,width:0,height:0,left:0,top:0})},refreshPositions:function(e){this.floating=this.items.length?"x"===this.options.axis||this._isFloating(this.items[0].item):!1,this.offsetParent&&this.helper&&(this.offset.parent=this._getParentOffset());var i,n,r,o;for(i=this.items.length-1;i>=0;i--)n=this.items[i],n.instance!==this.currentContainer&&this.currentContainer&&n.item[0]!==this.currentItem[0]||(r=this.options.toleranceElement?t(this.options.toleranceElement,n.item):n.item,e||(n.width=r.outerWidth(),n.height=r.outerHeight()),o=r.offset(),n.left=o.left,n.top=o.top);if(this.options.custom&&this.options.custom.refreshContainers)this.options.custom.refreshContainers.call(this);else for(i=this.containers.length-1;i>=0;i--)o=this.containers[i].element.offset(),this.containers[i].containerCache.left=o.left,this.containers[i].containerCache.top=o.top,this.containers[i].containerCache.width=this.containers[i].element.outerWidth(),this.containers[i].containerCache.height=this.containers[i].element.outerHeight();return this},_createPlaceholder:function(e){e=e||this;var i,n=e.options;n.placeholder&&n.placeholder.constructor!==String||(i=n.placeholder,n.placeholder={element:function(){var n=e.currentItem[0].nodeName.toLowerCase(),r=t("<"+n+">",e.document[0]).addClass(i||e.currentItem[0].className+" ui-sortable-placeholder").removeClass("ui-sortable-helper");return"tbody"===n?e._createTrPlaceholder(e.currentItem.find("tr").eq(0),t("<tr>",e.document[0]).appendTo(r)):"tr"===n?e._createTrPlaceholder(e.currentItem,r):"img"===n&&r.attr("src",e.currentItem.attr("src")),i||r.css("visibility","hidden"),r},update:function(t,r){i&&!n.forcePlaceholderSize||(r.height()||r.height(e.currentItem.innerHeight()-parseInt(e.currentItem.css("paddingTop")||0,10)-parseInt(e.currentItem.css("paddingBottom")||0,10)),r.width()||r.width(e.currentItem.innerWidth()-parseInt(e.currentItem.css("paddingLeft")||0,10)-parseInt(e.currentItem.css("paddingRight")||0,10)))}}),e.placeholder=t(n.placeholder.element.call(e.element,e.currentItem)),e.currentItem.after(e.placeholder),n.placeholder.update(e,e.placeholder)},_createTrPlaceholder:function(e,i){var n=this;e.children().each(function(){t("<td>&#160;</td>",n.document[0]).attr("colspan",t(this).attr("colspan")||1).appendTo(i)})},_contactContainers:function(e){var i,n,r,o,a,s,l,c,u,h,d=null,p=null;for(i=this.containers.length-1;i>=0;i--)if(!t.contains(this.currentItem[0],this.containers[i].element[0]))if(this._intersectsWith(this.containers[i].containerCache)){if(d&&t.contains(this.containers[i].element[0],d.element[0]))continue;d=this.containers[i],p=i}else this.containers[i].containerCache.over&&(this.containers[i]._trigger("out",e,this._uiHash(this)),this.containers[i].containerCache.over=0);if(d)if(1===this.containers.length)this.containers[p].containerCache.over||(this.containers[p]._trigger("over",e,this._uiHash(this)),this.containers[p].containerCache.over=1);else{for(r=1e4,o=null,u=d.floating||this._isFloating(this.currentItem),a=u?"left":"top",s=u?"width":"height",h=u?"clientX":"clientY",n=this.items.length-1;n>=0;n--)t.contains(this.containers[p].element[0],this.items[n].item[0])&&this.items[n].item[0]!==this.currentItem[0]&&(l=this.items[n].item.offset()[a],c=!1,e[h]-l>this.items[n][s]/2&&(c=!0),Math.abs(e[h]-l)<r&&(r=Math.abs(e[h]-l),o=this.items[n],this.direction=c?"up":"down"));if(!o&&!this.options.dropOnEmpty)return;if(this.currentContainer===this.containers[p])return void(this.currentContainer.containerCache.over||(this.containers[p]._trigger("over",e,this._uiHash()),this.currentContainer.containerCache.over=1));o?this._rearrange(e,o,null,!0):this._rearrange(e,null,this.containers[p].element,!0),this._trigger("change",e,this._uiHash()),this.containers[p]._trigger("change",e,this._uiHash(this)),this.currentContainer=this.containers[p],this.options.placeholder.update(this.currentContainer,this.placeholder),this.containers[p]._trigger("over",e,this._uiHash(this)),this.containers[p].containerCache.over=1}},_createHelper:function(e){var i=this.options,n=t.isFunction(i.helper)?t(i.helper.apply(this.element[0],[e,this.currentItem])):"clone"===i.helper?this.currentItem.clone():this.currentItem;return n.parents("body").length||t("parent"!==i.appendTo?i.appendTo:this.currentItem[0].parentNode)[0].appendChild(n[0]),n[0]===this.currentItem[0]&&(this._storedCSS={width:this.currentItem[0].style.width,height:this.currentItem[0].style.height,position:this.currentItem.css("position"),top:this.currentItem.css("top"),left:this.currentItem.css("left")}),n[0].style.width&&!i.forceHelperSize||n.width(this.currentItem.width()),n[0].style.height&&!i.forceHelperSize||n.height(this.currentItem.height()),n},_adjustOffsetFromHelper:function(e){"string"==typeof e&&(e=e.split(" ")),t.isArray(e)&&(e={left:+e[0],top:+e[1]||0}),"left"in e&&(this.offset.click.left=e.left+this.margins.left),"right"in e&&(this.offset.click.left=this.helperProportions.width-e.right+this.margins.left),"top"in e&&(this.offset.click.top=e.top+this.margins.top),"bottom"in e&&(this.offset.click.top=this.helperProportions.height-e.bottom+this.margins.top)},_getParentOffset:function(){this.offsetParent=this.helper.offsetParent();var e=this.offsetParent.offset();return"absolute"===this.cssPosition&&this.scrollParent[0]!==this.document[0]&&t.contains(this.scrollParent[0],this.offsetParent[0])&&(e.left+=this.scrollParent.scrollLeft(),e.top+=this.scrollParent.scrollTop()),(this.offsetParent[0]===this.document[0].body||this.offsetParent[0].tagName&&"html"===this.offsetParent[0].tagName.toLowerCase()&&t.ui.ie)&&(e={top:0,left:0}),{top:e.top+(parseInt(this.offsetParent.css("borderTopWidth"),10)||0),left:e.left+(parseInt(this.offsetParent.css("borderLeftWidth"),10)||0)}},_getRelativeOffset:function(){if("relative"===this.cssPosition){var t=this.currentItem.position();return{top:t.top-(parseInt(this.helper.css("top"),10)||0)+this.scrollParent.scrollTop(),left:t.left-(parseInt(this.helper.css("left"),10)||0)+this.scrollParent.scrollLeft()}}return{top:0,left:0}},_cacheMargins:function(){this.margins={left:parseInt(this.currentItem.css("marginLeft"),10)||0,top:parseInt(this.currentItem.css("marginTop"),10)||0}},_cacheHelperProportions:function(){this.helperProportions={width:this.helper.outerWidth(),height:this.helper.outerHeight()}},_setContainment:function(){var e,i,n,r=this.options;"parent"===r.containment&&(r.containment=this.helper[0].parentNode),"document"!==r.containment&&"window"!==r.containment||(this.containment=[0-this.offset.relative.left-this.offset.parent.left,0-this.offset.relative.top-this.offset.parent.top,"document"===r.containment?this.document.width():this.window.width()-this.helperProportions.width-this.margins.left,("document"===r.containment?this.document.width():this.window.height()||this.document[0].body.parentNode.scrollHeight)-this.helperProportions.height-this.margins.top]),/^(document|window|parent)$/.test(r.containment)||(e=t(r.containment)[0],i=t(r.containment).offset(),n="hidden"!==t(e).css("overflow"),this.containment=[i.left+(parseInt(t(e).css("borderLeftWidth"),10)||0)+(parseInt(t(e).css("paddingLeft"),10)||0)-this.margins.left,i.top+(parseInt(t(e).css("borderTopWidth"),10)||0)+(parseInt(t(e).css("paddingTop"),10)||0)-this.margins.top,i.left+(n?Math.max(e.scrollWidth,e.offsetWidth):e.offsetWidth)-(parseInt(t(e).css("borderLeftWidth"),10)||0)-(parseInt(t(e).css("paddingRight"),10)||0)-this.helperProportions.width-this.margins.left,i.top+(n?Math.max(e.scrollHeight,e.offsetHeight):e.offsetHeight)-(parseInt(t(e).css("borderTopWidth"),10)||0)-(parseInt(t(e).css("paddingBottom"),10)||0)-this.helperProportions.height-this.margins.top])},_convertPositionTo:function(e,i){i||(i=this.position);var n="absolute"===e?1:-1,r="absolute"!==this.cssPosition||this.scrollParent[0]!==this.document[0]&&t.contains(this.scrollParent[0],this.offsetParent[0])?this.scrollParent:this.offsetParent,o=/(html|body)/i.test(r[0].tagName);return{top:i.top+this.offset.relative.top*n+this.offset.parent.top*n-("fixed"===this.cssPosition?-this.scrollParent.scrollTop():o?0:r.scrollTop())*n,left:i.left+this.offset.relative.left*n+this.offset.parent.left*n-("fixed"===this.cssPosition?-this.scrollParent.scrollLeft():o?0:r.scrollLeft())*n}},_generatePosition:function(e){var i,n,r=this.options,o=e.pageX,a=e.pageY,s="absolute"!==this.cssPosition||this.scrollParent[0]!==this.document[0]&&t.contains(this.scrollParent[0],this.offsetParent[0])?this.scrollParent:this.offsetParent,l=/(html|body)/i.test(s[0].tagName);return"relative"!==this.cssPosition||this.scrollParent[0]!==this.document[0]&&this.scrollParent[0]!==this.offsetParent[0]||(this.offset.relative=this._getRelativeOffset()),this.originalPosition&&(this.containment&&(e.pageX-this.offset.click.left<this.containment[0]&&(o=this.containment[0]+this.offset.click.left),e.pageY-this.offset.click.top<this.containment[1]&&(a=this.containment[1]+this.offset.click.top),e.pageX-this.offset.click.left>this.containment[2]&&(o=this.containment[2]+this.offset.click.left),e.pageY-this.offset.click.top>this.containment[3]&&(a=this.containment[3]+this.offset.click.top)),r.grid&&(i=this.originalPageY+Math.round((a-this.originalPageY)/r.grid[1])*r.grid[1],a=this.containment?i-this.offset.click.top>=this.containment[1]&&i-this.offset.click.top<=this.containment[3]?i:i-this.offset.click.top>=this.containment[1]?i-r.grid[1]:i+r.grid[1]:i,n=this.originalPageX+Math.round((o-this.originalPageX)/r.grid[0])*r.grid[0],o=this.containment?n-this.offset.click.left>=this.containment[0]&&n-this.offset.click.left<=this.containment[2]?n:n-this.offset.click.left>=this.containment[0]?n-r.grid[0]:n+r.grid[0]:n)),{top:a-this.offset.click.top-this.offset.relative.top-this.offset.parent.top+("fixed"===this.cssPosition?-this.scrollParent.scrollTop():l?0:s.scrollTop()),left:o-this.offset.click.left-this.offset.relative.left-this.offset.parent.left+("fixed"===this.cssPosition?-this.scrollParent.scrollLeft():l?0:s.scrollLeft())}},_rearrange:function(t,e,i,n){i?i[0].appendChild(this.placeholder[0]):e.item[0].parentNode.insertBefore(this.placeholder[0],"down"===this.direction?e.item[0]:e.item[0].nextSibling),this.counter=this.counter?++this.counter:1;var r=this.counter;this._delay(function(){r===this.counter&&this.refreshPositions(!n)})},_clear:function(t,e){function i(t,e,i){return function(n){i._trigger(t,n,e._uiHash(e))}}this.reverting=!1;var n,r=[];if(!this._noFinalSort&&this.currentItem.parent().length&&this.placeholder.before(this.currentItem),this._noFinalSort=null,this.helper[0]===this.currentItem[0]){for(n in this._storedCSS)"auto"!==this._storedCSS[n]&&"static"!==this._storedCSS[n]||(this._storedCSS[n]="");this.currentItem.css(this._storedCSS).removeClass("ui-sortable-helper")}else this.currentItem.show();for(this.fromOutside&&!e&&r.push(function(t){this._trigger("receive",t,this._uiHash(this.fromOutside))}),!this.fromOutside&&this.domPosition.prev===this.currentItem.prev().not(".ui-sortable-helper")[0]&&this.domPosition.parent===this.currentItem.parent()[0]||e||r.push(function(t){this._trigger("update",t,this._uiHash())}),this!==this.currentContainer&&(e||(r.push(function(t){this._trigger("remove",t,this._uiHash())}),r.push(function(t){return function(e){t._trigger("receive",e,this._uiHash(this))}}.call(this,this.currentContainer)),r.push(function(t){return function(e){t._trigger("update",e,this._uiHash(this))}}.call(this,this.currentContainer)))),n=this.containers.length-1;n>=0;n--)e||r.push(i("deactivate",this,this.containers[n])),this.containers[n].containerCache.over&&(r.push(i("out",this,this.containers[n])),this.containers[n].containerCache.over=0);if(this.storedCursor&&(this.document.find("body").css("cursor",this.storedCursor),this.storedStylesheet.remove()),this._storedOpacity&&this.helper.css("opacity",this._storedOpacity),this._storedZIndex&&this.helper.css("zIndex","auto"===this._storedZIndex?"":this._storedZIndex),this.dragging=!1,e||this._trigger("beforeStop",t,this._uiHash()),this.placeholder[0].parentNode.removeChild(this.placeholder[0]),this.cancelHelperRemoval||(this.helper[0]!==this.currentItem[0]&&this.helper.remove(),this.helper=null),!e){for(n=0;n<r.length;n++)r[n].call(this,t);this._trigger("stop",t,this._uiHash())}return this.fromOutside=!1,!this.cancelHelperRemoval},_trigger:function(){t.Widget.prototype._trigger.apply(this,arguments)===!1&&this.cancel()},_uiHash:function(e){var i=e||this;return{helper:i.helper,placeholder:i.placeholder||t([]),position:i.position,originalPosition:i.originalPosition,offset:i.positionAbs,item:i.currentItem,sender:e?e.element:null}}})}),!function(t){"use strict";"object"==typeof exports?module.exports=t(window.jQuery):"function"==typeof define&&define.amd?define(["jquery"],t):window.jQuery&&!window.jQuery.fn.colorpicker&&t(window.jQuery)}(function(t){"use strict";var e=function(e,i){this.value={h:0,s:0,b:0,a:1},this.origFormat=null,i&&t.extend(this.colors,i),e&&(void 0!==e.toLowerCase?(e+="",this.setColor(e)):void 0!==e.h&&(this.value=e))};e.prototype={constructor:e,colors:{aliceblue:"#f0f8ff",antiquewhite:"#faebd7",aqua:"#00ffff",aquamarine:"#7fffd4",azure:"#f0ffff",beige:"#f5f5dc",bisque:"#ffe4c4",black:"#000000",blanchedalmond:"#ffebcd",blue:"#0000ff",blueviolet:"#8a2be2",brown:"#a52a2a",burlywood:"#deb887",cadetblue:"#5f9ea0",chartreuse:"#7fff00",chocolate:"#d2691e",coral:"#ff7f50",cornflowerblue:"#6495ed",cornsilk:"#fff8dc",crimson:"#dc143c",cyan:"#00ffff",darkblue:"#00008b",darkcyan:"#008b8b",darkgoldenrod:"#b8860b",darkgray:"#a9a9a9",darkgreen:"#006400",darkkhaki:"#bdb76b",darkmagenta:"#8b008b",darkolivegreen:"#556b2f",darkorange:"#ff8c00",darkorchid:"#9932cc",darkred:"#8b0000",darksalmon:"#e9967a",darkseagreen:"#8fbc8f",darkslateblue:"#483d8b",darkslategray:"#2f4f4f",darkturquoise:"#00ced1",darkviolet:"#9400d3",deeppink:"#ff1493",deepskyblue:"#00bfff",dimgray:"#696969",dodgerblue:"#1e90ff",firebrick:"#b22222",floralwhite:"#fffaf0",forestgreen:"#228b22",fuchsia:"#ff00ff",gainsboro:"#dcdcdc",ghostwhite:"#f8f8ff",gold:"#ffd700",goldenrod:"#daa520",gray:"#808080",green:"#008000",greenyellow:"#adff2f",honeydew:"#f0fff0",hotpink:"#ff69b4",indianred:"#cd5c5c",indigo:"#4b0082",ivory:"#fffff0",khaki:"#f0e68c",lavender:"#e6e6fa",lavenderblush:"#fff0f5",lawngreen:"#7cfc00",lemonchiffon:"#fffacd",lightblue:"#add8e6",lightcoral:"#f08080",lightcyan:"#e0ffff",lightgoldenrodyellow:"#fafad2",lightgrey:"#d3d3d3",lightgreen:"#90ee90",lightpink:"#ffb6c1",lightsalmon:"#ffa07a",lightseagreen:"#20b2aa",lightskyblue:"#87cefa",lightslategray:"#778899",lightsteelblue:"#b0c4de",lightyellow:"#ffffe0",lime:"#00ff00",limegreen:"#32cd32",linen:"#faf0e6",magenta:"#ff00ff",maroon:"#800000",mediumaquamarine:"#66cdaa",mediumblue:"#0000cd",mediumorchid:"#ba55d3",mediumpurple:"#9370d8",mediumseagreen:"#3cb371",mediumslateblue:"#7b68ee",mediumspringgreen:"#00fa9a",mediumturquoise:"#48d1cc",mediumvioletred:"#c71585",midnightblue:"#191970",mintcream:"#f5fffa",mistyrose:"#ffe4e1",moccasin:"#ffe4b5",navajowhite:"#ffdead",navy:"#000080",oldlace:"#fdf5e6",olive:"#808000",olivedrab:"#6b8e23",orange:"#ffa500",orangered:"#ff4500",orchid:"#da70d6",palegoldenrod:"#eee8aa",palegreen:"#98fb98",paleturquoise:"#afeeee",palevioletred:"#d87093",papayawhip:"#ffefd5",peachpuff:"#ffdab9",peru:"#cd853f",pink:"#ffc0cb",plum:"#dda0dd",powderblue:"#b0e0e6",purple:"#800080",red:"#ff0000",rosybrown:"#bc8f8f",royalblue:"#4169e1",saddlebrown:"#8b4513",salmon:"#fa8072",sandybrown:"#f4a460",seagreen:"#2e8b57",seashell:"#fff5ee",sienna:"#a0522d",silver:"#c0c0c0",skyblue:"#87ceeb",slateblue:"#6a5acd",slategray:"#708090",snow:"#fffafa",springgreen:"#00ff7f",steelblue:"#4682b4",tan:"#d2b48c",teal:"#008080",thistle:"#d8bfd8",tomato:"#ff6347",turquoise:"#40e0d0",violet:"#ee82ee",wheat:"#f5deb3",white:"#ffffff",whitesmoke:"#f5f5f5",yellow:"#ffff00",yellowgreen:"#9acd32",transparent:"transparent"},_sanitizeNumber:function(t){return"number"==typeof t?t:isNaN(t)||null===t||""===t||void 0===t?1:""===t?0:void 0!==t.toLowerCase?(t.match(/^\./)&&(t="0"+t),Math.ceil(100*parseFloat(t))/100):1},isTransparent:function(t){return t?(t=t.toLowerCase().trim(),"transparent"===t||t.match(/#?00000000/)||t.match(/(rgba|hsla)\(0,0,0,0?\.?0\)/)):!1},rgbaIsTransparent:function(t){return 0===t.r&&0===t.g&&0===t.b&&0===t.a},setColor:function(t){t=t.toLowerCase().trim(),t&&(this.isTransparent(t)?this.value={h:0,s:0,b:0,a:0}:this.value=this.stringToHSB(t)||{h:0,s:0,b:0,a:1})},stringToHSB:function(e){e=e.toLowerCase();var i;"undefined"!=typeof this.colors[e]&&(e=this.colors[e],i="alias");var n=this,r=!1;return t.each(this.stringParsers,function(t,o){var a=o.re.exec(e),s=a&&o.parse.apply(n,[a]),l=i||o.format||"rgba";return s?(r=l.match(/hsla?/)?n.RGBtoHSB.apply(n,n.HSLtoRGB.apply(n,s)):n.RGBtoHSB.apply(n,s),n.origFormat=l,!1):!0}),r},setHue:function(t){this.value.h=1-t},setSaturation:function(t){this.value.s=t},setBrightness:function(t){this.value.b=1-t},setAlpha:function(t){this.value.a=Math.round(parseInt(100*(1-t),10)/100*100)/100},toRGB:function(t,e,i,n){t||(t=this.value.h,e=this.value.s,i=this.value.b),t*=360;var r,o,a,s,l;return t=t%360/60,l=i*e,s=l*(1-Math.abs(t%2-1)),r=o=a=i-l,t=~~t,r+=[l,s,0,0,s,l][t],o+=[s,l,l,s,0,0][t],a+=[0,0,s,l,l,s][t],{r:Math.round(255*r),g:Math.round(255*o),b:Math.round(255*a),a:n||this.value.a}},toHex:function(t,e,i,n){var r=this.toRGB(t,e,i,n);return this.rgbaIsTransparent(r)?"transparent":"#"+(1<<24|parseInt(r.r)<<16|parseInt(r.g)<<8|parseInt(r.b)).toString(16).substr(1)},toHSL:function(t,e,i,n){t=t||this.value.h,e=e||this.value.s,i=i||this.value.b,n=n||this.value.a;var r=t,o=(2-e)*i,a=e*i;return a/=o>0&&1>=o?o:2-o,o/=2,a>1&&(a=1),{h:isNaN(r)?0:r,s:isNaN(a)?0:a,l:isNaN(o)?0:o,a:isNaN(n)?0:n}},toAlias:function(t,e,i,n){var r=this.toHex(t,e,i,n);for(var o in this.colors)if(this.colors[o]===r)return o;return!1},RGBtoHSB:function(t,e,i,n){t/=255,e/=255,i/=255;var r,o,a,s;return a=Math.max(t,e,i),s=a-Math.min(t,e,i),r=0===s?null:a===t?(e-i)/s:a===e?(i-t)/s+2:(t-e)/s+4,r=(r+360)%6*60/360,o=0===s?0:s/a,{h:this._sanitizeNumber(r),s:o,b:a,a:this._sanitizeNumber(n)}},HueToRGB:function(t,e,i){return 0>i?i+=1:i>1&&(i-=1),1>6*i?t+(e-t)*i*6:1>2*i?e:2>3*i?t+(e-t)*(2/3-i)*6:t},HSLtoRGB:function(t,e,i,n){0>e&&(e=0);var r;r=.5>=i?i*(1+e):i+e-i*e;var o=2*i-r,a=t+1/3,s=t,l=t-1/3,c=Math.round(255*this.HueToRGB(o,r,a)),u=Math.round(255*this.HueToRGB(o,r,s)),h=Math.round(255*this.HueToRGB(o,r,l));return[c,u,h,this._sanitizeNumber(n)]},toString:function(t){t=t||"rgba";var e=!1;switch(t){case"rgb":return e=this.toRGB(),this.rgbaIsTransparent(e)?"transparent":"rgb("+e.r+","+e.g+","+e.b+")";case"rgba":return e=this.toRGB(),
"rgba("+e.r+","+e.g+","+e.b+","+e.a+")";case"hsl":return e=this.toHSL(),"hsl("+Math.round(360*e.h)+","+Math.round(100*e.s)+"%,"+Math.round(100*e.l)+"%)";case"hsla":return e=this.toHSL(),"hsla("+Math.round(360*e.h)+","+Math.round(100*e.s)+"%,"+Math.round(100*e.l)+"%,"+e.a+")";case"hex":return this.toHex();case"alias":return this.toAlias()||this.toHex();default:return e}},stringParsers:[{re:/rgb\(\s*(\d{1,3})\s*,\s*(\d{1,3})\s*,\s*(\d{1,3})\s*?\)/,format:"rgb",parse:function(t){return[t[1],t[2],t[3],1]}},{re:/rgb\(\s*(\d*(?:\.\d+)?)\%\s*,\s*(\d*(?:\.\d+)?)\%\s*,\s*(\d*(?:\.\d+)?)\%\s*?\)/,format:"rgb",parse:function(t){return[2.55*t[1],2.55*t[2],2.55*t[3],1]}},{re:/rgba\(\s*(\d{1,3})\s*,\s*(\d{1,3})\s*,\s*(\d{1,3})\s*(?:,\s*(\d*(?:\.\d+)?)\s*)?\)/,format:"rgba",parse:function(t){return[t[1],t[2],t[3],t[4]]}},{re:/rgba\(\s*(\d*(?:\.\d+)?)\%\s*,\s*(\d*(?:\.\d+)?)\%\s*,\s*(\d*(?:\.\d+)?)\%\s*(?:,\s*(\d*(?:\.\d+)?)\s*)?\)/,format:"rgba",parse:function(t){return[2.55*t[1],2.55*t[2],2.55*t[3],t[4]]}},{re:/hsl\(\s*(\d*(?:\.\d+)?)\s*,\s*(\d*(?:\.\d+)?)\%\s*,\s*(\d*(?:\.\d+)?)\%\s*?\)/,format:"hsl",parse:function(t){return[t[1]/360,t[2]/100,t[3]/100,t[4]]}},{re:/hsla\(\s*(\d*(?:\.\d+)?)\s*,\s*(\d*(?:\.\d+)?)\%\s*,\s*(\d*(?:\.\d+)?)\%\s*(?:,\s*(\d*(?:\.\d+)?)\s*)?\)/,format:"hsla",parse:function(t){return[t[1]/360,t[2]/100,t[3]/100,t[4]]}},{re:/#?([a-fA-F0-9]{2})([a-fA-F0-9]{2})([a-fA-F0-9]{2})/,format:"hex",parse:function(t){return[parseInt(t[1],16),parseInt(t[2],16),parseInt(t[3],16),1]}},{re:/#?([a-fA-F0-9])([a-fA-F0-9])([a-fA-F0-9])/,format:"hex",parse:function(t){return[parseInt(t[1]+t[1],16),parseInt(t[2]+t[2],16),parseInt(t[3]+t[3],16),1]}}],colorNameToHex:function(t){return"undefined"!=typeof this.colors[t.toLowerCase()]?this.colors[t.toLowerCase()]:!1}};var i={horizontal:!1,inline:!1,color:!1,format:!1,input:"input",container:!1,component:".add-on, .input-group-addon",sliders:{saturation:{maxLeft:100,maxTop:100,callLeft:"setSaturation",callTop:"setBrightness"},hue:{maxLeft:0,maxTop:100,callLeft:!1,callTop:"setHue"},alpha:{maxLeft:0,maxTop:100,callLeft:!1,callTop:"setAlpha"}},slidersHorz:{saturation:{maxLeft:100,maxTop:100,callLeft:"setSaturation",callTop:"setBrightness"},hue:{maxLeft:100,maxTop:0,callLeft:"setHue",callTop:!1},alpha:{maxLeft:100,maxTop:0,callLeft:"setAlpha",callTop:!1}},template:'<div class="colorpicker dropdown-menu"><div class="colorpicker-saturation"><i><b></b></i></div><div class="colorpicker-hue"><i></i></div><div class="colorpicker-alpha"><i></i></div><div class="colorpicker-color"><div /></div><div class="colorpicker-selectors"></div></div>',align:"right",customClass:null,colorSelectors:null},n=function(n,r){if(this.element=t(n).addClass("colorpicker-element"),this.options=t.extend(!0,{},i,this.element.data(),r),this.component=this.options.component,this.component=this.component!==!1?this.element.find(this.component):!1,this.component&&0===this.component.length&&(this.component=!1),this.container=this.options.container===!0?this.element:this.options.container,this.container=this.container!==!1?t(this.container):!1,this.input=this.element.is("input")?this.element:this.options.input?this.element.find(this.options.input):!1,this.input&&0===this.input.length&&(this.input=!1),this.color=new e(this.options.color!==!1?this.options.color:this.getValue(),this.options.colorSelectors),this.format=this.options.format!==!1?this.options.format:this.color.origFormat,this.options.color!==!1&&(this.updateInput(this.color),this.updateData(this.color)),this.picker=t(this.options.template),this.options.customClass&&this.picker.addClass(this.options.customClass),this.options.inline?this.picker.addClass("colorpicker-inline colorpicker-visible"):this.picker.addClass("colorpicker-hidden"),this.options.horizontal&&this.picker.addClass("colorpicker-horizontal"),"rgba"!==this.format&&"hsla"!==this.format&&this.options.format!==!1||this.picker.addClass("colorpicker-with-alpha"),"right"===this.options.align&&this.picker.addClass("colorpicker-right"),this.options.inline===!0&&this.picker.addClass("colorpicker-no-arrow"),this.options.colorSelectors){var o=this;t.each(this.options.colorSelectors,function(e,i){var n=t("<i />").css("background-color",i).data("class",e);n.click(function(){o.setValue(t(this).css("background-color"))}),o.picker.find(".colorpicker-selectors").append(n)}),this.picker.find(".colorpicker-selectors").show()}this.picker.on("mousedown.colorpicker touchstart.colorpicker",t.proxy(this.mousedown,this)),this.picker.appendTo(this.container?this.container:t("body")),this.input!==!1&&(this.input.on({"keyup.colorpicker":t.proxy(this.keyup,this)}),this.input.on({"change.colorpicker":t.proxy(this.change,this)}),this.component===!1&&this.element.on({"focus.colorpicker":t.proxy(this.show,this)}),this.options.inline===!1&&this.element.on({"focusout.colorpicker":t.proxy(this.hide,this)})),this.component!==!1&&this.component.on({"click.colorpicker":t.proxy(this.show,this)}),this.input===!1&&this.component===!1&&this.element.on({"click.colorpicker":t.proxy(this.show,this)}),this.input!==!1&&this.component!==!1&&"color"===this.input.attr("type")&&this.input.on({"click.colorpicker":t.proxy(this.show,this),"focus.colorpicker":t.proxy(this.show,this)}),this.update(),t(t.proxy(function(){this.element.trigger("create")},this))};n.Color=e,n.prototype={constructor:n,destroy:function(){this.picker.remove(),this.element.removeData("colorpicker","color").off(".colorpicker"),this.input!==!1&&this.input.off(".colorpicker"),this.component!==!1&&this.component.off(".colorpicker"),this.element.removeClass("colorpicker-element"),this.element.trigger({type:"destroy"})},reposition:function(){if(this.options.inline!==!1||this.options.container)return!1;var t=this.container&&this.container[0]!==document.body?"position":"offset",e=this.component||this.element,i=e[t]();"right"===this.options.align&&(i.left-=this.picker.outerWidth()-e.outerWidth()),this.picker.css({top:i.top+e.outerHeight(),left:i.left})},show:function(e){return this.isDisabled()?!1:(this.picker.addClass("colorpicker-visible").removeClass("colorpicker-hidden"),this.reposition(),t(window).on("resize.colorpicker",t.proxy(this.reposition,this)),!e||this.hasInput()&&"color"!==this.input.attr("type")||e.stopPropagation&&e.preventDefault&&(e.stopPropagation(),e.preventDefault()),!this.component&&this.input||this.options.inline!==!1||t(window.document).on({"mousedown.colorpicker":t.proxy(this.hide,this)}),void this.element.trigger({type:"showPicker",color:this.color}))},hide:function(){this.picker.addClass("colorpicker-hidden").removeClass("colorpicker-visible"),t(window).off("resize.colorpicker",this.reposition),t(document).off({"mousedown.colorpicker":this.hide}),this.update(),this.element.trigger({type:"hidePicker",color:this.color})},updateData:function(t){return t=t||this.color.toString(this.format),this.element.data("color",t),t},updateInput:function(t){if(t=t||this.color.toString(this.format),this.input!==!1){if(this.options.colorSelectors){var i=new e(t,this.options.colorSelectors),n=i.toAlias();"undefined"!=typeof this.options.colorSelectors[n]&&(t=n)}this.input.prop("value",t)}return t},updatePicker:function(t){void 0!==t&&(this.color=new e(t,this.options.colorSelectors));var i=this.options.horizontal===!1?this.options.sliders:this.options.slidersHorz,n=this.picker.find("i");return 0!==n.length?(this.options.horizontal===!1?(i=this.options.sliders,n.eq(1).css("top",i.hue.maxTop*(1-this.color.value.h)).end().eq(2).css("top",i.alpha.maxTop*(1-this.color.value.a))):(i=this.options.slidersHorz,n.eq(1).css("left",i.hue.maxLeft*(1-this.color.value.h)).end().eq(2).css("left",i.alpha.maxLeft*(1-this.color.value.a))),n.eq(0).css({top:i.saturation.maxTop-this.color.value.b*i.saturation.maxTop,left:this.color.value.s*i.saturation.maxLeft}),this.picker.find(".colorpicker-saturation").css("backgroundColor",this.color.toHex(this.color.value.h,1,1,1)),this.picker.find(".colorpicker-alpha").css("backgroundColor",this.color.toHex()),this.picker.find(".colorpicker-color, .colorpicker-color div").css("backgroundColor",this.color.toString(this.format)),t):void 0},updateComponent:function(t){if(t=t||this.color.toString(this.format),this.component!==!1){var e=this.component.find("i").eq(0);e.length>0?e.css({backgroundColor:t}):this.component.css({backgroundColor:t})}return t},update:function(t){var e;return this.getValue(!1)===!1&&t!==!0||(e=this.updateComponent(),this.updateInput(e),this.updateData(e),this.updatePicker()),e},setValue:function(t){this.color=new e(t,this.options.colorSelectors),this.update(!0),this.element.trigger({type:"changeColor",color:this.color,value:t})},getValue:function(t){t=void 0===t?"#000000":t;var e;return e=this.hasInput()?this.input.val():this.element.data("color"),void 0!==e&&""!==e&&null!==e||(e=t),e},hasInput:function(){return this.input!==!1},isDisabled:function(){return this.hasInput()?this.input.prop("disabled")===!0:!1},disable:function(){return this.hasInput()?(this.input.prop("disabled",!0),this.element.trigger({type:"disable",color:this.color,value:this.getValue()}),!0):!1},enable:function(){return this.hasInput()?(this.input.prop("disabled",!1),this.element.trigger({type:"enable",color:this.color,value:this.getValue()}),!0):!1},currentSlider:null,mousePointer:{left:0,top:0},mousedown:function(e){!e.pageX&&!e.pageY&&e.originalEvent&&e.originalEvent.touches&&(e.pageX=e.originalEvent.touches[0].pageX,e.pageY=e.originalEvent.touches[0].pageY),e.stopPropagation(),e.preventDefault();var i=t(e.target),n=i.closest("div"),r=this.options.horizontal?this.options.slidersHorz:this.options.sliders;if(!n.is(".colorpicker")){if(n.is(".colorpicker-saturation"))this.currentSlider=t.extend({},r.saturation);else if(n.is(".colorpicker-hue"))this.currentSlider=t.extend({},r.hue);else{if(!n.is(".colorpicker-alpha"))return!1;this.currentSlider=t.extend({},r.alpha)}var o=n.offset();this.currentSlider.guide=n.find("i")[0].style,this.currentSlider.left=e.pageX-o.left,this.currentSlider.top=e.pageY-o.top,this.mousePointer={left:e.pageX,top:e.pageY},t(document).on({"mousemove.colorpicker":t.proxy(this.mousemove,this),"touchmove.colorpicker":t.proxy(this.mousemove,this),"mouseup.colorpicker":t.proxy(this.mouseup,this),"touchend.colorpicker":t.proxy(this.mouseup,this)}).trigger("mousemove")}return!1},mousemove:function(t){!t.pageX&&!t.pageY&&t.originalEvent&&t.originalEvent.touches&&(t.pageX=t.originalEvent.touches[0].pageX,t.pageY=t.originalEvent.touches[0].pageY),t.stopPropagation(),t.preventDefault();var e=Math.max(0,Math.min(this.currentSlider.maxLeft,this.currentSlider.left+((t.pageX||this.mousePointer.left)-this.mousePointer.left))),i=Math.max(0,Math.min(this.currentSlider.maxTop,this.currentSlider.top+((t.pageY||this.mousePointer.top)-this.mousePointer.top)));return this.currentSlider.guide.left=e+"px",this.currentSlider.guide.top=i+"px",this.currentSlider.callLeft&&this.color[this.currentSlider.callLeft].call(this.color,e/this.currentSlider.maxLeft),this.currentSlider.callTop&&this.color[this.currentSlider.callTop].call(this.color,i/this.currentSlider.maxTop),"setAlpha"===this.currentSlider.callTop&&this.options.format===!1&&(1!==this.color.value.a?(this.format="rgba",this.color.origFormat="rgba"):(this.format="hex",this.color.origFormat="hex")),this.update(!0),this.element.trigger({type:"changeColor",color:this.color}),!1},mouseup:function(e){return e.stopPropagation(),e.preventDefault(),t(document).off({"mousemove.colorpicker":this.mousemove,"touchmove.colorpicker":this.mousemove,"mouseup.colorpicker":this.mouseup,"touchend.colorpicker":this.mouseup}),!1},change:function(t){this.keyup(t)},keyup:function(t){38===t.keyCode?(this.color.value.a<1&&(this.color.value.a=Math.round(100*(this.color.value.a+.01))/100),this.update(!0)):40===t.keyCode?(this.color.value.a>0&&(this.color.value.a=Math.round(100*(this.color.value.a-.01))/100),this.update(!0)):(this.color=new e(this.input.val(),this.options.colorSelectors),this.color.origFormat&&this.options.format===!1&&(this.format=this.color.origFormat),this.getValue(!1)!==!1&&(this.updateData(),this.updateComponent(),this.updatePicker())),this.element.trigger({type:"changeColor",color:this.color,value:this.input.val()})}},t.colorpicker=n,t.fn.colorpicker=function(e){var i=arguments,r=null,o=this.each(function(){var o=t(this),a=o.data("colorpicker"),s="object"==typeof e?e:{};a||"string"==typeof e?"string"==typeof e&&(r=a[e].apply(a,Array.prototype.slice.call(i,1))):o.data("colorpicker",new n(this,s))});return"getValue"===e?r:o},t.fn.colorpicker.constructor=n}),!function(t){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=t();else if("function"==typeof define&&define.amd)define([],t);else{var e;e="undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:this,e.Chart=t()}}(function(){return function t(e,i,n){function r(a,s){if(!i[a]){if(!e[a]){var l="function"==typeof require&&require;if(!s&&l)return l(a,!0);if(o)return o(a,!0);var c=new Error("Cannot find module '"+a+"'");throw c.code="MODULE_NOT_FOUND",c}var u=i[a]={exports:{}};e[a][0].call(u.exports,function(t){var i=e[a][1][t];return r(i?i:t)},u,u.exports,t,e,i,n)}return i[a].exports}for(var o="function"==typeof require&&require,a=0;a<n.length;a++)r(n[a]);return r}({1:[function(t,e,i){},{}],2:[function(t,e,i){function n(t){if(t){var e=/^#([a-fA-F0-9]{3})$/,i=/^#([a-fA-F0-9]{6})$/,n=/^rgba?\(\s*([+-]?\d+)\s*,\s*([+-]?\d+)\s*,\s*([+-]?\d+)\s*(?:,\s*([+-]?[\d\.]+)\s*)?\)$/,r=/^rgba?\(\s*([+-]?[\d\.]+)\%\s*,\s*([+-]?[\d\.]+)\%\s*,\s*([+-]?[\d\.]+)\%\s*(?:,\s*([+-]?[\d\.]+)\s*)?\)$/,o=/(\w+)/,a=[0,0,0],s=1,l=t.match(e);if(l){l=l[1];for(var c=0;c<a.length;c++)a[c]=parseInt(l[c]+l[c],16)}else if(l=t.match(i)){l=l[1];for(var c=0;c<a.length;c++)a[c]=parseInt(l.slice(2*c,2*c+2),16)}else if(l=t.match(n)){for(var c=0;c<a.length;c++)a[c]=parseInt(l[c+1]);s=parseFloat(l[4])}else if(l=t.match(r)){for(var c=0;c<a.length;c++)a[c]=Math.round(2.55*parseFloat(l[c+1]));s=parseFloat(l[4])}else if(l=t.match(o)){if("transparent"==l[1])return[0,0,0,0];if(a=x[l[1]],!a)return}for(var c=0;c<a.length;c++)a[c]=y(a[c],0,255);return s=s||0==s?y(s,0,1):1,a[3]=s,a}}function r(t){if(t){var e=/^hsla?\(\s*([+-]?\d+)(?:deg)?\s*,\s*([+-]?[\d\.]+)%\s*,\s*([+-]?[\d\.]+)%\s*(?:,\s*([+-]?[\d\.]+)\s*)?\)/,i=t.match(e);if(i){var n=parseFloat(i[4]),r=y(parseInt(i[1]),0,360),o=y(parseFloat(i[2]),0,100),a=y(parseFloat(i[3]),0,100),s=y(isNaN(n)?1:n,0,1);return[r,o,a,s]}}}function o(t){if(t){var e=/^hwb\(\s*([+-]?\d+)(?:deg)?\s*,\s*([+-]?[\d\.]+)%\s*,\s*([+-]?[\d\.]+)%\s*(?:,\s*([+-]?[\d\.]+)\s*)?\)/,i=t.match(e);if(i){var n=parseFloat(i[4]),r=y(parseInt(i[1]),0,360),o=y(parseFloat(i[2]),0,100),a=y(parseFloat(i[3]),0,100),s=y(isNaN(n)?1:n,0,1);return[r,o,a,s]}}}function a(t){var e=n(t);return e&&e.slice(0,3)}function s(t){var e=r(t);return e&&e.slice(0,3)}function l(t){var e=n(t);return e?e[3]:(e=r(t))?e[3]:(e=o(t))?e[3]:void 0}function c(t){return"#"+b(t[0])+b(t[1])+b(t[2])}function u(t,e){return 1>e||t[3]&&t[3]<1?h(t,e):"rgb("+t[0]+", "+t[1]+", "+t[2]+")"}function h(t,e){return void 0===e&&(e=void 0!==t[3]?t[3]:1),"rgba("+t[0]+", "+t[1]+", "+t[2]+", "+e+")"}function d(t,e){if(1>e||t[3]&&t[3]<1)return p(t,e);var i=Math.round(t[0]/255*100),n=Math.round(t[1]/255*100),r=Math.round(t[2]/255*100);return"rgb("+i+"%, "+n+"%, "+r+"%)"}function p(t,e){var i=Math.round(t[0]/255*100),n=Math.round(t[1]/255*100),r=Math.round(t[2]/255*100);return"rgba("+i+"%, "+n+"%, "+r+"%, "+(e||t[3]||1)+")"}function f(t,e){return 1>e||t[3]&&t[3]<1?g(t,e):"hsl("+t[0]+", "+t[1]+"%, "+t[2]+"%)"}function g(t,e){return void 0===e&&(e=void 0!==t[3]?t[3]:1),"hsla("+t[0]+", "+t[1]+"%, "+t[2]+"%, "+e+")"}function m(t,e){return void 0===e&&(e=void 0!==t[3]?t[3]:1),"hwb("+t[0]+", "+t[1]+"%, "+t[2]+"%"+(void 0!==e&&1!==e?", "+e:"")+")"}function v(t){return k[t.slice(0,3)]}function y(t,e,i){return Math.min(Math.max(e,t),i)}function b(t){var e=t.toString(16).toUpperCase();return e.length<2?"0"+e:e}var x=t(6);e.exports={getRgba:n,getHsla:r,getRgb:a,getHsl:s,getHwb:o,getAlpha:l,hexString:c,rgbString:u,rgbaString:h,percentString:d,percentaString:p,hslString:f,hslaString:g,hwbString:m,keyword:v};var k={};for(var w in x)k[x[w]]=w},{6:6}],3:[function(t,e,i){var n=t(5),r=t(2),o=function(t){if(t instanceof o)return t;if(!(this instanceof o))return new o(t);this.values={rgb:[0,0,0],hsl:[0,0,0],hsv:[0,0,0],hwb:[0,0,0],cmyk:[0,0,0,0],alpha:1};var e;if("string"==typeof t)if(e=r.getRgba(t))this.setValues("rgb",e);else if(e=r.getHsla(t))this.setValues("hsl",e);else{if(!(e=r.getHwb(t)))throw new Error('Unable to parse color from string "'+t+'"');this.setValues("hwb",e)}else if("object"==typeof t)if(e=t,void 0!==e.r||void 0!==e.red)this.setValues("rgb",e);else if(void 0!==e.l||void 0!==e.lightness)this.setValues("hsl",e);else if(void 0!==e.v||void 0!==e.value)this.setValues("hsv",e);else if(void 0!==e.w||void 0!==e.whiteness)this.setValues("hwb",e);else{if(void 0===e.c&&void 0===e.cyan)throw new Error("Unable to parse color from object "+JSON.stringify(t));this.setValues("cmyk",e)}};o.prototype={rgb:function(){return this.setSpace("rgb",arguments)},hsl:function(){return this.setSpace("hsl",arguments)},hsv:function(){return this.setSpace("hsv",arguments)},hwb:function(){return this.setSpace("hwb",arguments)},cmyk:function(){return this.setSpace("cmyk",arguments)},rgbArray:function(){return this.values.rgb},hslArray:function(){return this.values.hsl},hsvArray:function(){return this.values.hsv},hwbArray:function(){var t=this.values;return 1!==t.alpha?t.hwb.concat([t.alpha]):t.hwb},cmykArray:function(){return this.values.cmyk},rgbaArray:function(){var t=this.values;return t.rgb.concat([t.alpha])},hslaArray:function(){var t=this.values;return t.hsl.concat([t.alpha])},alpha:function(t){return void 0===t?this.values.alpha:(this.setValues("alpha",t),this)},red:function(t){return this.setChannel("rgb",0,t)},green:function(t){return this.setChannel("rgb",1,t)},blue:function(t){return this.setChannel("rgb",2,t)},hue:function(t){return t&&(t%=360,t=0>t?360+t:t),this.setChannel("hsl",0,t)},saturation:function(t){return this.setChannel("hsl",1,t)},lightness:function(t){return this.setChannel("hsl",2,t)},saturationv:function(t){return this.setChannel("hsv",1,t)},whiteness:function(t){return this.setChannel("hwb",1,t)},blackness:function(t){return this.setChannel("hwb",2,t)},value:function(t){return this.setChannel("hsv",2,t)},cyan:function(t){return this.setChannel("cmyk",0,t)},magenta:function(t){return this.setChannel("cmyk",1,t)},yellow:function(t){return this.setChannel("cmyk",2,t)},black:function(t){return this.setChannel("cmyk",3,t)},hexString:function(){return r.hexString(this.values.rgb)},rgbString:function(){return r.rgbString(this.values.rgb,this.values.alpha)},rgbaString:function(){return r.rgbaString(this.values.rgb,this.values.alpha)},percentString:function(){return r.percentString(this.values.rgb,this.values.alpha)},hslString:function(){return r.hslString(this.values.hsl,this.values.alpha)},hslaString:function(){return r.hslaString(this.values.hsl,this.values.alpha)},hwbString:function(){return r.hwbString(this.values.hwb,this.values.alpha)},keyword:function(){return r.keyword(this.values.rgb,this.values.alpha)},rgbNumber:function(){var t=this.values.rgb;return t[0]<<16|t[1]<<8|t[2]},luminosity:function(){for(var t=this.values.rgb,e=[],i=0;i<t.length;i++){var n=t[i]/255;e[i]=.03928>=n?n/12.92:Math.pow((n+.055)/1.055,2.4)}return.2126*e[0]+.7152*e[1]+.0722*e[2]},contrast:function(t){var e=this.luminosity(),i=t.luminosity();return e>i?(e+.05)/(i+.05):(i+.05)/(e+.05)},level:function(t){var e=this.contrast(t);return e>=7.1?"AAA":e>=4.5?"AA":""},dark:function(){var t=this.values.rgb,e=(299*t[0]+587*t[1]+114*t[2])/1e3;return 128>e},light:function(){return!this.dark()},negate:function(){for(var t=[],e=0;3>e;e++)t[e]=255-this.values.rgb[e];return this.setValues("rgb",t),this},lighten:function(t){var e=this.values.hsl;return e[2]+=e[2]*t,this.setValues("hsl",e),this},darken:function(t){var e=this.values.hsl;return e[2]-=e[2]*t,this.setValues("hsl",e),this},saturate:function(t){var e=this.values.hsl;return e[1]+=e[1]*t,this.setValues("hsl",e),this},desaturate:function(t){var e=this.values.hsl;return e[1]-=e[1]*t,this.setValues("hsl",e),this},whiten:function(t){var e=this.values.hwb;return e[1]+=e[1]*t,this.setValues("hwb",e),this},blacken:function(t){var e=this.values.hwb;return e[2]+=e[2]*t,this.setValues("hwb",e),this},greyscale:function(){var t=this.values.rgb,e=.3*t[0]+.59*t[1]+.11*t[2];return this.setValues("rgb",[e,e,e]),this},clearer:function(t){var e=this.values.alpha;return this.setValues("alpha",e-e*t),this},opaquer:function(t){var e=this.values.alpha;return this.setValues("alpha",e+e*t),this},rotate:function(t){var e=this.values.hsl,i=(e[0]+t)%360;return e[0]=0>i?360+i:i,this.setValues("hsl",e),this},mix:function(t,e){var i=this,n=t,r=void 0===e?.5:e,o=2*r-1,a=i.alpha()-n.alpha(),s=((o*a===-1?o:(o+a)/(1+o*a))+1)/2,l=1-s;return this.rgb(s*i.red()+l*n.red(),s*i.green()+l*n.green(),s*i.blue()+l*n.blue()).alpha(i.alpha()*r+n.alpha()*(1-r))},toJSON:function(){return this.rgb()},clone:function(){var t,e,i=new o,n=this.values,r=i.values;for(var a in n)n.hasOwnProperty(a)&&(t=n[a],e={}.toString.call(t),"[object Array]"===e?r[a]=t.slice(0):"[object Number]"===e?r[a]=t:console.error("unexpected color value:",t));return i}},o.prototype.spaces={rgb:["red","green","blue"],hsl:["hue","saturation","lightness"],hsv:["hue","saturation","value"],hwb:["hue","whiteness","blackness"],cmyk:["cyan","magenta","yellow","black"]},o.prototype.maxes={rgb:[255,255,255],hsl:[360,100,100],hsv:[360,100,100],hwb:[360,100,100],cmyk:[100,100,100,100]},o.prototype.getValues=function(t){for(var e=this.values,i={},n=0;n<t.length;n++)i[t.charAt(n)]=e[t][n];return 1!==e.alpha&&(i.a=e.alpha),i},o.prototype.setValues=function(t,e){var i,r=this.values,o=this.spaces,a=this.maxes,s=1;if("alpha"===t)s=e;else if(e.length)r[t]=e.slice(0,t.length),s=e[t.length];else if(void 0!==e[t.charAt(0)]){for(i=0;i<t.length;i++)r[t][i]=e[t.charAt(i)];s=e.a}else if(void 0!==e[o[t][0]]){var l=o[t];for(i=0;i<t.length;i++)r[t][i]=e[l[i]];s=e.alpha}if(r.alpha=Math.max(0,Math.min(1,void 0===s?r.alpha:s)),"alpha"===t)return!1;var c;for(i=0;i<t.length;i++)c=Math.max(0,Math.min(a[t][i],r[t][i])),r[t][i]=Math.round(c);for(var u in o)u!==t&&(r[u]=n[t][u](r[t]));return!0},o.prototype.setSpace=function(t,e){var i=e[0];return void 0===i?this.getValues(t):("number"==typeof i&&(i=Array.prototype.slice.call(e)),this.setValues(t,i),this)},o.prototype.setChannel=function(t,e,i){var n=this.values[t];return void 0===i?n[e]:i===n[e]?this:(n[e]=i,this.setValues(t,n),this)},"undefined"!=typeof window&&(window.Color=o),e.exports=o},{2:2,5:5}],4:[function(t,e,i){function n(t){var e,i,n,r=t[0]/255,o=t[1]/255,a=t[2]/255,s=Math.min(r,o,a),l=Math.max(r,o,a),c=l-s;return l==s?e=0:r==l?e=(o-a)/c:o==l?e=2+(a-r)/c:a==l&&(e=4+(r-o)/c),e=Math.min(60*e,360),0>e&&(e+=360),n=(s+l)/2,i=l==s?0:.5>=n?c/(l+s):c/(2-l-s),[e,100*i,100*n]}function o(t){var e,i,n,r=t[0],o=t[1],a=t[2],s=Math.min(r,o,a),l=Math.max(r,o,a),c=l-s;return i=0==l?0:c/l*1e3/10,l==s?e=0:r==l?e=(o-a)/c:o==l?e=2+(a-r)/c:a==l&&(e=4+(r-o)/c),e=Math.min(60*e,360),0>e&&(e+=360),n=l/255*1e3/10,[e,i,n]}function a(t){var e=t[0],i=t[1],r=t[2],o=n(t)[0],a=1/255*Math.min(e,Math.min(i,r)),r=1-1/255*Math.max(e,Math.max(i,r));return[o,100*a,100*r]}function s(t){var e,i,n,r,o=t[0]/255,a=t[1]/255,s=t[2]/255;return r=Math.min(1-o,1-a,1-s),e=(1-o-r)/(1-r)||0,i=(1-a-r)/(1-r)||0,n=(1-s-r)/(1-r)||0,[100*e,100*i,100*n,100*r]}function l(t){return G[JSON.stringify(t)]}function c(t){var e=t[0]/255,i=t[1]/255,n=t[2]/255;e=e>.04045?Math.pow((e+.055)/1.055,2.4):e/12.92,i=i>.04045?Math.pow((i+.055)/1.055,2.4):i/12.92,n=n>.04045?Math.pow((n+.055)/1.055,2.4):n/12.92;var r=.4124*e+.3576*i+.1805*n,o=.2126*e+.7152*i+.0722*n,a=.0193*e+.1192*i+.9505*n;return[100*r,100*o,100*a]}function u(t){var e,i,n,r=c(t),o=r[0],a=r[1],s=r[2];return o/=95.047,a/=100,s/=108.883,o=o>.008856?Math.pow(o,1/3):7.787*o+16/116,a=a>.008856?Math.pow(a,1/3):7.787*a+16/116,s=s>.008856?Math.pow(s,1/3):7.787*s+16/116,e=116*a-16,i=500*(o-a),n=200*(a-s),[e,i,n]}function h(t){return R(u(t))}function d(t){var e,i,n,r,o,a=t[0]/360,s=t[1]/100,l=t[2]/100;if(0==s)return o=255*l,[o,o,o];i=.5>l?l*(1+s):l+s-l*s,e=2*l-i,r=[0,0,0];for(var c=0;3>c;c++)n=a+1/3*-(c-1),0>n&&n++,n>1&&n--,o=1>6*n?e+6*(i-e)*n:1>2*n?i:2>3*n?e+(i-e)*(2/3-n)*6:e,r[c]=255*o;return r}function p(t){var e,i,n=t[0],r=t[1]/100,o=t[2]/100;return 0===o?[0,0,0]:(o*=2,r*=1>=o?o:2-o,i=(o+r)/2,e=2*r/(o+r),[n,100*e,100*i])}function f(t){return a(d(t))}function m(t){return s(d(t))}function v(t){return l(d(t))}function y(t){var e=t[0]/60,i=t[1]/100,n=t[2]/100,r=Math.floor(e)%6,o=e-Math.floor(e),a=255*n*(1-i),s=255*n*(1-i*o),l=255*n*(1-i*(1-o)),n=255*n;switch(r){case 0:return[n,l,a];case 1:return[s,n,a];case 2:return[a,n,l];case 3:return[a,s,n];case 4:return[l,a,n];case 5:return[n,a,s]}}function x(t){var e,i,n=t[0],r=t[1]/100,o=t[2]/100;return i=(2-r)*o,e=r*o,e/=1>=i?i:2-i,e=e||0,i/=2,[n,100*e,100*i]}function k(t){return a(y(t))}function w(t){return s(y(t))}function _(t){return l(y(t))}function S(t){var e,i,n,o,a=t[0]/360,s=t[1]/100,l=t[2]/100,c=s+l;switch(c>1&&(s/=c,l/=c),e=Math.floor(6*a),i=1-l,n=6*a-e,0!=(1&e)&&(n=1-n),o=s+n*(i-s),e){default:case 6:case 0:r=i,g=o,b=s;break;case 1:r=o,g=i,b=s;break;case 2:r=s,g=i,b=o;break;case 3:r=s,g=o,b=i;break;case 4:r=o,g=s,b=i;break;case 5:r=i,g=s,b=o}return[255*r,255*g,255*b]}function C(t){return n(S(t))}function D(t){return o(S(t))}function P(t){return s(S(t))}function M(t){return l(S(t))}function I(t){var e,i,n,r=t[0]/100,o=t[1]/100,a=t[2]/100,s=t[3]/100;return e=1-Math.min(1,r*(1-s)+s),i=1-Math.min(1,o*(1-s)+s),n=1-Math.min(1,a*(1-s)+s),[255*e,255*i,255*n]}function T(t){return n(I(t))}function A(t){return o(I(t))}function F(t){return a(I(t))}function N(t){return l(I(t))}function L(t){var e,i,n,r=t[0]/100,o=t[1]/100,a=t[2]/100;return e=3.2406*r+-1.5372*o+a*-.4986,i=r*-.9689+1.8758*o+.0415*a,n=.0557*r+o*-.204+1.057*a,e=e>.0031308?1.055*Math.pow(e,1/2.4)-.055:e=12.92*e,i=i>.0031308?1.055*Math.pow(i,1/2.4)-.055:i=12.92*i,n=n>.0031308?1.055*Math.pow(n,1/2.4)-.055:n=12.92*n,e=Math.min(Math.max(0,e),1),i=Math.min(Math.max(0,i),1),n=Math.min(Math.max(0,n),1),[255*e,255*i,255*n]}function O(t){var e,i,n,r=t[0],o=t[1],a=t[2];return r/=95.047,o/=100,a/=108.883,r=r>.008856?Math.pow(r,1/3):7.787*r+16/116,o=o>.008856?Math.pow(o,1/3):7.787*o+16/116,a=a>.008856?Math.pow(a,1/3):7.787*a+16/116,e=116*o-16,i=500*(r-o),n=200*(o-a),[e,i,n]}function E(t){return R(O(t))}function H(t){var e,i,n,r,o=t[0],a=t[1],s=t[2];return 8>=o?(i=100*o/903.3,r=7.787*(i/100)+16/116):(i=100*Math.pow((o+16)/116,3),r=Math.pow(i/100,1/3)),e=.008856>=e/95.047?e=95.047*(a/500+r-16/116)/7.787:95.047*Math.pow(a/500+r,3),n=.008859>=n/108.883?n=108.883*(r-s/200-16/116)/7.787:108.883*Math.pow(r-s/200,3),[e,i,n]}function R(t){var e,i,n,r=t[0],o=t[1],a=t[2];return e=Math.atan2(a,o),i=360*e/2/Math.PI,0>i&&(i+=360),n=Math.sqrt(o*o+a*a),[r,n,i]}function B(t){return L(H(t))}function W(t){var e,i,n,r=t[0],o=t[1],a=t[2];return n=a/360*2*Math.PI,e=o*Math.cos(n),i=o*Math.sin(n),[r,e,i]}function j(t){return H(W(t))}function z(t){return B(W(t))}function V(t){return J[t]}function q(t){return n(V(t))}function Y(t){return o(V(t))}function $(t){return a(V(t))}function U(t){return s(V(t))}function X(t){return u(V(t))}function K(t){return c(V(t))}e.exports={rgb2hsl:n,rgb2hsv:o,rgb2hwb:a,rgb2cmyk:s,rgb2keyword:l,rgb2xyz:c,rgb2lab:u,rgb2lch:h,hsl2rgb:d,hsl2hsv:p,hsl2hwb:f,hsl2cmyk:m,hsl2keyword:v,hsv2rgb:y,hsv2hsl:x,hsv2hwb:k,hsv2cmyk:w,hsv2keyword:_,hwb2rgb:S,hwb2hsl:C,hwb2hsv:D,hwb2cmyk:P,hwb2keyword:M,cmyk2rgb:I,cmyk2hsl:T,cmyk2hsv:A,cmyk2hwb:F,cmyk2keyword:N,keyword2rgb:V,keyword2hsl:q,keyword2hsv:Y,keyword2hwb:$,keyword2cmyk:U,keyword2lab:X,keyword2xyz:K,xyz2rgb:L,xyz2lab:O,xyz2lch:E,lab2xyz:H,lab2rgb:B,lab2lch:R,lch2lab:W,lch2xyz:j,lch2rgb:z};var J={aliceblue:[240,248,255],antiquewhite:[250,235,215],aqua:[0,255,255],aquamarine:[127,255,212],azure:[240,255,255],beige:[245,245,220],bisque:[255,228,196],black:[0,0,0],blanchedalmond:[255,235,205],blue:[0,0,255],blueviolet:[138,43,226],brown:[165,42,42],burlywood:[222,184,135],cadetblue:[95,158,160],chartreuse:[127,255,0],chocolate:[210,105,30],coral:[255,127,80],cornflowerblue:[100,149,237],cornsilk:[255,248,220],crimson:[220,20,60],cyan:[0,255,255],darkblue:[0,0,139],darkcyan:[0,139,139],darkgoldenrod:[184,134,11],darkgray:[169,169,169],darkgreen:[0,100,0],darkgrey:[169,169,169],darkkhaki:[189,183,107],darkmagenta:[139,0,139],darkolivegreen:[85,107,47],darkorange:[255,140,0],darkorchid:[153,50,204],darkred:[139,0,0],darksalmon:[233,150,122],darkseagreen:[143,188,143],darkslateblue:[72,61,139],darkslategray:[47,79,79],darkslategrey:[47,79,79],darkturquoise:[0,206,209],darkviolet:[148,0,211],deeppink:[255,20,147],deepskyblue:[0,191,255],dimgray:[105,105,105],dimgrey:[105,105,105],dodgerblue:[30,144,255],firebrick:[178,34,34],floralwhite:[255,250,240],forestgreen:[34,139,34],fuchsia:[255,0,255],gainsboro:[220,220,220],ghostwhite:[248,248,255],gold:[255,215,0],goldenrod:[218,165,32],gray:[128,128,128],green:[0,128,0],greenyellow:[173,255,47],grey:[128,128,128],honeydew:[240,255,240],hotpink:[255,105,180],indianred:[205,92,92],indigo:[75,0,130],ivory:[255,255,240],khaki:[240,230,140],lavender:[230,230,250],lavenderblush:[255,240,245],lawngreen:[124,252,0],lemonchiffon:[255,250,205],lightblue:[173,216,230],lightcoral:[240,128,128],lightcyan:[224,255,255],lightgoldenrodyellow:[250,250,210],lightgray:[211,211,211],lightgreen:[144,238,144],lightgrey:[211,211,211],lightpink:[255,182,193],lightsalmon:[255,160,122],lightseagreen:[32,178,170],lightskyblue:[135,206,250],lightslategray:[119,136,153],lightslategrey:[119,136,153],lightsteelblue:[176,196,222],lightyellow:[255,255,224],lime:[0,255,0],limegreen:[50,205,50],linen:[250,240,230],magenta:[255,0,255],maroon:[128,0,0],mediumaquamarine:[102,205,170],mediumblue:[0,0,205],mediumorchid:[186,85,211],mediumpurple:[147,112,219],mediumseagreen:[60,179,113],mediumslateblue:[123,104,238],mediumspringgreen:[0,250,154],mediumturquoise:[72,209,204],mediumvioletred:[199,21,133],midnightblue:[25,25,112],mintcream:[245,255,250],mistyrose:[255,228,225],moccasin:[255,228,181],navajowhite:[255,222,173],navy:[0,0,128],oldlace:[253,245,230],olive:[128,128,0],olivedrab:[107,142,35],orange:[255,165,0],orangered:[255,69,0],orchid:[218,112,214],palegoldenrod:[238,232,170],palegreen:[152,251,152],paleturquoise:[175,238,238],palevioletred:[219,112,147],papayawhip:[255,239,213],peachpuff:[255,218,185],peru:[205,133,63],pink:[255,192,203],plum:[221,160,221],powderblue:[176,224,230],purple:[128,0,128],rebeccapurple:[102,51,153],red:[255,0,0],rosybrown:[188,143,143],royalblue:[65,105,225],saddlebrown:[139,69,19],salmon:[250,128,114],sandybrown:[244,164,96],seagreen:[46,139,87],seashell:[255,245,238],sienna:[160,82,45],silver:[192,192,192],skyblue:[135,206,235],slateblue:[106,90,205],slategray:[112,128,144],slategrey:[112,128,144],snow:[255,250,250],springgreen:[0,255,127],steelblue:[70,130,180],tan:[210,180,140],teal:[0,128,128],thistle:[216,191,216],tomato:[255,99,71],turquoise:[64,224,208],violet:[238,130,238],wheat:[245,222,179],white:[255,255,255],whitesmoke:[245,245,245],yellow:[255,255,0],yellowgreen:[154,205,50]},G={};for(var Q in J)G[JSON.stringify(J[Q])]=Q},{}],5:[function(t,e,i){var n=t(4),r=function(){return new c};for(var o in n){r[o+"Raw"]=function(t){return function(e){return"number"==typeof e&&(e=Array.prototype.slice.call(arguments)),n[t](e)}}(o);var a=/(\w+)2(\w+)/.exec(o),s=a[1],l=a[2];r[s]=r[s]||{},r[s][l]=r[o]=function(t){return function(e){"number"==typeof e&&(e=Array.prototype.slice.call(arguments));var i=n[t](e);if("string"==typeof i||void 0===i)return i;for(var r=0;r<i.length;r++)i[r]=Math.round(i[r]);return i}}(o)}var c=function(){this.convs={}};c.prototype.routeSpace=function(t,e){var i=e[0];
return void 0===i?this.getValues(t):("number"==typeof i&&(i=Array.prototype.slice.call(e)),this.setValues(t,i))},c.prototype.setValues=function(t,e){return this.space=t,this.convs={},this.convs[t]=e,this},c.prototype.getValues=function(t){var e=this.convs[t];if(!e){var i=this.space,n=this.convs[i];e=r[i][t](n),this.convs[t]=e}return e},["rgb","hsl","hsv","cmyk","keyword"].forEach(function(t){c.prototype[t]=function(e){return this.routeSpace(t,arguments)}}),e.exports=r},{4:4}],6:[function(t,e,i){e.exports={aliceblue:[240,248,255],antiquewhite:[250,235,215],aqua:[0,255,255],aquamarine:[127,255,212],azure:[240,255,255],beige:[245,245,220],bisque:[255,228,196],black:[0,0,0],blanchedalmond:[255,235,205],blue:[0,0,255],blueviolet:[138,43,226],brown:[165,42,42],burlywood:[222,184,135],cadetblue:[95,158,160],chartreuse:[127,255,0],chocolate:[210,105,30],coral:[255,127,80],cornflowerblue:[100,149,237],cornsilk:[255,248,220],crimson:[220,20,60],cyan:[0,255,255],darkblue:[0,0,139],darkcyan:[0,139,139],darkgoldenrod:[184,134,11],darkgray:[169,169,169],darkgreen:[0,100,0],darkgrey:[169,169,169],darkkhaki:[189,183,107],darkmagenta:[139,0,139],darkolivegreen:[85,107,47],darkorange:[255,140,0],darkorchid:[153,50,204],darkred:[139,0,0],darksalmon:[233,150,122],darkseagreen:[143,188,143],darkslateblue:[72,61,139],darkslategray:[47,79,79],darkslategrey:[47,79,79],darkturquoise:[0,206,209],darkviolet:[148,0,211],deeppink:[255,20,147],deepskyblue:[0,191,255],dimgray:[105,105,105],dimgrey:[105,105,105],dodgerblue:[30,144,255],firebrick:[178,34,34],floralwhite:[255,250,240],forestgreen:[34,139,34],fuchsia:[255,0,255],gainsboro:[220,220,220],ghostwhite:[248,248,255],gold:[255,215,0],goldenrod:[218,165,32],gray:[128,128,128],green:[0,128,0],greenyellow:[173,255,47],grey:[128,128,128],honeydew:[240,255,240],hotpink:[255,105,180],indianred:[205,92,92],indigo:[75,0,130],ivory:[255,255,240],khaki:[240,230,140],lavender:[230,230,250],lavenderblush:[255,240,245],lawngreen:[124,252,0],lemonchiffon:[255,250,205],lightblue:[173,216,230],lightcoral:[240,128,128],lightcyan:[224,255,255],lightgoldenrodyellow:[250,250,210],lightgray:[211,211,211],lightgreen:[144,238,144],lightgrey:[211,211,211],lightpink:[255,182,193],lightsalmon:[255,160,122],lightseagreen:[32,178,170],lightskyblue:[135,206,250],lightslategray:[119,136,153],lightslategrey:[119,136,153],lightsteelblue:[176,196,222],lightyellow:[255,255,224],lime:[0,255,0],limegreen:[50,205,50],linen:[250,240,230],magenta:[255,0,255],maroon:[128,0,0],mediumaquamarine:[102,205,170],mediumblue:[0,0,205],mediumorchid:[186,85,211],mediumpurple:[147,112,219],mediumseagreen:[60,179,113],mediumslateblue:[123,104,238],mediumspringgreen:[0,250,154],mediumturquoise:[72,209,204],mediumvioletred:[199,21,133],midnightblue:[25,25,112],mintcream:[245,255,250],mistyrose:[255,228,225],moccasin:[255,228,181],navajowhite:[255,222,173],navy:[0,0,128],oldlace:[253,245,230],olive:[128,128,0],olivedrab:[107,142,35],orange:[255,165,0],orangered:[255,69,0],orchid:[218,112,214],palegoldenrod:[238,232,170],palegreen:[152,251,152],paleturquoise:[175,238,238],palevioletred:[219,112,147],papayawhip:[255,239,213],peachpuff:[255,218,185],peru:[205,133,63],pink:[255,192,203],plum:[221,160,221],powderblue:[176,224,230],purple:[128,0,128],rebeccapurple:[102,51,153],red:[255,0,0],rosybrown:[188,143,143],royalblue:[65,105,225],saddlebrown:[139,69,19],salmon:[250,128,114],sandybrown:[244,164,96],seagreen:[46,139,87],seashell:[255,245,238],sienna:[160,82,45],silver:[192,192,192],skyblue:[135,206,235],slateblue:[106,90,205],slategray:[112,128,144],slategrey:[112,128,144],snow:[255,250,250],springgreen:[0,255,127],steelblue:[70,130,180],tan:[210,180,140],teal:[0,128,128],thistle:[216,191,216],tomato:[255,99,71],turquoise:[64,224,208],violet:[238,130,238],wheat:[245,222,179],white:[255,255,255],whitesmoke:[245,245,245],yellow:[255,255,0],yellowgreen:[154,205,50]}},{}],7:[function(t,e,i){var n=t(26)();t(25)(n),t(24)(n),t(21)(n),t(22)(n),t(23)(n),t(27)(n),t(31)(n),t(29)(n),t(30)(n),t(32)(n),t(28)(n),t(33)(n),t(34)(n),t(35)(n),t(36)(n),t(37)(n),t(40)(n),t(38)(n),t(39)(n),t(41)(n),t(42)(n),t(43)(n),t(15)(n),t(16)(n),t(17)(n),t(18)(n),t(19)(n),t(20)(n),t(8)(n),t(9)(n),t(10)(n),t(11)(n),t(12)(n),t(13)(n),t(14)(n),window.Chart=e.exports=n},{10:10,11:11,12:12,13:13,14:14,15:15,16:16,17:17,18:18,19:19,20:20,21:21,22:22,23:23,24:24,25:25,26:26,27:27,28:28,29:29,30:30,31:31,32:32,33:33,34:34,35:35,36:36,37:37,38:38,39:39,40:40,41:41,42:42,43:43,8:8,9:9}],8:[function(t,e,i){"use strict";e.exports=function(t){t.Bar=function(e,i){return i.type="bar",new t(e,i)}}},{}],9:[function(t,e,i){"use strict";e.exports=function(t){t.Bubble=function(e,i){return i.type="bubble",new t(e,i)}}},{}],10:[function(t,e,i){"use strict";e.exports=function(t){t.Doughnut=function(e,i){return i.type="doughnut",new t(e,i)}}},{}],11:[function(t,e,i){"use strict";e.exports=function(t){t.Line=function(e,i){return i.type="line",new t(e,i)}}},{}],12:[function(t,e,i){"use strict";e.exports=function(t){t.PolarArea=function(e,i){return i.type="polarArea",new t(e,i)}}},{}],13:[function(t,e,i){"use strict";e.exports=function(t){t.Radar=function(e,i){return i.options=t.helpers.configMerge({aspectRatio:1},i.options),i.type="radar",new t(e,i)}}},{}],14:[function(t,e,i){"use strict";e.exports=function(t){var e={hover:{mode:"single"},scales:{xAxes:[{type:"linear",position:"bottom",id:"x-axis-1"}],yAxes:[{type:"linear",position:"left",id:"y-axis-1"}]},tooltips:{callbacks:{title:function(t,e){return""},label:function(t,e){return"("+t.xLabel+", "+t.yLabel+")"}}}};t.defaults.scatter=e,t.controllers.scatter=t.controllers.line,t.Scatter=function(e,i){return i.type="scatter",new t(e,i)}}},{}],15:[function(t,e,i){"use strict";e.exports=function(t){var e=t.helpers;t.defaults.bar={hover:{mode:"label"},scales:{xAxes:[{type:"category",categoryPercentage:.8,barPercentage:.9,gridLines:{offsetGridLines:!0}}],yAxes:[{type:"linear"}]}},t.controllers.bar=t.DatasetController.extend({dataElementType:t.elements.Rectangle,initialize:function(e,i){t.DatasetController.prototype.initialize.call(this,e,i),this.getMeta().bar=!0},getBarCount:function(){var t=this,i=0;return e.each(t.chart.data.datasets,function(e,n){var r=t.chart.getDatasetMeta(n);r.bar&&t.chart.isDatasetVisible(n)&&++i},t),i},update:function(t){var i=this;e.each(i.getMeta().data,function(e,n){i.updateElement(e,n,t)},i)},updateElement:function(t,i,n){var r=this,o=r.getMeta(),a=r.getScaleForId(o.xAxisID),s=r.getScaleForId(o.yAxisID),l=s.getBasePixel(),c=r.chart.options.elements.rectangle,u=t.custom||{},h=r.getDataset();e.extend(t,{_xScale:a,_yScale:s,_datasetIndex:r.index,_index:i,_model:{x:r.calculateBarX(i,r.index),y:n?l:r.calculateBarY(i,r.index),label:r.chart.data.labels[i],datasetLabel:h.label,base:n?l:r.calculateBarBase(r.index,i),width:r.calculateBarWidth(i),backgroundColor:u.backgroundColor?u.backgroundColor:e.getValueAtIndexOrDefault(h.backgroundColor,i,c.backgroundColor),borderSkipped:u.borderSkipped?u.borderSkipped:c.borderSkipped,borderColor:u.borderColor?u.borderColor:e.getValueAtIndexOrDefault(h.borderColor,i,c.borderColor),borderWidth:u.borderWidth?u.borderWidth:e.getValueAtIndexOrDefault(h.borderWidth,i,c.borderWidth)}}),t.pivot()},calculateBarBase:function(t,e){var i=this,n=i.getMeta(),r=i.getScaleForId(n.yAxisID),o=0;if(r.options.stacked){var a=i.chart,s=a.data.datasets,l=s[t].data[e];if(0>l)for(var c=0;t>c;c++){var u=s[c],h=a.getDatasetMeta(c);h.bar&&h.yAxisID===r.id&&a.isDatasetVisible(c)&&(o+=u.data[e]<0?u.data[e]:0)}else for(var d=0;t>d;d++){var p=s[d],f=a.getDatasetMeta(d);f.bar&&f.yAxisID===r.id&&a.isDatasetVisible(d)&&(o+=p.data[e]>0?p.data[e]:0)}return r.getPixelForValue(o)}return r.getBasePixel()},getRuler:function(t){var e,i=this,n=i.getMeta(),r=i.getScaleForId(n.xAxisID),o=i.getBarCount();e="category"===r.options.type?r.getPixelForTick(t+1)-r.getPixelForTick(t):r.width/r.ticks.length;var a=e*r.options.categoryPercentage,s=(e-e*r.options.categoryPercentage)/2,l=a/o;if(r.ticks.length!==i.chart.data.labels.length){var c=r.ticks.length/i.chart.data.labels.length;l*=c}var u=l*r.options.barPercentage,h=l-l*r.options.barPercentage;return{datasetCount:o,tickWidth:e,categoryWidth:a,categorySpacing:s,fullBarWidth:l,barWidth:u,barSpacing:h}},calculateBarWidth:function(t){var e=this.getScaleForId(this.getMeta().xAxisID),i=this.getRuler(t);return e.options.stacked?i.categoryWidth:i.barWidth},getBarIndex:function(t){var e,i,n=0;for(i=0;t>i;++i)e=this.chart.getDatasetMeta(i),e.bar&&this.chart.isDatasetVisible(i)&&++n;return n},calculateBarX:function(t,e){var i=this,n=i.getMeta(),r=i.getScaleForId(n.xAxisID),o=i.getBarIndex(e),a=i.getRuler(t),s=r.getPixelForValue(null,t,e,i.chart.isCombo);return s-=i.chart.isCombo?a.tickWidth/2:0,r.options.stacked?s+a.categoryWidth/2+a.categorySpacing:s+a.barWidth/2+a.categorySpacing+a.barWidth*o+a.barSpacing/2+a.barSpacing*o},calculateBarY:function(t,e){var i=this,n=i.getMeta(),r=i.getScaleForId(n.yAxisID),o=i.getDataset().data[t];if(r.options.stacked){for(var a=0,s=0,l=0;e>l;l++){var c=i.chart.data.datasets[l],u=i.chart.getDatasetMeta(l);u.bar&&u.yAxisID===r.id&&i.chart.isDatasetVisible(l)&&(c.data[t]<0?s+=c.data[t]||0:a+=c.data[t]||0)}return 0>o?r.getPixelForValue(s+o):r.getPixelForValue(a+o)}return r.getPixelForValue(o)},draw:function(t){var i=this,n=t||1;e.each(i.getMeta().data,function(t,e){var r=i.getDataset().data[e];null===r||void 0===r||isNaN(r)||t.transition(n).draw()},i)},setHoverStyle:function(t){var i=this.chart.data.datasets[t._datasetIndex],n=t._index,r=t.custom||{},o=t._model;o.backgroundColor=r.hoverBackgroundColor?r.hoverBackgroundColor:e.getValueAtIndexOrDefault(i.hoverBackgroundColor,n,e.getHoverColor(o.backgroundColor)),o.borderColor=r.hoverBorderColor?r.hoverBorderColor:e.getValueAtIndexOrDefault(i.hoverBorderColor,n,e.getHoverColor(o.borderColor)),o.borderWidth=r.hoverBorderWidth?r.hoverBorderWidth:e.getValueAtIndexOrDefault(i.hoverBorderWidth,n,o.borderWidth)},removeHoverStyle:function(t){var i=this.chart.data.datasets[t._datasetIndex],n=t._index,r=t.custom||{},o=t._model,a=this.chart.options.elements.rectangle;o.backgroundColor=r.backgroundColor?r.backgroundColor:e.getValueAtIndexOrDefault(i.backgroundColor,n,a.backgroundColor),o.borderColor=r.borderColor?r.borderColor:e.getValueAtIndexOrDefault(i.borderColor,n,a.borderColor),o.borderWidth=r.borderWidth?r.borderWidth:e.getValueAtIndexOrDefault(i.borderWidth,n,a.borderWidth)}}),t.defaults.horizontalBar={hover:{mode:"label"},scales:{xAxes:[{type:"linear",position:"bottom"}],yAxes:[{position:"left",type:"category",categoryPercentage:.8,barPercentage:.9,gridLines:{offsetGridLines:!0}}]},elements:{rectangle:{borderSkipped:"left"}},tooltips:{callbacks:{title:function(t,e){var i="";return t.length>0&&(t[0].yLabel?i=t[0].yLabel:e.labels.length>0&&t[0].index<e.labels.length&&(i=e.labels[t[0].index])),i},label:function(t,e){var i=e.datasets[t.datasetIndex].label||"";return i+": "+t.xLabel}}}},t.controllers.horizontalBar=t.controllers.bar.extend({updateElement:function(t,i,n,r){var o=this,a=o.getMeta(),s=o.getScaleForId(a.xAxisID),l=o.getScaleForId(a.yAxisID),c=s.getBasePixel(),u=t.custom||{},h=o.getDataset(),d=o.chart.options.elements.rectangle;e.extend(t,{_xScale:s,_yScale:l,_datasetIndex:o.index,_index:i,_model:{x:n?c:o.calculateBarX(i,o.index),y:o.calculateBarY(i,o.index),label:o.chart.data.labels[i],datasetLabel:h.label,base:n?c:o.calculateBarBase(o.index,i),height:o.calculateBarHeight(i),backgroundColor:u.backgroundColor?u.backgroundColor:e.getValueAtIndexOrDefault(h.backgroundColor,i,d.backgroundColor),borderSkipped:u.borderSkipped?u.borderSkipped:d.borderSkipped,borderColor:u.borderColor?u.borderColor:e.getValueAtIndexOrDefault(h.borderColor,i,d.borderColor),borderWidth:u.borderWidth?u.borderWidth:e.getValueAtIndexOrDefault(h.borderWidth,i,d.borderWidth)},draw:function(){function t(t){return l[(u+t)%4]}var e=this._chart.ctx,i=this._view,n=i.height/2,r=i.y-n,o=i.y+n,a=i.base-(i.base-i.x),s=i.borderWidth/2;i.borderWidth&&(r+=s,o-=s,a+=s),e.beginPath(),e.fillStyle=i.backgroundColor,e.strokeStyle=i.borderColor,e.lineWidth=i.borderWidth;var l=[[i.base,o],[i.base,r],[a,r],[a,o]],c=["bottom","left","top","right"],u=c.indexOf(i.borderSkipped,0);-1===u&&(u=0),e.moveTo.apply(e,t(0));for(var h=1;4>h;h++)e.lineTo.apply(e,t(h));e.fill(),i.borderWidth&&e.stroke()},inRange:function(t,e){var i=this._view,n=!1;return i&&(n=i.x<i.base?e>=i.y-i.height/2&&e<=i.y+i.height/2&&t>=i.x&&t<=i.base:e>=i.y-i.height/2&&e<=i.y+i.height/2&&t>=i.base&&t<=i.x),n}}),t.pivot()},calculateBarBase:function(t,e){var i=this,n=i.getMeta(),r=i.getScaleForId(n.xAxisID),o=0;if(r.options.stacked){var a=i.chart.data.datasets[t].data[e];if(0>a)for(var s=0;t>s;s++){var l=i.chart.data.datasets[s],c=i.chart.getDatasetMeta(s);c.bar&&c.xAxisID===r.id&&i.chart.isDatasetVisible(s)&&(o+=l.data[e]<0?l.data[e]:0)}else for(var u=0;t>u;u++){var h=i.chart.data.datasets[u],d=i.chart.getDatasetMeta(u);d.bar&&d.xAxisID===r.id&&i.chart.isDatasetVisible(u)&&(o+=h.data[e]>0?h.data[e]:0)}return r.getPixelForValue(o)}return r.getBasePixel()},getRuler:function(t){var e,i=this,n=i.getMeta(),r=i.getScaleForId(n.yAxisID),o=i.getBarCount();e="category"===r.options.type?r.getPixelForTick(t+1)-r.getPixelForTick(t):r.width/r.ticks.length;var a=e*r.options.categoryPercentage,s=(e-e*r.options.categoryPercentage)/2,l=a/o;if(r.ticks.length!==i.chart.data.labels.length){var c=r.ticks.length/i.chart.data.labels.length;l*=c}var u=l*r.options.barPercentage,h=l-l*r.options.barPercentage;return{datasetCount:o,tickHeight:e,categoryHeight:a,categorySpacing:s,fullBarHeight:l,barHeight:u,barSpacing:h}},calculateBarHeight:function(t){var e=this,i=e.getScaleForId(e.getMeta().yAxisID),n=e.getRuler(t);return i.options.stacked?n.categoryHeight:n.barHeight},calculateBarX:function(t,e){var i=this,n=i.getMeta(),r=i.getScaleForId(n.xAxisID),o=i.getDataset().data[t];if(r.options.stacked){for(var a=0,s=0,l=0;e>l;l++){var c=i.chart.data.datasets[l],u=i.chart.getDatasetMeta(l);u.bar&&u.xAxisID===r.id&&i.chart.isDatasetVisible(l)&&(c.data[t]<0?s+=c.data[t]||0:a+=c.data[t]||0)}return 0>o?r.getPixelForValue(s+o):r.getPixelForValue(a+o)}return r.getPixelForValue(o)},calculateBarY:function(t,e){var i=this,n=i.getMeta(),r=i.getScaleForId(n.yAxisID),o=i.getBarIndex(e),a=i.getRuler(t),s=r.getPixelForValue(null,t,e,i.chart.isCombo);return s-=i.chart.isCombo?a.tickHeight/2:0,r.options.stacked?s+a.categoryHeight/2+a.categorySpacing:s+a.barHeight/2+a.categorySpacing+a.barHeight*o+a.barSpacing/2+a.barSpacing*o}})}},{}],16:[function(t,e,i){"use strict";e.exports=function(t){var e=t.helpers;t.defaults.bubble={hover:{mode:"single"},scales:{xAxes:[{type:"linear",position:"bottom",id:"x-axis-0"}],yAxes:[{type:"linear",position:"left",id:"y-axis-0"}]},tooltips:{callbacks:{title:function(t,e){return""},label:function(t,e){var i=e.datasets[t.datasetIndex].label||"",n=e.datasets[t.datasetIndex].data[t.index];return i+": ("+n.x+", "+n.y+", "+n.r+")"}}}},t.controllers.bubble=t.DatasetController.extend({dataElementType:t.elements.Point,update:function(t){var i=this,n=i.getMeta(),r=n.data;e.each(r,function(e,n){i.updateElement(e,n,t)})},updateElement:function(i,n,r){var o=this,a=o.getMeta(),s=o.getScaleForId(a.xAxisID),l=o.getScaleForId(a.yAxisID),c=i.custom||{},u=o.getDataset(),h=u.data[n],d=o.chart.options.elements.point,p=o.index;e.extend(i,{_xScale:s,_yScale:l,_datasetIndex:p,_index:n,_model:{x:r?s.getPixelForDecimal(.5):s.getPixelForValue(h,n,p,o.chart.isCombo),y:r?l.getBasePixel():l.getPixelForValue(h,n,p),radius:r?0:c.radius?c.radius:o.getRadius(h),hitRadius:c.hitRadius?c.hitRadius:e.getValueAtIndexOrDefault(u.hitRadius,n,d.hitRadius)}}),t.DatasetController.prototype.removeHoverStyle.call(o,i,d);var f=i._model;f.skip=c.skip?c.skip:isNaN(f.x)||isNaN(f.y),i.pivot()},getRadius:function(t){return t.r||this.chart.options.elements.point.radius},setHoverStyle:function(i){var n=this;t.DatasetController.prototype.setHoverStyle.call(n,i);var r=n.chart.data.datasets[i._datasetIndex],o=i._index,a=i.custom||{},s=i._model;s.radius=a.hoverRadius?a.hoverRadius:e.getValueAtIndexOrDefault(r.hoverRadius,o,n.chart.options.elements.point.hoverRadius)+n.getRadius(r.data[o])},removeHoverStyle:function(e){var i=this;t.DatasetController.prototype.removeHoverStyle.call(i,e,i.chart.options.elements.point);var n=i.chart.data.datasets[e._datasetIndex].data[e._index],r=e.custom||{},o=e._model;o.radius=r.radius?r.radius:i.getRadius(n)}})}},{}],17:[function(t,e,i){"use strict";e.exports=function(t){var e=t.helpers,i=t.defaults;i.doughnut={animation:{animateRotate:!0,animateScale:!1},aspectRatio:1,hover:{mode:"single"},legendCallback:function(t){var e=[];e.push('<ul class="'+t.id+'-legend">');var i=t.data,n=i.datasets,r=i.labels;if(n.length)for(var o=0;o<n[0].data.length;++o)e.push('<li><span style="background-color:'+n[0].backgroundColor[o]+'"></span>'),r[o]&&e.push(r[o]),e.push("</li>");return e.push("</ul>"),e.join("")},legend:{labels:{generateLabels:function(t){var i=t.data;return i.labels.length&&i.datasets.length?i.labels.map(function(n,r){var o=t.getDatasetMeta(0),a=i.datasets[0],s=o.data[r],l=s.custom||{},c=e.getValueAtIndexOrDefault,u=t.options.elements.arc,h=l.backgroundColor?l.backgroundColor:c(a.backgroundColor,r,u.backgroundColor),d=l.borderColor?l.borderColor:c(a.borderColor,r,u.borderColor),p=l.borderWidth?l.borderWidth:c(a.borderWidth,r,u.borderWidth);return{text:n,fillStyle:h,strokeStyle:d,lineWidth:p,hidden:isNaN(a.data[r])||o.data[r].hidden,index:r}}):[]}},onClick:function(t,e){var i,n,r,o=e.index,a=this.chart;for(i=0,n=(a.data.datasets||[]).length;n>i;++i)r=a.getDatasetMeta(i),r.data[o].hidden=!r.data[o].hidden;a.update()}},cutoutPercentage:50,rotation:Math.PI*-.5,circumference:2*Math.PI,tooltips:{callbacks:{title:function(){return""},label:function(t,e){return e.labels[t.index]+": "+e.datasets[t.datasetIndex].data[t.index]}}}},i.pie=e.clone(i.doughnut),e.extend(i.pie,{cutoutPercentage:0}),t.controllers.doughnut=t.controllers.pie=t.DatasetController.extend({dataElementType:t.elements.Arc,linkScales:e.noop,getRingIndex:function(t){for(var e=0,i=0;t>i;++i)this.chart.isDatasetVisible(i)&&++e;return e},update:function(t){var i=this,n=i.chart,r=n.chartArea,o=n.options,a=o.elements.arc,s=r.right-r.left-a.borderWidth,l=r.bottom-r.top-a.borderWidth,c=Math.min(s,l),u={x:0,y:0},h=i.getMeta(),d=o.cutoutPercentage,p=o.circumference;if(p<2*Math.PI){var f=o.rotation%(2*Math.PI);f+=2*Math.PI*(f>=Math.PI?-1:f<-Math.PI?1:0);var g=f+p,m={x:Math.cos(f),y:Math.sin(f)},v={x:Math.cos(g),y:Math.sin(g)},y=0>=f&&g>=0||f<=2*Math.PI&&2*Math.PI<=g,b=f<=.5*Math.PI&&.5*Math.PI<=g||f<=2.5*Math.PI&&2.5*Math.PI<=g,x=f<=-Math.PI&&-Math.PI<=g||f<=Math.PI&&Math.PI<=g,k=f<=.5*-Math.PI&&.5*-Math.PI<=g||f<=1.5*Math.PI&&1.5*Math.PI<=g,w=d/100,_={x:x?-1:Math.min(m.x*(m.x<0?1:w),v.x*(v.x<0?1:w)),y:k?-1:Math.min(m.y*(m.y<0?1:w),v.y*(v.y<0?1:w))},S={x:y?1:Math.max(m.x*(m.x>0?1:w),v.x*(v.x>0?1:w)),y:b?1:Math.max(m.y*(m.y>0?1:w),v.y*(v.y>0?1:w))},C={width:.5*(S.x-_.x),height:.5*(S.y-_.y)};c=Math.min(s/C.width,l/C.height),u={x:(S.x+_.x)*-.5,y:(S.y+_.y)*-.5}}n.outerRadius=Math.max(c/2,0),n.innerRadius=Math.max(d?n.outerRadius/100*d:1,0),n.radiusLength=(n.outerRadius-n.innerRadius)/n.getVisibleDatasetCount(),n.offsetX=u.x*n.outerRadius,n.offsetY=u.y*n.outerRadius,h.total=i.calculateTotal(),i.outerRadius=n.outerRadius-n.radiusLength*i.getRingIndex(i.index),i.innerRadius=i.outerRadius-n.radiusLength,e.each(h.data,function(e,n){i.updateElement(e,n,t)})},updateElement:function(t,i,n){var r=this,o=r.chart,a=o.chartArea,s=o.options,l=s.animation,c=(s.elements.arc,(a.left+a.right)/2),u=(a.top+a.bottom)/2,h=s.rotation,d=s.rotation,p=r.getDataset(),f=n&&l.animateRotate?0:t.hidden?0:r.calculateCircumference(p.data[i])*(s.circumference/(2*Math.PI)),g=n&&l.animateScale?0:r.innerRadius,m=n&&l.animateScale?0:r.outerRadius,v=(t.custom||{},e.getValueAtIndexOrDefault);e.extend(t,{_datasetIndex:r.index,_index:i,_model:{x:c+o.offsetX,y:u+o.offsetY,startAngle:h,endAngle:d,circumference:f,outerRadius:m,innerRadius:g,label:v(p.label,i,o.data.labels[i])}});var y=t._model;this.removeHoverStyle(t),n&&l.animateRotate||(0===i?y.startAngle=s.rotation:y.startAngle=r.getMeta().data[i-1]._model.endAngle,y.endAngle=y.startAngle+y.circumference),t.pivot()},removeHoverStyle:function(e){t.DatasetController.prototype.removeHoverStyle.call(this,e,this.chart.options.elements.arc)},calculateTotal:function(){var t,i=this.getDataset(),n=this.getMeta(),r=0;return e.each(n.data,function(e,n){t=i.data[n],isNaN(t)||e.hidden||(r+=Math.abs(t))}),r},calculateCircumference:function(t){var e=this.getMeta().total;return e>0&&!isNaN(t)?2*Math.PI*(t/e):0}})}},{}],18:[function(t,e,i){"use strict";e.exports=function(t){function e(t,e){return i.getValueOrDefault(t.showLine,e.showLines)}var i=t.helpers;t.defaults.line={showLines:!0,hover:{mode:"label"},scales:{xAxes:[{type:"category",id:"x-axis-0"}],yAxes:[{type:"linear",id:"y-axis-0"}]}},t.controllers.line=t.DatasetController.extend({datasetElementType:t.elements.Line,dataElementType:t.elements.Point,addElementAndReset:function(i){var n=this,r=n.chart.options,o=n.getMeta();t.DatasetController.prototype.addElementAndReset.call(n,i),e(n.getDataset(),r)&&0!==o.dataset._model.tension&&n.updateBezierControlPoints()},update:function(t){var n,r,o,a=this,s=a.getMeta(),l=s.dataset,c=s.data||[],u=a.chart.options,h=u.elements.line,d=a.getScaleForId(s.yAxisID),p=a.getDataset(),f=e(p,u);for(f&&(o=l.custom||{},void 0!==p.tension&&void 0===p.lineTension&&(p.lineTension=p.tension),l._scale=d,l._datasetIndex=a.index,l._children=c,l._model={spanGaps:p.spanGaps?p.spanGaps:!1,tension:o.tension?o.tension:i.getValueOrDefault(p.lineTension,h.tension),backgroundColor:o.backgroundColor?o.backgroundColor:p.backgroundColor||h.backgroundColor,borderWidth:o.borderWidth?o.borderWidth:p.borderWidth||h.borderWidth,borderColor:o.borderColor?o.borderColor:p.borderColor||h.borderColor,borderCapStyle:o.borderCapStyle?o.borderCapStyle:p.borderCapStyle||h.borderCapStyle,borderDash:o.borderDash?o.borderDash:p.borderDash||h.borderDash,borderDashOffset:o.borderDashOffset?o.borderDashOffset:p.borderDashOffset||h.borderDashOffset,borderJoinStyle:o.borderJoinStyle?o.borderJoinStyle:p.borderJoinStyle||h.borderJoinStyle,fill:o.fill?o.fill:void 0!==p.fill?p.fill:h.fill,scaleTop:d.top,scaleBottom:d.bottom,scaleZero:d.getBasePixel()},l.pivot()),n=0,r=c.length;r>n;++n)a.updateElement(c[n],n,t);for(f&&0!==l._model.tension&&a.updateBezierControlPoints(),n=0,r=c.length;r>n;++n)c[n].pivot()},getPointBackgroundColor:function(t,e){var n=this.chart.options.elements.point.backgroundColor,r=this.getDataset(),o=t.custom||{};return o.backgroundColor?n=o.backgroundColor:r.pointBackgroundColor?n=i.getValueAtIndexOrDefault(r.pointBackgroundColor,e,n):r.backgroundColor&&(n=r.backgroundColor),n},getPointBorderColor:function(t,e){var n=this.chart.options.elements.point.borderColor,r=this.getDataset(),o=t.custom||{};return o.borderColor?n=o.borderColor:r.pointBorderColor?n=i.getValueAtIndexOrDefault(r.pointBorderColor,e,n):r.borderColor&&(n=r.borderColor),n},getPointBorderWidth:function(t,e){var n=this.chart.options.elements.point.borderWidth,r=this.getDataset(),o=t.custom||{};return o.borderWidth?n=o.borderWidth:r.pointBorderWidth?n=i.getValueAtIndexOrDefault(r.pointBorderWidth,e,n):r.borderWidth&&(n=r.borderWidth),n},updateElement:function(t,e,n){var r,o,a=this,s=a.getMeta(),l=t.custom||{},c=a.getDataset(),u=a.index,h=c.data[e],d=a.getScaleForId(s.yAxisID),p=a.getScaleForId(s.xAxisID),f=a.chart.options.elements.point;void 0!==c.radius&&void 0===c.pointRadius&&(c.pointRadius=c.radius),void 0!==c.hitRadius&&void 0===c.pointHitRadius&&(c.pointHitRadius=c.hitRadius),r=p.getPixelForValue(h,e,u,a.chart.isCombo),o=n?d.getBasePixel():a.calculatePointY(h,e,u,a.chart.isCombo),t._xScale=p,t._yScale=d,t._datasetIndex=u,t._index=e,t._model={x:r,y:o,skip:l.skip||isNaN(r)||isNaN(o),radius:l.radius||i.getValueAtIndexOrDefault(c.pointRadius,e,f.radius),pointStyle:l.pointStyle||i.getValueAtIndexOrDefault(c.pointStyle,e,f.pointStyle),backgroundColor:a.getPointBackgroundColor(t,e),borderColor:a.getPointBorderColor(t,e),borderWidth:a.getPointBorderWidth(t,e),tension:s.dataset._model?s.dataset._model.tension:0,hitRadius:l.hitRadius||i.getValueAtIndexOrDefault(c.pointHitRadius,e,f.hitRadius)}},calculatePointY:function(t,e,i,n){var r,o,a,s=this,l=s.chart,c=s.getMeta(),u=s.getScaleForId(c.yAxisID),h=0,d=0;if(u.options.stacked){for(r=0;i>r;r++)o=l.data.datasets[r],a=l.getDatasetMeta(r),"line"===a.type&&l.isDatasetVisible(r)&&(o.data[e]<0?d+=o.data[e]||0:h+=o.data[e]||0);return 0>t?u.getPixelForValue(d+t):u.getPixelForValue(h+t)}return u.getPixelForValue(t)},updateBezierControlPoints:function(){var t,e,n,r,o,a=this.getMeta(),s=(this.chart.chartArea,a.data||[]);for(t=0,e=s.length;e>t;++t)n=s[t],r=n._model,o=i.splineCurve(i.previousItem(s,t)._model,r,i.nextItem(s,t)._model,a.dataset._model.tension),r.controlPointPreviousX=o.previous.x,r.controlPointPreviousY=o.previous.y,r.controlPointNextX=o.next.x,r.controlPointNextY=o.next.y},draw:function(t){var i,n,r=this,o=r.getMeta(),a=o.data||[],s=t||1;for(i=0,n=a.length;n>i;++i)a[i].transition(s);for(e(r.getDataset(),r.chart.options)&&o.dataset.transition(s).draw(),i=0,n=a.length;n>i;++i)a[i].draw()},setHoverStyle:function(t){var e=this.chart.data.datasets[t._datasetIndex],n=t._index,r=t.custom||{},o=t._model;o.radius=r.hoverRadius||i.getValueAtIndexOrDefault(e.pointHoverRadius,n,this.chart.options.elements.point.hoverRadius),o.backgroundColor=r.hoverBackgroundColor||i.getValueAtIndexOrDefault(e.pointHoverBackgroundColor,n,i.getHoverColor(o.backgroundColor)),o.borderColor=r.hoverBorderColor||i.getValueAtIndexOrDefault(e.pointHoverBorderColor,n,i.getHoverColor(o.borderColor)),o.borderWidth=r.hoverBorderWidth||i.getValueAtIndexOrDefault(e.pointHoverBorderWidth,n,o.borderWidth)},removeHoverStyle:function(t){var e=this,n=e.chart.data.datasets[t._datasetIndex],r=t._index,o=t.custom||{},a=t._model;void 0!==n.radius&&void 0===n.pointRadius&&(n.pointRadius=n.radius),a.radius=o.radius||i.getValueAtIndexOrDefault(n.pointRadius,r,e.chart.options.elements.point.radius),a.backgroundColor=e.getPointBackgroundColor(t,r),a.borderColor=e.getPointBorderColor(t,r),a.borderWidth=e.getPointBorderWidth(t,r)}})}},{}],19:[function(t,e,i){"use strict";e.exports=function(t){var e=t.helpers;t.defaults.polarArea={scale:{type:"radialLinear",lineArc:!0},animation:{animateRotate:!0,animateScale:!0},aspectRatio:1,legendCallback:function(t){var e=[];e.push('<ul class="'+t.id+'-legend">');var i=t.data,n=i.datasets,r=i.labels;if(n.length)for(var o=0;o<n[0].data.length;++o)e.push('<li><span style="background-color:'+n[0].backgroundColor[o]+'">'),r[o]&&e.push(r[o]),e.push("</span></li>");return e.push("</ul>"),e.join("")},legend:{labels:{generateLabels:function(t){var i=t.data;return i.labels.length&&i.datasets.length?i.labels.map(function(n,r){var o=t.getDatasetMeta(0),a=i.datasets[0],s=o.data[r],l=s.custom||{},c=e.getValueAtIndexOrDefault,u=t.options.elements.arc,h=l.backgroundColor?l.backgroundColor:c(a.backgroundColor,r,u.backgroundColor),d=l.borderColor?l.borderColor:c(a.borderColor,r,u.borderColor),p=l.borderWidth?l.borderWidth:c(a.borderWidth,r,u.borderWidth);return{text:n,fillStyle:h,strokeStyle:d,lineWidth:p,hidden:isNaN(a.data[r])||o.data[r].hidden,index:r}}):[]}},onClick:function(t,e){var i,n,r,o=e.index,a=this.chart;for(i=0,n=(a.data.datasets||[]).length;n>i;++i)r=a.getDatasetMeta(i),r.data[o].hidden=!r.data[o].hidden;a.update()}},tooltips:{callbacks:{title:function(){return""},label:function(t,e){return e.labels[t.index]+": "+t.yLabel}}}},t.controllers.polarArea=t.DatasetController.extend({dataElementType:t.elements.Arc,linkScales:e.noop,update:function(t){var i=this,n=i.chart,r=n.chartArea,o=i.getMeta(),a=n.options,s=a.elements.arc,l=Math.min(r.right-r.left,r.bottom-r.top);n.outerRadius=Math.max((l-s.borderWidth/2)/2,0),n.innerRadius=Math.max(a.cutoutPercentage?n.outerRadius/100*a.cutoutPercentage:1,0),n.radiusLength=(n.outerRadius-n.innerRadius)/n.getVisibleDatasetCount(),i.outerRadius=n.outerRadius-n.radiusLength*i.index,i.innerRadius=i.outerRadius-n.radiusLength,o.count=i.countVisibleElements(),e.each(o.data,function(e,n){i.updateElement(e,n,t)})},updateElement:function(t,i,n){for(var r=this,o=r.chart,a=o.chartArea,s=r.getDataset(),l=o.options,c=l.animation,u=(l.elements.arc,t.custom||{},o.scale),h=e.getValueAtIndexOrDefault,d=o.data.labels,p=r.calculateCircumference(s.data[i]),f=(a.left+a.right)/2,g=(a.top+a.bottom)/2,m=0,v=r.getMeta(),y=0;i>y;++y)isNaN(s.data[y])||v.data[y].hidden||++m;var b=-.5*Math.PI,x=t.hidden?0:u.getDistanceFromCenterForValue(s.data[i]),k=b+p*m,w=k+(t.hidden?0:p),_=c.animateScale?0:u.getDistanceFromCenterForValue(s.data[i]);e.extend(t,{_datasetIndex:r.index,_index:i,_scale:u,_model:{x:f,y:g,innerRadius:0,outerRadius:n?_:x,startAngle:n&&c.animateRotate?b:k,endAngle:n&&c.animateRotate?b:w,label:h(d,i,d[i])}}),r.removeHoverStyle(t),t.pivot()},removeHoverStyle:function(e){t.DatasetController.prototype.removeHoverStyle.call(this,e,this.chart.options.elements.arc)},countVisibleElements:function(){var t=this.getDataset(),i=this.getMeta(),n=0;return e.each(i.data,function(e,i){isNaN(t.data[i])||e.hidden||n++}),n},calculateCircumference:function(t){var e=this.getMeta().count;return e>0&&!isNaN(t)?2*Math.PI/e:0}})}},{}],20:[function(t,e,i){"use strict";e.exports=function(t){var e=t.helpers;t.defaults.radar={scale:{type:"radialLinear"},elements:{line:{tension:0}}},t.controllers.radar=t.DatasetController.extend({datasetElementType:t.elements.Line,dataElementType:t.elements.Point,linkScales:e.noop,addElementAndReset:function(e){t.DatasetController.prototype.addElementAndReset.call(this,e),this.updateBezierControlPoints()},update:function(t){var i=this,n=i.getMeta(),r=n.dataset,o=n.data,a=r.custom||{},s=i.getDataset(),l=i.chart.options.elements.line,c=i.chart.scale;void 0!==s.tension&&void 0===s.lineTension&&(s.lineTension=s.tension),e.extend(n.dataset,{_datasetIndex:i.index,_children:o,_loop:!0,_model:{tension:a.tension?a.tension:e.getValueOrDefault(s.lineTension,l.tension),backgroundColor:a.backgroundColor?a.backgroundColor:s.backgroundColor||l.backgroundColor,borderWidth:a.borderWidth?a.borderWidth:s.borderWidth||l.borderWidth,borderColor:a.borderColor?a.borderColor:s.borderColor||l.borderColor,fill:a.fill?a.fill:void 0!==s.fill?s.fill:l.fill,borderCapStyle:a.borderCapStyle?a.borderCapStyle:s.borderCapStyle||l.borderCapStyle,borderDash:a.borderDash?a.borderDash:s.borderDash||l.borderDash,borderDashOffset:a.borderDashOffset?a.borderDashOffset:s.borderDashOffset||l.borderDashOffset,borderJoinStyle:a.borderJoinStyle?a.borderJoinStyle:s.borderJoinStyle||l.borderJoinStyle,scaleTop:c.top,scaleBottom:c.bottom,scaleZero:c.getBasePosition()}}),n.dataset.pivot(),e.each(o,function(e,n){i.updateElement(e,n,t)},i),i.updateBezierControlPoints()},updateElement:function(t,i,n){var r=this,o=t.custom||{},a=r.getDataset(),s=r.chart.scale,l=r.chart.options.elements.point,c=s.getPointPositionForValue(i,a.data[i]);e.extend(t,{_datasetIndex:r.index,_index:i,_scale:s,_model:{x:n?s.xCenter:c.x,y:n?s.yCenter:c.y,tension:o.tension?o.tension:e.getValueOrDefault(a.tension,r.chart.options.elements.line.tension),radius:o.radius?o.radius:e.getValueAtIndexOrDefault(a.pointRadius,i,l.radius),backgroundColor:o.backgroundColor?o.backgroundColor:e.getValueAtIndexOrDefault(a.pointBackgroundColor,i,l.backgroundColor),borderColor:o.borderColor?o.borderColor:e.getValueAtIndexOrDefault(a.pointBorderColor,i,l.borderColor),borderWidth:o.borderWidth?o.borderWidth:e.getValueAtIndexOrDefault(a.pointBorderWidth,i,l.borderWidth),pointStyle:o.pointStyle?o.pointStyle:e.getValueAtIndexOrDefault(a.pointStyle,i,l.pointStyle),hitRadius:o.hitRadius?o.hitRadius:e.getValueAtIndexOrDefault(a.hitRadius,i,l.hitRadius)}}),t._model.skip=o.skip?o.skip:isNaN(t._model.x)||isNaN(t._model.y)},updateBezierControlPoints:function(){
var t=this.chart.chartArea,i=this.getMeta();e.each(i.data,function(n,r){var o=n._model,a=e.splineCurve(e.previousItem(i.data,r,!0)._model,o,e.nextItem(i.data,r,!0)._model,o.tension);o.controlPointPreviousX=Math.max(Math.min(a.previous.x,t.right),t.left),o.controlPointPreviousY=Math.max(Math.min(a.previous.y,t.bottom),t.top),o.controlPointNextX=Math.max(Math.min(a.next.x,t.right),t.left),o.controlPointNextY=Math.max(Math.min(a.next.y,t.bottom),t.top),n.pivot()})},draw:function(t){var i=this.getMeta(),n=t||1;e.each(i.data,function(t,e){t.transition(n)}),i.dataset.transition(n).draw(),e.each(i.data,function(t){t.draw()})},setHoverStyle:function(t){var i=this.chart.data.datasets[t._datasetIndex],n=t.custom||{},r=t._index,o=t._model;o.radius=n.hoverRadius?n.hoverRadius:e.getValueAtIndexOrDefault(i.pointHoverRadius,r,this.chart.options.elements.point.hoverRadius),o.backgroundColor=n.hoverBackgroundColor?n.hoverBackgroundColor:e.getValueAtIndexOrDefault(i.pointHoverBackgroundColor,r,e.getHoverColor(o.backgroundColor)),o.borderColor=n.hoverBorderColor?n.hoverBorderColor:e.getValueAtIndexOrDefault(i.pointHoverBorderColor,r,e.getHoverColor(o.borderColor)),o.borderWidth=n.hoverBorderWidth?n.hoverBorderWidth:e.getValueAtIndexOrDefault(i.pointHoverBorderWidth,r,o.borderWidth)},removeHoverStyle:function(t){var i=this.chart.data.datasets[t._datasetIndex],n=t.custom||{},r=t._index,o=t._model,a=this.chart.options.elements.point;o.radius=n.radius?n.radius:e.getValueAtIndexOrDefault(i.radius,r,a.radius),o.backgroundColor=n.backgroundColor?n.backgroundColor:e.getValueAtIndexOrDefault(i.pointBackgroundColor,r,a.backgroundColor),o.borderColor=n.borderColor?n.borderColor:e.getValueAtIndexOrDefault(i.pointBorderColor,r,a.borderColor),o.borderWidth=n.borderWidth?n.borderWidth:e.getValueAtIndexOrDefault(i.pointBorderWidth,r,a.borderWidth)}})}},{}],21:[function(t,e,i){"use strict";e.exports=function(t){var e=t.helpers;t.defaults.global.animation={duration:1e3,easing:"easeOutQuart",onProgress:e.noop,onComplete:e.noop},t.Animation=t.Element.extend({currentStep:null,numSteps:60,easing:"",render:null,onAnimationProgress:null,onAnimationComplete:null}),t.animationService={frameDuration:17,animations:[],dropFrames:0,request:null,addAnimation:function(t,e,i,n){var r=this;n||(t.animating=!0);for(var o=0;o<r.animations.length;++o)if(r.animations[o].chartInstance===t)return void(r.animations[o].animationObject=e);r.animations.push({chartInstance:t,animationObject:e}),1===r.animations.length&&r.requestAnimationFrame()},cancelAnimation:function(t){var i=e.findIndex(this.animations,function(e){return e.chartInstance===t});-1!==i&&(this.animations.splice(i,1),t.animating=!1)},requestAnimationFrame:function(){var t=this;null===t.request&&(t.request=e.requestAnimFrame.call(window,function(){t.request=null,t.startDigest()}))},startDigest:function(){var t=this,e=Date.now(),i=0;t.dropFrames>1&&(i=Math.floor(t.dropFrames),t.dropFrames=t.dropFrames%1);for(var n=0;n<t.animations.length;)null===t.animations[n].animationObject.currentStep&&(t.animations[n].animationObject.currentStep=0),t.animations[n].animationObject.currentStep+=1+i,t.animations[n].animationObject.currentStep>t.animations[n].animationObject.numSteps&&(t.animations[n].animationObject.currentStep=t.animations[n].animationObject.numSteps),t.animations[n].animationObject.render(t.animations[n].chartInstance,t.animations[n].animationObject),t.animations[n].animationObject.onAnimationProgress&&t.animations[n].animationObject.onAnimationProgress.call&&t.animations[n].animationObject.onAnimationProgress.call(t.animations[n].chartInstance,t.animations[n]),t.animations[n].animationObject.currentStep===t.animations[n].animationObject.numSteps?(t.animations[n].animationObject.onAnimationComplete&&t.animations[n].animationObject.onAnimationComplete.call&&t.animations[n].animationObject.onAnimationComplete.call(t.animations[n].chartInstance,t.animations[n]),t.animations[n].chartInstance.animating=!1,t.animations.splice(n,1)):++n;var r=Date.now(),o=(r-e)/t.frameDuration;t.dropFrames+=o,t.animations.length>0&&t.requestAnimationFrame()}}}},{}],22:[function(t,e,i){"use strict";e.exports=function(t){var e=t.helpers;t.types={},t.instances={},t.controllers={},t.Controller=function(i){return this.chart=i,this.config=i.config,this.options=this.config.options=e.configMerge(t.defaults.global,t.defaults[this.config.type],this.config.options||{}),this.id=e.uid(),Object.defineProperty(this,"data",{get:function(){return this.config.data}}),t.instances[this.id]=this,this.options.responsive&&this.resize(!0),this.initialize(),this},e.extend(t.Controller.prototype,{initialize:function(){var e=this;return t.plugins.notify("beforeInit",[e]),e.bindEvents(),e.ensureScalesHaveIDs(),e.buildOrUpdateControllers(),e.buildScales(),e.updateLayout(),e.resetElements(),e.initToolTip(),e.update(),t.plugins.notify("afterInit",[e]),e},clear:function(){return e.clear(this.chart),this},stop:function(){return t.animationService.cancelAnimation(this),this},resize:function(i){var n=this,r=n.chart,o=r.canvas,a=e.getMaximumWidth(o),s=r.aspectRatio,l=n.options.maintainAspectRatio&&isNaN(s)===!1&&isFinite(s)&&0!==s?a/s:e.getMaximumHeight(o),c=r.width!==a||r.height!==l;if(!c)return n;o.width=r.width=a,o.height=r.height=l,e.retinaScale(r);var u={width:a,height:l};return t.plugins.notify("resize",[n,u]),n.options.onResize&&n.options.onResize(n,u),i||(n.stop(),n.update(n.options.responsiveAnimationDuration)),n},ensureScalesHaveIDs:function(){var t=this.options,i=t.scales||{},n=t.scale;e.each(i.xAxes,function(t,e){t.id=t.id||"x-axis-"+e}),e.each(i.yAxes,function(t,e){t.id=t.id||"y-axis-"+e}),n&&(n.id=n.id||"scale")},buildScales:function(){var i=this,n=i.options,r=i.scales={},o=[];n.scales&&(o=o.concat((n.scales.xAxes||[]).map(function(t){return{options:t,dtype:"category"}}),(n.scales.yAxes||[]).map(function(t){return{options:t,dtype:"linear"}}))),n.scale&&o.push({options:n.scale,dtype:"radialLinear",isDefault:!0}),e.each(o,function(n,o){var a=n.options,s=e.getValueOrDefault(a.type,n.dtype),l=t.scaleService.getScaleConstructor(s);if(l){var c=new l({id:a.id,options:a,ctx:i.chart.ctx,chart:i});r[c.id]=c,n.isDefault&&(i.scale=c)}}),t.scaleService.addScalesToLayout(this)},updateLayout:function(){t.layoutService.update(this,this.chart.width,this.chart.height)},buildOrUpdateControllers:function(){var i=this,n=[],r=[];if(e.each(i.data.datasets,function(e,o){var a=i.getDatasetMeta(o);a.type||(a.type=e.type||i.config.type),n.push(a.type),a.controller?a.controller.updateIndex(o):(a.controller=new t.controllers[a.type](i,o),r.push(a.controller))},i),n.length>1)for(var o=1;o<n.length;o++)if(n[o]!==n[o-1]){i.isCombo=!0;break}return r},resetElements:function(){var t=this;e.each(t.data.datasets,function(e,i){t.getDatasetMeta(i).controller.reset()},t)},update:function(i,n){var r=this;t.plugins.notify("beforeUpdate",[r]),r.tooltip._data=r.data;var o=r.buildOrUpdateControllers();e.each(r.data.datasets,function(t,e){r.getDatasetMeta(e).controller.buildOrUpdateElements()},r),t.layoutService.update(r,r.chart.width,r.chart.height),t.plugins.notify("afterScaleUpdate",[r]),e.each(o,function(t){t.reset()}),r.updateDatasets(),t.plugins.notify("afterUpdate",[r]),r.render(i,n)},updateDatasets:function(){var e,i,n=this;if(t.plugins.notify("beforeDatasetsUpdate",[n])){for(e=0,i=n.data.datasets.length;i>e;++e)n.getDatasetMeta(e).controller.update();t.plugins.notify("afterDatasetsUpdate",[n])}},render:function(i,n){var r=this;t.plugins.notify("beforeRender",[r]);var o=r.options.animation;if(o&&("undefined"!=typeof i&&0!==i||"undefined"==typeof i&&0!==o.duration)){var a=new t.Animation;a.numSteps=(i||o.duration)/16.66,a.easing=o.easing,a.render=function(t,i){var n=e.easingEffects[i.easing],r=i.currentStep/i.numSteps,o=n(r);t.draw(o,r,i.currentStep)},a.onAnimationProgress=o.onProgress,a.onAnimationComplete=o.onComplete,t.animationService.addAnimation(r,a,i,n)}else r.draw(),o&&o.onComplete&&o.onComplete.call&&o.onComplete.call(r);return r},draw:function(i){var n=this,r=i||1;n.clear(),t.plugins.notify("beforeDraw",[n,r]),e.each(n.boxes,function(t){t.draw(n.chartArea)},n),n.scale&&n.scale.draw(),t.plugins.notify("beforeDatasetsDraw",[n,r]),e.each(n.data.datasets,function(t,e){n.isDatasetVisible(e)&&n.getDatasetMeta(e).controller.draw(i)},n,!0),t.plugins.notify("afterDatasetsDraw",[n,r]),n.tooltip.transition(r).draw(),t.plugins.notify("afterDraw",[n,r])},getElementAtEvent:function(t){var i=this,n=e.getRelativePosition(t,i.chart),r=[];return e.each(i.data.datasets,function(t,o){if(i.isDatasetVisible(o)){var a=i.getDatasetMeta(o);e.each(a.data,function(t,e){return t.inRange(n.x,n.y)?(r.push(t),r):void 0})}}),r},getElementsAtEvent:function(t){var i=this,n=e.getRelativePosition(t,i.chart),r=[],o=function(){if(i.data.datasets)for(var t=0;t<i.data.datasets.length;t++){var e=i.getDatasetMeta(t);if(i.isDatasetVisible(t))for(var r=0;r<e.data.length;r++)if(e.data[r].inRange(n.x,n.y))return e.data[r]}}.call(i);return o?(e.each(i.data.datasets,function(t,e){if(i.isDatasetVisible(e)){var n=i.getDatasetMeta(e);r.push(n.data[o._index])}},i),r):r},getElementsAtEventForMode:function(t,e){var i=this;switch(e){case"single":return i.getElementAtEvent(t);case"label":return i.getElementsAtEvent(t);case"dataset":return i.getDatasetAtEvent(t);default:return t}},getDatasetAtEvent:function(t){var e=this.getElementAtEvent(t);return e.length>0&&(e=this.getDatasetMeta(e[0]._datasetIndex).data),e},getDatasetMeta:function(t){var e=this,i=e.data.datasets[t];i._meta||(i._meta={});var n=i._meta[e.id];return n||(n=i._meta[e.id]={type:null,data:[],dataset:null,controller:null,hidden:null,xAxisID:null,yAxisID:null}),n},getVisibleDatasetCount:function(){for(var t=0,e=0,i=this.data.datasets.length;i>e;++e)this.isDatasetVisible(e)&&t++;return t},isDatasetVisible:function(t){var e=this.getDatasetMeta(t);return"boolean"==typeof e.hidden?!e.hidden:!this.data.datasets[t].hidden},generateLegend:function(){return this.options.legendCallback(this)},destroy:function(){var i=this;i.stop(),i.clear(),e.unbindEvents(i,i.events),e.removeResizeListener(i.chart.canvas.parentNode);var n=i.chart.canvas;n.width=i.chart.width,n.height=i.chart.height,void 0!==i.chart.originalDevicePixelRatio&&i.chart.ctx.scale(1/i.chart.originalDevicePixelRatio,1/i.chart.originalDevicePixelRatio),n.style.width=i.chart.originalCanvasStyleWidth,n.style.height=i.chart.originalCanvasStyleHeight,t.plugins.notify("destroy",[i]),delete t.instances[i.id]},toBase64Image:function(){return this.chart.canvas.toDataURL.apply(this.chart.canvas,arguments)},initToolTip:function(){var e=this;e.tooltip=new t.Tooltip({_chart:e.chart,_chartInstance:e,_data:e.data,_options:e.options.tooltips},e)},bindEvents:function(){var t=this;e.bindEvents(t,t.options.events,function(e){t.eventHandler(e)})},updateHoverStyle:function(t,e,i){var n,r,o,a=i?"setHoverStyle":"removeHoverStyle";switch(e){case"single":t=[t[0]];break;case"label":case"dataset":break;default:return}for(r=0,o=t.length;o>r;++r)n=t[r],n&&this.getDatasetMeta(n._datasetIndex).controller[a](n)},eventHandler:function(t){var i=this,n=i.tooltip,r=i.options||{},o=r.hover,a=r.tooltips;return i.lastActive=i.lastActive||[],i.lastTooltipActive=i.lastTooltipActive||[],"mouseout"===t.type?(i.active=[],i.tooltipActive=[]):(i.active=i.getElementsAtEventForMode(t,o.mode),i.tooltipActive=i.getElementsAtEventForMode(t,a.mode)),o.onHover&&o.onHover.call(i,i.active),("mouseup"===t.type||"click"===t.type)&&(r.onClick&&r.onClick.call(i,t,i.active),i.legend&&i.legend.handleEvent&&i.legend.handleEvent(t)),i.lastActive.length&&i.updateHoverStyle(i.lastActive,o.mode,!1),i.active.length&&o.mode&&i.updateHoverStyle(i.active,o.mode,!0),(a.enabled||a.custom)&&(n.initialize(),n._active=i.tooltipActive,n.update(!0)),n.pivot(),i.animating||e.arrayEquals(i.active,i.lastActive)&&e.arrayEquals(i.tooltipActive,i.lastTooltipActive)||(i.stop(),(a.enabled||a.custom)&&n.update(!0),i.render(o.animationDuration,!0)),i.lastActive=i.active,i.lastTooltipActive=i.tooltipActive,i}})}},{}],23:[function(t,e,i){"use strict";e.exports=function(t){var e=t.helpers,i=e.noop;t.DatasetController=function(t,e){this.initialize.call(this,t,e)},e.extend(t.DatasetController.prototype,{datasetElementType:null,dataElementType:null,initialize:function(t,e){var i=this;i.chart=t,i.index=e,i.linkScales(),i.addElements()},updateIndex:function(t){this.index=t},linkScales:function(){var t=this,e=t.getMeta(),i=t.getDataset();null===e.xAxisID&&(e.xAxisID=i.xAxisID||t.chart.options.scales.xAxes[0].id),null===e.yAxisID&&(e.yAxisID=i.yAxisID||t.chart.options.scales.yAxes[0].id)},getDataset:function(){return this.chart.data.datasets[this.index]},getMeta:function(){return this.chart.getDatasetMeta(this.index)},getScaleForId:function(t){return this.chart.scales[t]},reset:function(){this.update(!0)},createMetaDataset:function(){var t=this,e=t.datasetElementType;return e&&new e({_chart:t.chart.chart,_datasetIndex:t.index})},createMetaData:function(t){var e=this,i=e.dataElementType;return i&&new i({_chart:e.chart.chart,_datasetIndex:e.index,_index:t})},addElements:function(){var t,e,i=this,n=i.getMeta(),r=i.getDataset().data||[],o=n.data;for(t=0,e=r.length;e>t;++t)o[t]=o[t]||i.createMetaData(n,t);n.dataset=n.dataset||i.createMetaDataset()},addElementAndReset:function(t){var e=this,i=e.createMetaData(t);e.getMeta().data.splice(t,0,i),e.updateElement(i,t,!0)},buildOrUpdateElements:function(){var t=this.getMeta(),e=t.data,i=this.getDataset().data.length,n=e.length;if(n>i)e.splice(i,n-i);else if(i>n)for(var r=n;i>r;++r)this.addElementAndReset(r)},update:i,draw:function(t){var i=t||1;e.each(this.getMeta().data,function(t,e){t.transition(i).draw()})},removeHoverStyle:function(t,i){var n=this.chart.data.datasets[t._datasetIndex],r=t._index,o=t.custom||{},a=e.getValueAtIndexOrDefault,s=(e.color,t._model);s.backgroundColor=o.backgroundColor?o.backgroundColor:a(n.backgroundColor,r,i.backgroundColor),s.borderColor=o.borderColor?o.borderColor:a(n.borderColor,r,i.borderColor),s.borderWidth=o.borderWidth?o.borderWidth:a(n.borderWidth,r,i.borderWidth)},setHoverStyle:function(t){var i=this.chart.data.datasets[t._datasetIndex],n=t._index,r=t.custom||{},o=e.getValueAtIndexOrDefault,a=(e.color,e.getHoverColor),s=t._model;s.backgroundColor=r.hoverBackgroundColor?r.hoverBackgroundColor:o(i.hoverBackgroundColor,n,a(s.backgroundColor)),s.borderColor=r.hoverBorderColor?r.hoverBorderColor:o(i.hoverBorderColor,n,a(s.borderColor)),s.borderWidth=r.hoverBorderWidth?r.hoverBorderWidth:o(i.hoverBorderWidth,n,s.borderWidth)}}),t.DatasetController.extend=e.inherits}},{}],24:[function(t,e,i){"use strict";e.exports=function(t){var e=t.helpers;t.elements={},t.Element=function(t){e.extend(this,t),this.initialize.apply(this,arguments)},e.extend(t.Element.prototype,{initialize:function(){this.hidden=!1},pivot:function(){var t=this;return t._view||(t._view=e.clone(t._model)),t._start=e.clone(t._view),t},transition:function(t){var i=this;return i._view||(i._view=e.clone(i._model)),1===t?(i._view=i._model,i._start=null,i):(i._start||i.pivot(),e.each(i._model,function(n,r){if("_"===r[0]);else if(i._view.hasOwnProperty(r))if(n===i._view[r]);else if("string"==typeof n)try{var o=e.color(i._model[r]).mix(e.color(i._start[r]),t);i._view[r]=o.rgbString()}catch(a){i._view[r]=n}else if("number"==typeof n){var s=void 0!==i._start[r]&&isNaN(i._start[r])===!1?i._start[r]:0;i._view[r]=(i._model[r]-s)*t+s}else i._view[r]=n;else"number"!=typeof n||isNaN(i._view[r])?i._view[r]=n:i._view[r]=n*t},i),i)},tooltipPosition:function(){return{x:this._model.x,y:this._model.y}},hasValue:function(){return e.isNumber(this._model.x)&&e.isNumber(this._model.y)}}),t.Element.extend=e.inherits}},{}],25:[function(t,e,i){"use strict";var n=t(3);e.exports=function(t){function e(t,e,i){var n;return"string"==typeof t?(n=parseInt(t,10),-1!=t.indexOf("%")&&(n=n/100*e.parentNode[i])):n=t,n}function i(t){return void 0!==t&&null!==t&&"none"!==t}function r(t,n,r){var o=document.defaultView,a=t.parentNode,s=o.getComputedStyle(t)[n],l=o.getComputedStyle(a)[n],c=i(s),u=i(l),h=Number.POSITIVE_INFINITY;return c||u?Math.min(c?e(s,t,r):h,u?e(l,a,r):h):"none"}var o=t.helpers={};o.each=function(t,e,i,n){var r,a;if(o.isArray(t))if(a=t.length,n)for(r=a-1;r>=0;r--)e.call(i,t[r],r);else for(r=0;a>r;r++)e.call(i,t[r],r);else if("object"==typeof t){var s=Object.keys(t);for(a=s.length,r=0;a>r;r++)e.call(i,t[s[r]],s[r])}},o.clone=function(t){var e={};return o.each(t,function(t,i){o.isArray(t)?e[i]=t.slice(0):"object"==typeof t&&null!==t?e[i]=o.clone(t):e[i]=t}),e},o.extend=function(t){for(var e=function(e,i){t[i]=e},i=1,n=arguments.length;n>i;i++)o.each(arguments[i],e);return t},o.configMerge=function(e){var i=o.clone(e);return o.each(Array.prototype.slice.call(arguments,1),function(e){o.each(e,function(e,n){if("scales"===n)i[n]=o.scaleMerge(i.hasOwnProperty(n)?i[n]:{},e);else if("scale"===n)i[n]=o.configMerge(i.hasOwnProperty(n)?i[n]:{},t.scaleService.getScaleDefaults(e.type),e);else if(i.hasOwnProperty(n)&&o.isArray(i[n])&&o.isArray(e)){var r=i[n];o.each(e,function(t,e){e<r.length?"object"==typeof r[e]&&null!==r[e]&&"object"==typeof t&&null!==t?r[e]=o.configMerge(r[e],t):r[e]=t:r.push(t)})}else i.hasOwnProperty(n)&&"object"==typeof i[n]&&null!==i[n]&&"object"==typeof e?i[n]=o.configMerge(i[n],e):i[n]=e})}),i},o.scaleMerge=function(e,i){var n=o.clone(e);return o.each(i,function(e,i){"xAxes"===i||"yAxes"===i?n.hasOwnProperty(i)?o.each(e,function(e,r){var a=o.getValueOrDefault(e.type,"xAxes"===i?"category":"linear"),s=t.scaleService.getScaleDefaults(a);r>=n[i].length||!n[i][r].type?n[i].push(o.configMerge(s,e)):e.type&&e.type!==n[i][r].type?n[i][r]=o.configMerge(n[i][r],s,e):n[i][r]=o.configMerge(n[i][r],e)}):(n[i]=[],o.each(e,function(e){var r=o.getValueOrDefault(e.type,"xAxes"===i?"category":"linear");n[i].push(o.configMerge(t.scaleService.getScaleDefaults(r),e))})):n.hasOwnProperty(i)&&"object"==typeof n[i]&&null!==n[i]&&"object"==typeof e?n[i]=o.configMerge(n[i],e):n[i]=e}),n},o.getValueAtIndexOrDefault=function(t,e,i){return void 0===t||null===t?i:o.isArray(t)?e<t.length?t[e]:i:t},o.getValueOrDefault=function(t,e){return void 0===t?e:t},o.indexOf=Array.prototype.indexOf?function(t,e){return t.indexOf(e)}:function(t,e){for(var i=0,n=t.length;n>i;++i)if(t[i]===e)return i;return-1},o.where=function(t,e){if(o.isArray(t)&&Array.prototype.filter)return t.filter(e);var i=[];return o.each(t,function(t){e(t)&&i.push(t)}),i},o.findIndex=Array.prototype.findIndex?function(t,e,i){return t.findIndex(e,i)}:function(t,e,i){i=void 0===i?t:i;for(var n=0,r=t.length;r>n;++n)if(e.call(i,t[n],n,t))return n;return-1},o.findNextWhere=function(t,e,i){(void 0===i||null===i)&&(i=-1);for(var n=i+1;n<t.length;n++){var r=t[n];if(e(r))return r}},o.findPreviousWhere=function(t,e,i){(void 0===i||null===i)&&(i=t.length);for(var n=i-1;n>=0;n--){var r=t[n];if(e(r))return r}},o.inherits=function(t){var e=this,i=t&&t.hasOwnProperty("constructor")?t.constructor:function(){return e.apply(this,arguments)},n=function(){this.constructor=i};return n.prototype=e.prototype,i.prototype=new n,i.extend=o.inherits,t&&o.extend(i.prototype,t),i.__super__=e.prototype,i},o.noop=function(){},o.uid=function(){var t=0;return function(){return t++}}(),o.isNumber=function(t){return!isNaN(parseFloat(t))&&isFinite(t)},o.almostEquals=function(t,e,i){return Math.abs(t-e)<i},o.max=function(t){return t.reduce(function(t,e){return isNaN(e)?t:Math.max(t,e)},Number.NEGATIVE_INFINITY)},o.min=function(t){return t.reduce(function(t,e){return isNaN(e)?t:Math.min(t,e)},Number.POSITIVE_INFINITY)},o.sign=Math.sign?function(t){return Math.sign(t)}:function(t){return t=+t,0===t||isNaN(t)?t:t>0?1:-1},o.log10=Math.log10?function(t){return Math.log10(t)}:function(t){return Math.log(t)/Math.LN10},o.toRadians=function(t){return t*(Math.PI/180)},o.toDegrees=function(t){return t*(180/Math.PI)},o.getAngleFromPoint=function(t,e){var i=e.x-t.x,n=e.y-t.y,r=Math.sqrt(i*i+n*n),o=Math.atan2(n,i);return o<-.5*Math.PI&&(o+=2*Math.PI),{angle:o,distance:r}},o.aliasPixel=function(t){return t%2===0?0:.5},o.splineCurve=function(t,e,i,n){var r=t.skip?e:t,o=e,a=i.skip?e:i,s=Math.sqrt(Math.pow(o.x-r.x,2)+Math.pow(o.y-r.y,2)),l=Math.sqrt(Math.pow(a.x-o.x,2)+Math.pow(a.y-o.y,2)),c=s/(s+l),u=l/(s+l);c=isNaN(c)?0:c,u=isNaN(u)?0:u;var h=n*c,d=n*u;return{previous:{x:o.x-h*(a.x-r.x),y:o.y-h*(a.y-r.y)},next:{x:o.x+d*(a.x-r.x),y:o.y+d*(a.y-r.y)}}},o.nextItem=function(t,e,i){return i?e>=t.length-1?t[0]:t[e+1]:e>=t.length-1?t[t.length-1]:t[e+1]},o.previousItem=function(t,e,i){return i?0>=e?t[t.length-1]:t[e-1]:0>=e?t[0]:t[e-1]},o.niceNum=function(t,e){var i,n=Math.floor(o.log10(t)),r=t/Math.pow(10,n);return i=e?1.5>r?1:3>r?2:7>r?5:10:1>=r?1:2>=r?2:5>=r?5:10,i*Math.pow(10,n)};var a=o.easingEffects={linear:function(t){return t},easeInQuad:function(t){return t*t},easeOutQuad:function(t){return-1*t*(t-2)},easeInOutQuad:function(t){return(t/=.5)<1?.5*t*t:-.5*(--t*(t-2)-1)},easeInCubic:function(t){return t*t*t},easeOutCubic:function(t){return 1*((t=t/1-1)*t*t+1)},easeInOutCubic:function(t){return(t/=.5)<1?.5*t*t*t:.5*((t-=2)*t*t+2)},easeInQuart:function(t){return t*t*t*t},easeOutQuart:function(t){return-1*((t=t/1-1)*t*t*t-1)},easeInOutQuart:function(t){return(t/=.5)<1?.5*t*t*t*t:-.5*((t-=2)*t*t*t-2)},easeInQuint:function(t){return 1*(t/=1)*t*t*t*t},easeOutQuint:function(t){return 1*((t=t/1-1)*t*t*t*t+1)},easeInOutQuint:function(t){return(t/=.5)<1?.5*t*t*t*t*t:.5*((t-=2)*t*t*t*t+2)},easeInSine:function(t){return-1*Math.cos(t/1*(Math.PI/2))+1},easeOutSine:function(t){return 1*Math.sin(t/1*(Math.PI/2))},easeInOutSine:function(t){return-.5*(Math.cos(Math.PI*t/1)-1)},easeInExpo:function(t){return 0===t?1:1*Math.pow(2,10*(t/1-1))},easeOutExpo:function(t){return 1===t?1:1*(-Math.pow(2,-10*t/1)+1)},easeInOutExpo:function(t){return 0===t?0:1===t?1:(t/=.5)<1?.5*Math.pow(2,10*(t-1)):.5*(-Math.pow(2,-10*--t)+2)},easeInCirc:function(t){return t>=1?t:-1*(Math.sqrt(1-(t/=1)*t)-1)},easeOutCirc:function(t){return 1*Math.sqrt(1-(t=t/1-1)*t)},easeInOutCirc:function(t){return(t/=.5)<1?-.5*(Math.sqrt(1-t*t)-1):.5*(Math.sqrt(1-(t-=2)*t)+1)},easeInElastic:function(t){var e=1.70158,i=0,n=1;return 0===t?0:1===(t/=1)?1:(i||(i=.3),n<Math.abs(1)?(n=1,e=i/4):e=i/(2*Math.PI)*Math.asin(1/n),-(n*Math.pow(2,10*(t-=1))*Math.sin((1*t-e)*(2*Math.PI)/i)))},easeOutElastic:function(t){var e=1.70158,i=0,n=1;return 0===t?0:1===(t/=1)?1:(i||(i=.3),n<Math.abs(1)?(n=1,e=i/4):e=i/(2*Math.PI)*Math.asin(1/n),n*Math.pow(2,-10*t)*Math.sin((1*t-e)*(2*Math.PI)/i)+1)},easeInOutElastic:function(t){var e=1.70158,i=0,n=1;return 0===t?0:2===(t/=.5)?1:(i||(i=1*(.3*1.5)),n<Math.abs(1)?(n=1,e=i/4):e=i/(2*Math.PI)*Math.asin(1/n),1>t?-.5*(n*Math.pow(2,10*(t-=1))*Math.sin((1*t-e)*(2*Math.PI)/i)):n*Math.pow(2,-10*(t-=1))*Math.sin((1*t-e)*(2*Math.PI)/i)*.5+1)},easeInBack:function(t){var e=1.70158;return 1*(t/=1)*t*((e+1)*t-e)},easeOutBack:function(t){var e=1.70158;return 1*((t=t/1-1)*t*((e+1)*t+e)+1)},easeInOutBack:function(t){var e=1.70158;return(t/=.5)<1?.5*(t*t*(((e*=1.525)+1)*t-e)):.5*((t-=2)*t*(((e*=1.525)+1)*t+e)+2)},easeInBounce:function(t){return 1-a.easeOutBounce(1-t)},easeOutBounce:function(t){return(t/=1)<1/2.75?1*(7.5625*t*t):2/2.75>t?1*(7.5625*(t-=1.5/2.75)*t+.75):2.5/2.75>t?1*(7.5625*(t-=2.25/2.75)*t+.9375):1*(7.5625*(t-=2.625/2.75)*t+.984375)},easeInOutBounce:function(t){return.5>t?.5*a.easeInBounce(2*t):.5*a.easeOutBounce(2*t-1)+.5}};o.requestAnimFrame=function(){return window.requestAnimationFrame||window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame||window.oRequestAnimationFrame||window.msRequestAnimationFrame||function(t){return window.setTimeout(t,1e3/60)}}(),o.cancelAnimFrame=function(){return window.cancelAnimationFrame||window.webkitCancelAnimationFrame||window.mozCancelAnimationFrame||window.oCancelAnimationFrame||window.msCancelAnimationFrame||function(t){return window.clearTimeout(t,1e3/60)}}(),o.getRelativePosition=function(t,e){var i,n,r=t.originalEvent||t,a=t.currentTarget||t.srcElement,s=a.getBoundingClientRect(),l=r.touches;l&&l.length>0?(i=l[0].clientX,n=l[0].clientY):(i=r.clientX,n=r.clientY);var c=parseFloat(o.getStyle(a,"padding-left")),u=parseFloat(o.getStyle(a,"padding-top")),h=parseFloat(o.getStyle(a,"padding-right")),d=parseFloat(o.getStyle(a,"padding-bottom")),p=s.right-s.left-c-h,f=s.bottom-s.top-u-d;return i=Math.round((i-s.left-c)/p*a.width/e.currentDevicePixelRatio),n=Math.round((n-s.top-u)/f*a.height/e.currentDevicePixelRatio),{x:i,y:n}},o.addEvent=function(t,e,i){t.addEventListener?t.addEventListener(e,i):t.attachEvent?t.attachEvent("on"+e,i):t["on"+e]=i},o.removeEvent=function(t,e,i){t.removeEventListener?t.removeEventListener(e,i,!1):t.detachEvent?t.detachEvent("on"+e,i):t["on"+e]=o.noop},o.bindEvents=function(t,e,i){var n=t.events=t.events||{};o.each(e,function(e){n[e]=function(){i.apply(t,arguments)},o.addEvent(t.chart.canvas,e,n[e])})},o.unbindEvents=function(t,e){var i=t.chart.canvas;o.each(e,function(t,e){o.removeEvent(i,e,t)})},o.getConstraintWidth=function(t){return r(t,"max-width","clientWidth")},o.getConstraintHeight=function(t){return r(t,"max-height","clientHeight")},o.getMaximumWidth=function(t){var e=t.parentNode,i=parseInt(o.getStyle(e,"padding-left"))+parseInt(o.getStyle(e,"padding-right")),n=e.clientWidth-i,r=o.getConstraintWidth(t);return isNaN(r)?n:Math.min(n,r)},o.getMaximumHeight=function(t){var e=t.parentNode,i=parseInt(o.getStyle(e,"padding-top"))+parseInt(o.getStyle(e,"padding-bottom")),n=e.clientHeight-i,r=o.getConstraintHeight(t);return isNaN(r)?n:Math.min(n,r)},o.getStyle=function(t,e){return t.currentStyle?t.currentStyle[e]:document.defaultView.getComputedStyle(t,null).getPropertyValue(e)},o.retinaScale=function(t){var e=t.ctx,i=t.canvas,n=i.width,r=i.height,o=t.currentDevicePixelRatio=window.devicePixelRatio||1;1!==o&&(i.height=r*o,i.width=n*o,e.scale(o,o),t.originalDevicePixelRatio=t.originalDevicePixelRatio||o),i.style.width=n+"px",i.style.height=r+"px"},o.clear=function(t){t.ctx.clearRect(0,0,t.width,t.height)},o.fontString=function(t,e,i){return e+" "+t+"px "+i},o.longestText=function(t,e,i,n){n=n||{};var r=n.data=n.data||{},a=n.garbageCollect=n.garbageCollect||[];n.font!==e&&(r=n.data={},a=n.garbageCollect=[],n.font=e),t.font=e;var s=0;o.each(i,function(e){void 0!==e&&null!==e&&o.isArray(e)!==!0?s=o.measureText(t,r,a,s,e):o.isArray(e)&&o.each(e,function(e){void 0===e||null===e||o.isArray(e)||(s=o.measureText(t,r,a,s,e))})});var l=a.length/2;if(l>i.length){for(var c=0;l>c;c++)delete r[a[c]];a.splice(0,l)}return s},o.measureText=function(t,e,i,n,r){var o=e[r];return o||(o=e[r]=t.measureText(r).width,i.push(r)),o>n&&(n=o),n},o.numberOfLabelLines=function(t){var e=1;return o.each(t,function(t){o.isArray(t)&&t.length>e&&(e=t.length)}),e},o.drawRoundedRectangle=function(t,e,i,n,r,o){t.beginPath(),t.moveTo(e+o,i),t.lineTo(e+n-o,i),t.quadraticCurveTo(e+n,i,e+n,i+o),t.lineTo(e+n,i+r-o),t.quadraticCurveTo(e+n,i+r,e+n-o,i+r),t.lineTo(e+o,i+r),t.quadraticCurveTo(e,i+r,e,i+r-o),t.lineTo(e,i+o),t.quadraticCurveTo(e,i,e+o,i),t.closePath()},o.color=function(e){return n?n(e instanceof CanvasGradient?t.defaults.global.defaultColor:e):(console.log("Color.js not found!"),e)},o.addResizeListener=function(t,e){var i=document.createElement("iframe"),n="chartjs-hidden-iframe";i.classlist?i.classlist.add(n):i.setAttribute("class",n);var r=i.style;r.width="100%",r.display="block",r.border=0,r.height=0,r.margin=0,r.position="absolute",r.left=0,r.right=0,r.top=0,r.bottom=0,t.insertBefore(i,t.firstChild),(i.contentWindow||i).onresize=function(){e&&e()}},o.removeResizeListener=function(t){var e=t.querySelector(".chartjs-hidden-iframe");e&&e.parentNode.removeChild(e)},o.isArray=Array.isArray?function(t){return Array.isArray(t)}:function(t){return"[object Array]"===Object.prototype.toString.call(t)},o.arrayEquals=function(t,e){var i,n,r,a;if(!t||!e||t.length!=e.length)return!1;for(i=0,n=t.length;n>i;++i)if(r=t[i],a=e[i],r instanceof Array&&a instanceof Array){if(!o.arrayEquals(r,a))return!1}else if(r!=a)return!1;return!0},o.callCallback=function(t,e,i){t&&"function"==typeof t.call&&t.apply(i,e)},o.getHoverColor=function(t){return t instanceof CanvasPattern?t:o.color(t).saturate(.5).darken(.1).rgbString()}}},{3:3}],26:[function(t,e,i){"use strict";e.exports=function(){var t=function(e,i){var n=this,r=t.helpers;return n.config=i,e.length&&e[0].getContext&&(e=e[0]),e.getContext&&(e=e.getContext("2d")),n.ctx=e,n.canvas=e.canvas,e.canvas.style.display=e.canvas.style.display||"block",n.width=e.canvas.width||parseInt(r.getStyle(e.canvas,"width"),10)||r.getMaximumWidth(e.canvas),n.height=e.canvas.height||parseInt(r.getStyle(e.canvas,"height"),10)||r.getMaximumHeight(e.canvas),n.aspectRatio=n.width/n.height,(isNaN(n.aspectRatio)||isFinite(n.aspectRatio)===!1)&&(n.aspectRatio=void 0!==i.aspectRatio?i.aspectRatio:2),n.originalCanvasStyleWidth=e.canvas.style.width,n.originalCanvasStyleHeight=e.canvas.style.height,r.retinaScale(n),i&&(n.controller=new t.Controller(n)),r.addResizeListener(e.canvas.parentNode,function(){n.controller&&n.controller.config.options.responsive&&n.controller.resize()}),n.controller?n.controller:n};return t.defaults={global:{responsive:!0,responsiveAnimationDuration:0,maintainAspectRatio:!0,events:["mousemove","mouseout","click","touchstart","touchmove"],hover:{onHover:null,mode:"single",animationDuration:400},onClick:null,defaultColor:"rgba(0,0,0,0.1)",defaultFontColor:"#666",defaultFontFamily:"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif",defaultFontSize:12,defaultFontStyle:"normal",showLines:!0,elements:{},legendCallback:function(t){var e=[];e.push('<ul class="'+t.id+'-legend">');for(var i=0;i<t.data.datasets.length;i++)e.push('<li><span style="background-color:'+t.data.datasets[i].backgroundColor+'"></span>'),t.data.datasets[i].label&&e.push(t.data.datasets[i].label),e.push("</li>");return e.push("</ul>"),e.join("")}}},t.Chart=t,t}},{}],27:[function(t,e,i){"use strict";e.exports=function(t){var e=t.helpers;t.layoutService={defaults:{},addBox:function(t,e){t.boxes||(t.boxes=[]),t.boxes.push(e)},removeBox:function(t,e){t.boxes&&t.boxes.splice(t.boxes.indexOf(e),1)},update:function(t,i,n){function r(t){var e,i=t.isHorizontal();i?(e=t.update(t.options.fullWidth?g:k,x),w-=e.height):(e=t.update(b,y),k-=e.width),_.push({horizontal:i,minSize:e,box:t})}function o(t){var i=e.findNextWhere(_,function(e){return e.box===t});if(i)if(t.isHorizontal()){var n={left:S,right:C,top:0,bottom:0};t.update(t.options.fullWidth?g:k,m/2,n)}else t.update(i.minSize.width,w)}function a(t){var i=e.findNextWhere(_,function(e){return e.box===t}),n={left:0,right:0,top:D,bottom:P};i&&t.update(i.minSize.width,w,n)}function s(t){t.isHorizontal()?(t.left=t.options.fullWidth?l:S,t.right=t.options.fullWidth?i-l:S+k,t.top=A,t.bottom=A+t.height,A=t.bottom):(t.left=T,t.right=T+t.width,t.top=D,t.bottom=D+w,T=t.right)}if(t){var l=0,c=0,u=e.where(t.boxes,function(t){return"left"===t.options.position}),h=e.where(t.boxes,function(t){return"right"===t.options.position}),d=e.where(t.boxes,function(t){return"top"===t.options.position}),p=e.where(t.boxes,function(t){return"bottom"===t.options.position}),f=e.where(t.boxes,function(t){return"chartArea"===t.options.position});d.sort(function(t,e){return(e.options.fullWidth?1:0)-(t.options.fullWidth?1:0)}),p.sort(function(t,e){return(t.options.fullWidth?1:0)-(e.options.fullWidth?1:0)});var g=i-2*l,m=n-2*c,v=g/2,y=m/2,b=(i-v)/(u.length+h.length),x=(n-y)/(d.length+p.length),k=g,w=m,_=[];e.each(u.concat(h,d,p),r);var S=l,C=l,D=c,P=c;e.each(u.concat(h),o),e.each(u,function(t){S+=t.width}),e.each(h,function(t){C+=t.width}),e.each(d.concat(p),o),e.each(d,function(t){D+=t.height}),e.each(p,function(t){P+=t.height}),e.each(u.concat(h),a),S=l,C=l,D=c,P=c,e.each(u,function(t){S+=t.width}),e.each(h,function(t){C+=t.width}),e.each(d,function(t){D+=t.height}),e.each(p,function(t){P+=t.height});var M=n-D-P,I=i-S-C;(I!==k||M!==w)&&(e.each(u,function(t){t.height=M}),e.each(h,function(t){t.height=M;
}),e.each(d,function(t){t.options.fullWidth||(t.width=I)}),e.each(p,function(t){t.options.fullWidth||(t.width=I)}),w=M,k=I);var T=l,A=c;e.each(u.concat(d),s),T+=k,A+=w,e.each(h,s),e.each(p,s),t.chartArea={left:S,top:D,right:S+k,bottom:D+w},e.each(f,function(e){e.left=t.chartArea.left,e.top=t.chartArea.top,e.right=t.chartArea.right,e.bottom=t.chartArea.bottom,e.update(k,w)})}}}}},{}],28:[function(t,e,i){"use strict";e.exports=function(t){var e=t.helpers,i=e.noop;t.defaults.global.legend={display:!0,position:"top",fullWidth:!0,reverse:!1,onClick:function(t,e){var i=e.datasetIndex,n=this.chart,r=n.getDatasetMeta(i);r.hidden=null===r.hidden?!n.data.datasets[i].hidden:null,n.update()},labels:{boxWidth:40,padding:10,generateLabels:function(t){var i=t.data;return e.isArray(i.datasets)?i.datasets.map(function(i,n){return{text:i.label,fillStyle:e.isArray(i.backgroundColor)?i.backgroundColor[0]:i.backgroundColor,hidden:!t.isDatasetVisible(n),lineCap:i.borderCapStyle,lineDash:i.borderDash,lineDashOffset:i.borderDashOffset,lineJoin:i.borderJoinStyle,lineWidth:i.borderWidth,strokeStyle:i.borderColor,datasetIndex:n}},this):[]}}},t.Legend=t.Element.extend({initialize:function(t){e.extend(this,t),this.legendHitBoxes=[],this.doughnutMode=!1},beforeUpdate:i,update:function(t,e,i){var n=this;return n.beforeUpdate(),n.maxWidth=t,n.maxHeight=e,n.margins=i,n.beforeSetDimensions(),n.setDimensions(),n.afterSetDimensions(),n.beforeBuildLabels(),n.buildLabels(),n.afterBuildLabels(),n.beforeFit(),n.fit(),n.afterFit(),n.afterUpdate(),n.minSize},afterUpdate:i,beforeSetDimensions:i,setDimensions:function(){var t=this;t.isHorizontal()?(t.width=t.maxWidth,t.left=0,t.right=t.width):(t.height=t.maxHeight,t.top=0,t.bottom=t.height),t.paddingLeft=0,t.paddingTop=0,t.paddingRight=0,t.paddingBottom=0,t.minSize={width:0,height:0}},afterSetDimensions:i,beforeBuildLabels:i,buildLabels:function(){var t=this;t.legendItems=t.options.labels.generateLabels.call(t,t.chart),t.options.reverse&&t.legendItems.reverse()},afterBuildLabels:i,beforeFit:i,fit:function(){var i=this,n=i.options,r=n.labels,o=n.display,a=i.ctx,s=t.defaults.global,l=e.getValueOrDefault,c=l(r.fontSize,s.defaultFontSize),u=l(r.fontStyle,s.defaultFontStyle),h=l(r.fontFamily,s.defaultFontFamily),d=e.fontString(c,u,h),p=i.legendHitBoxes=[],f=i.minSize,g=i.isHorizontal();if(g?(f.width=i.maxWidth,f.height=o?10:0):(f.width=o?10:0,f.height=i.maxHeight),o)if(a.font=d,g){var m=i.lineWidths=[0],v=i.legendItems.length?c+r.padding:0;a.textAlign="left",a.textBaseline="top",e.each(i.legendItems,function(t,e){var n=r.boxWidth+c/2+a.measureText(t.text).width;m[m.length-1]+n+r.padding>=i.width&&(v+=c+r.padding,m[m.length]=i.left),p[e]={left:0,top:0,width:n,height:c},m[m.length-1]+=n+r.padding}),f.height+=v}else{var y=r.padding,b=i.columnWidths=[],x=r.padding,k=0,w=0,_=c+y;e.each(i.legendItems,function(t,e){var i=r.boxWidth+c/2+a.measureText(t.text).width;w+_>f.height&&(x+=k+r.padding,b.push(k),k=0,w=0),k=Math.max(k,i),w+=_,p[e]={left:0,top:0,width:i,height:c}}),x+=k,b.push(k),f.width+=x}i.width=f.width,i.height=f.height},afterFit:i,isHorizontal:function(){return"top"===this.options.position||"bottom"===this.options.position},draw:function(){var i=this,n=i.options,r=n.labels,o=t.defaults.global,a=o.elements.line,s=i.width,l=(i.height,i.lineWidths);if(n.display){var c,u=i.ctx,h=e.getValueOrDefault,d=h(r.fontColor,o.defaultFontColor),p=h(r.fontSize,o.defaultFontSize),f=h(r.fontStyle,o.defaultFontStyle),g=h(r.fontFamily,o.defaultFontFamily),m=e.fontString(p,f,g);u.textAlign="left",u.textBaseline="top",u.lineWidth=.5,u.strokeStyle=d,u.fillStyle=d,u.font=m;var v=r.boxWidth,y=i.legendHitBoxes,b=function(t,e,i){u.save(),u.fillStyle=h(i.fillStyle,o.defaultColor),u.lineCap=h(i.lineCap,a.borderCapStyle),u.lineDashOffset=h(i.lineDashOffset,a.borderDashOffset),u.lineJoin=h(i.lineJoin,a.borderJoinStyle),u.lineWidth=h(i.lineWidth,a.borderWidth),u.strokeStyle=h(i.strokeStyle,o.defaultColor),u.setLineDash&&u.setLineDash(h(i.lineDash,a.borderDash)),u.strokeRect(t,e,v,p),u.fillRect(t,e,v,p),u.restore()},x=function(t,e,i,n){u.fillText(i.text,v+p/2+t,e),i.hidden&&(u.beginPath(),u.lineWidth=2,u.moveTo(v+p/2+t,e+p/2),u.lineTo(v+p/2+t+n,e+p/2),u.stroke())},k=i.isHorizontal();c=k?{x:i.left+(s-l[0])/2,y:i.top+r.padding,line:0}:{x:i.left+r.padding,y:i.top,line:0};var w=p+r.padding;e.each(i.legendItems,function(t,e){var n=u.measureText(t.text).width,o=v+p/2+n,a=c.x,h=c.y;k?a+o>=s&&(h=c.y+=p+r.padding,c.line++,a=c.x=i.left+(s-l[c.line])/2):h+w>i.bottom&&(a=c.x=a+i.columnWidths[c.line]+r.padding,h=c.y=i.top,c.line++),b(a,h,t),y[e].left=a,y[e].top=h,x(a,h,t,n),k?c.x+=o+r.padding:c.y+=w})}},handleEvent:function(t){var i=this,n=e.getRelativePosition(t,i.chart.chart),r=n.x,o=n.y,a=i.options;if(r>=i.left&&r<=i.right&&o>=i.top&&o<=i.bottom)for(var s=i.legendHitBoxes,l=0;l<s.length;++l){var c=s[l];if(r>=c.left&&r<=c.left+c.width&&o>=c.top&&o<=c.top+c.height){a.onClick&&a.onClick.call(i,t,i.legendItems[l]);break}}}}),t.plugins.register({beforeInit:function(e){var i=e.options,n=i.legend;n&&(e.legend=new t.Legend({ctx:e.chart.ctx,options:n,chart:e}),t.layoutService.addBox(e,e.legend))}})}},{}],29:[function(t,e,i){"use strict";e.exports=function(t){var e=t.helpers.noop;t.plugins={_plugins:[],register:function(t){var e=this._plugins;[].concat(t).forEach(function(t){-1===e.indexOf(t)&&e.push(t)})},unregister:function(t){var e=this._plugins;[].concat(t).forEach(function(t){var i=e.indexOf(t);-1!==i&&e.splice(i,1)})},clear:function(){this._plugins=[]},count:function(){return this._plugins.length},getAll:function(){return this._plugins},notify:function(t,e){var i,n,r=this._plugins,o=r.length;for(i=0;o>i;++i)if(n=r[i],"function"==typeof n[t]&&n[t].apply(n,e||[])===!1)return!1;return!0}},t.PluginBase=t.Element.extend({beforeInit:e,afterInit:e,beforeUpdate:e,afterUpdate:e,beforeDraw:e,afterDraw:e,destroy:e}),t.pluginService=t.plugins}},{}],30:[function(t,e,i){"use strict";e.exports=function(t){var e=t.helpers;t.defaults.scale={display:!0,position:"left",gridLines:{display:!0,color:"rgba(0, 0, 0, 0.1)",lineWidth:1,drawBorder:!0,drawOnChartArea:!0,drawTicks:!0,tickMarkLength:10,zeroLineWidth:1,zeroLineColor:"rgba(0,0,0,0.25)",offsetGridLines:!1},scaleLabel:{labelString:"",display:!1},ticks:{beginAtZero:!1,minRotation:0,maxRotation:50,mirror:!1,padding:10,reverse:!1,display:!0,autoSkip:!0,autoSkipPadding:0,labelOffset:0,callback:function(t){return e.isArray(t)?t:""+t}}},t.Scale=t.Element.extend({beforeUpdate:function(){e.callCallback(this.options.beforeUpdate,[this])},update:function(t,i,n){var r=this;return r.beforeUpdate(),r.maxWidth=t,r.maxHeight=i,r.margins=e.extend({left:0,right:0,top:0,bottom:0},n),r.beforeSetDimensions(),r.setDimensions(),r.afterSetDimensions(),r.beforeDataLimits(),r.determineDataLimits(),r.afterDataLimits(),r.beforeBuildTicks(),r.buildTicks(),r.afterBuildTicks(),r.beforeTickToLabelConversion(),r.convertTicksToLabels(),r.afterTickToLabelConversion(),r.beforeCalculateTickRotation(),r.calculateTickRotation(),r.afterCalculateTickRotation(),r.beforeFit(),r.fit(),r.afterFit(),r.afterUpdate(),r.minSize},afterUpdate:function(){e.callCallback(this.options.afterUpdate,[this])},beforeSetDimensions:function(){e.callCallback(this.options.beforeSetDimensions,[this])},setDimensions:function(){var t=this;t.isHorizontal()?(t.width=t.maxWidth,t.left=0,t.right=t.width):(t.height=t.maxHeight,t.top=0,t.bottom=t.height),t.paddingLeft=0,t.paddingTop=0,t.paddingRight=0,t.paddingBottom=0},afterSetDimensions:function(){e.callCallback(this.options.afterSetDimensions,[this])},beforeDataLimits:function(){e.callCallback(this.options.beforeDataLimits,[this])},determineDataLimits:e.noop,afterDataLimits:function(){e.callCallback(this.options.afterDataLimits,[this])},beforeBuildTicks:function(){e.callCallback(this.options.beforeBuildTicks,[this])},buildTicks:e.noop,afterBuildTicks:function(){e.callCallback(this.options.afterBuildTicks,[this])},beforeTickToLabelConversion:function(){e.callCallback(this.options.beforeTickToLabelConversion,[this])},convertTicksToLabels:function(){var t=this;t.ticks=t.ticks.map(function(e,i,n){return t.options.ticks.userCallback?t.options.ticks.userCallback(e,i,n):t.options.ticks.callback(e,i,n)},t)},afterTickToLabelConversion:function(){e.callCallback(this.options.afterTickToLabelConversion,[this])},beforeCalculateTickRotation:function(){e.callCallback(this.options.beforeCalculateTickRotation,[this])},calculateTickRotation:function(){var i=this,n=i.ctx,r=t.defaults.global,o=i.options.ticks,a=e.getValueOrDefault(o.fontSize,r.defaultFontSize),s=e.getValueOrDefault(o.fontStyle,r.defaultFontStyle),l=e.getValueOrDefault(o.fontFamily,r.defaultFontFamily),c=e.fontString(a,s,l);n.font=c;var u,h=n.measureText(i.ticks[0]).width,d=n.measureText(i.ticks[i.ticks.length-1]).width;if(i.labelRotation=o.minRotation||0,i.paddingRight=0,i.paddingLeft=0,i.options.display&&i.isHorizontal()){i.paddingRight=d/2+3,i.paddingLeft=h/2+3,i.longestTextCache||(i.longestTextCache={});for(var p,f,g=e.longestText(n,c,i.ticks,i.longestTextCache),m=g,v=i.getPixelForTick(1)-i.getPixelForTick(0)-6;m>v&&i.labelRotation<o.maxRotation;){if(p=Math.cos(e.toRadians(i.labelRotation)),f=Math.sin(e.toRadians(i.labelRotation)),u=p*h,u+a/2>i.yLabelWidth&&(i.paddingLeft=u+a/2),i.paddingRight=a/2,f*g>i.maxHeight){i.labelRotation--;break}i.labelRotation++,m=p*g}}i.margins&&(i.paddingLeft=Math.max(i.paddingLeft-i.margins.left,0),i.paddingRight=Math.max(i.paddingRight-i.margins.right,0))},afterCalculateTickRotation:function(){e.callCallback(this.options.afterCalculateTickRotation,[this])},beforeFit:function(){e.callCallback(this.options.beforeFit,[this])},fit:function(){var i=this,n=i.minSize={width:0,height:0},r=i.options,o=t.defaults.global,a=r.ticks,s=r.scaleLabel,l=r.display,c=i.isHorizontal(),u=e.getValueOrDefault(a.fontSize,o.defaultFontSize),h=e.getValueOrDefault(a.fontStyle,o.defaultFontStyle),d=e.getValueOrDefault(a.fontFamily,o.defaultFontFamily),p=e.fontString(u,h,d),f=e.getValueOrDefault(s.fontSize,o.defaultFontSize),g=e.getValueOrDefault(s.fontStyle,o.defaultFontStyle),m=e.getValueOrDefault(s.fontFamily,o.defaultFontFamily),v=(e.fontString(f,g,m),r.gridLines.tickMarkLength);if(c?n.width=i.isFullWidth()?i.maxWidth-i.margins.left-i.margins.right:i.maxWidth:n.width=l?v:0,c?n.height=l?v:0:n.height=i.maxHeight,s.display&&l&&(c?n.height+=1.5*f:n.width+=1.5*f),a.display&&l){i.longestTextCache||(i.longestTextCache={});var y=e.longestText(i.ctx,p,i.ticks,i.longestTextCache),b=e.numberOfLabelLines(i.ticks),x=.5*u;if(c){i.longestLabelWidth=y;var k=Math.sin(e.toRadians(i.labelRotation))*i.longestLabelWidth+u*b+x*b;n.height=Math.min(i.maxHeight,n.height+k),i.ctx.font=p;var w=i.ctx.measureText(i.ticks[0]).width,_=i.ctx.measureText(i.ticks[i.ticks.length-1]).width,S=Math.cos(e.toRadians(i.labelRotation)),C=Math.sin(e.toRadians(i.labelRotation));i.paddingLeft=0!==i.labelRotation?S*w+3:w/2+3,i.paddingRight=0!==i.labelRotation?C*(u/2)+3:_/2+3}else{var D=i.maxWidth-n.width,P=a.mirror;P?y=0:y+=i.options.ticks.padding,D>y?n.width+=y:n.width=i.maxWidth,i.paddingTop=u/2,i.paddingBottom=u/2}}i.margins&&(i.paddingLeft=Math.max(i.paddingLeft-i.margins.left,0),i.paddingTop=Math.max(i.paddingTop-i.margins.top,0),i.paddingRight=Math.max(i.paddingRight-i.margins.right,0),i.paddingBottom=Math.max(i.paddingBottom-i.margins.bottom,0)),i.width=n.width,i.height=n.height},afterFit:function(){e.callCallback(this.options.afterFit,[this])},isHorizontal:function(){return"top"===this.options.position||"bottom"===this.options.position},isFullWidth:function(){return this.options.fullWidth},getRightValue:function i(t){return null===t||"undefined"==typeof t?NaN:"number"==typeof t&&isNaN(t)?NaN:"object"==typeof t?t instanceof Date||t.isValid?t:i(this.isHorizontal()?t.x:t.y):t},getLabelForIndex:e.noop,getPixelForValue:e.noop,getValueForPixel:e.noop,getPixelForTick:function(t,e){var i=this;if(i.isHorizontal()){var n=i.width-(i.paddingLeft+i.paddingRight),r=n/Math.max(i.ticks.length-(i.options.gridLines.offsetGridLines?0:1),1),o=r*t+i.paddingLeft;e&&(o+=r/2);var a=i.left+Math.round(o);return a+=i.isFullWidth()?i.margins.left:0}var s=i.height-(i.paddingTop+i.paddingBottom);return i.top+t*(s/(i.ticks.length-1))},getPixelForDecimal:function(t){var e=this;if(e.isHorizontal()){var i=e.width-(e.paddingLeft+e.paddingRight),n=i*t+e.paddingLeft,r=e.left+Math.round(n);return r+=e.isFullWidth()?e.margins.left:0}return e.top+t*e.height},getBasePixel:function(){var t=this,e=t.min,i=t.max;return t.getPixelForValue(t.beginAtZero?0:0>e&&0>i?i:e>0&&i>0?e:0)},draw:function(i){var n=this,r=n.options;if(r.display){var o,a,s=n.ctx,l=t.defaults.global,c=r.ticks,u=r.gridLines,h=r.scaleLabel,d=0!==n.labelRotation,p=c.autoSkip,f=n.isHorizontal();c.maxTicksLimit&&(a=c.maxTicksLimit);var g=e.getValueOrDefault(c.fontColor,l.defaultFontColor),m=e.getValueOrDefault(c.fontSize,l.defaultFontSize),v=e.getValueOrDefault(c.fontStyle,l.defaultFontStyle),y=e.getValueOrDefault(c.fontFamily,l.defaultFontFamily),b=e.fontString(m,v,y),x=u.tickMarkLength,k=e.getValueOrDefault(h.fontColor,l.defaultFontColor),w=e.getValueOrDefault(h.fontSize,l.defaultFontSize),_=e.getValueOrDefault(h.fontStyle,l.defaultFontStyle),S=e.getValueOrDefault(h.fontFamily,l.defaultFontFamily),C=e.fontString(w,_,S),D=e.toRadians(n.labelRotation),P=Math.cos(D),M=(Math.sin(D),n.longestLabelWidth*P);s.fillStyle=g;var I=[];if(f){if(o=!1,d&&(M/=2),(M+c.autoSkipPadding)*n.ticks.length>n.width-(n.paddingLeft+n.paddingRight)&&(o=1+Math.floor((M+c.autoSkipPadding)*n.ticks.length/(n.width-(n.paddingLeft+n.paddingRight)))),a&&n.ticks.length>a)for(;!o||n.ticks.length/(o||1)>a;)o||(o=1),o+=1;p||(o=!1)}var T="right"===r.position?n.left:n.right-x,A="right"===r.position?n.left+x:n.right,F="bottom"===r.position?n.top:n.bottom-x,N="bottom"===r.position?n.top+x:n.bottom;if(e.each(n.ticks,function(t,a){if(void 0!==t&&null!==t){var s=n.ticks.length===a+1,l=o>1&&a%o>0||a%o===0&&a+o>=n.ticks.length;if((!l||s)&&void 0!==t&&null!==t){var h,p;a===("undefined"!=typeof n.zeroLineIndex?n.zeroLineIndex:0)?(h=u.zeroLineWidth,p=u.zeroLineColor):(h=e.getValueAtIndexOrDefault(u.lineWidth,a),p=e.getValueAtIndexOrDefault(u.color,a));var g,m,v,y,b,k,w,_,S,C,P,M="middle";if(f){d||(M="top"===r.position?"bottom":"top"),P=d?"right":"center";var L=n.getPixelForTick(a)+e.aliasPixel(h);S=n.getPixelForTick(a,u.offsetGridLines)+c.labelOffset,C=d?n.top+12:"top"===r.position?n.bottom-x:n.top+x,g=v=b=w=L,m=F,y=N,k=i.top,_=i.bottom}else{"left"===r.position?c.mirror?(S=n.right+c.padding,P="left"):(S=n.right-c.padding,P="right"):c.mirror?(S=n.left-c.padding,P="right"):(S=n.left+c.padding,P="left");var O=n.getPixelForTick(a);O+=e.aliasPixel(h),C=n.getPixelForTick(a,u.offsetGridLines),g=T,v=A,b=i.left,w=i.right,m=y=k=_=O}I.push({tx1:g,ty1:m,tx2:v,ty2:y,x1:b,y1:k,x2:w,y2:_,labelX:S,labelY:C,glWidth:h,glColor:p,rotation:-1*D,label:t,textBaseline:M,textAlign:P})}}}),e.each(I,function(t){if(u.display&&(s.lineWidth=t.glWidth,s.strokeStyle=t.glColor,s.beginPath(),u.drawTicks&&(s.moveTo(t.tx1,t.ty1),s.lineTo(t.tx2,t.ty2)),u.drawOnChartArea&&(s.moveTo(t.x1,t.y1),s.lineTo(t.x2,t.y2)),s.stroke()),c.display){s.save(),s.translate(t.labelX,t.labelY),s.rotate(t.rotation),s.font=b,s.textBaseline=t.textBaseline,s.textAlign=t.textAlign;var i=t.label;if(e.isArray(i))for(var n=0,r=0;n<i.length;++n)s.fillText(""+i[n],0,r),r+=1.5*m;else s.fillText(i,0,0);s.restore()}}),h.display){var L,O,E=0;if(f)L=n.left+(n.right-n.left)/2,O="bottom"===r.position?n.bottom-w/2:n.top+w/2;else{var H="left"===r.position;L=H?n.left+w/2:n.right-w/2,O=n.top+(n.bottom-n.top)/2,E=H?-.5*Math.PI:.5*Math.PI}s.save(),s.translate(L,O),s.rotate(E),s.textAlign="center",s.textBaseline="middle",s.fillStyle=k,s.font=C,s.fillText(h.labelString,0,0),s.restore()}if(u.drawBorder){s.lineWidth=e.getValueAtIndexOrDefault(u.lineWidth,0),s.strokeStyle=e.getValueAtIndexOrDefault(u.color,0);var R=n.left,B=n.right,W=n.top,j=n.bottom,z=e.aliasPixel(s.lineWidth);f?(W=j="top"===r.position?n.bottom:n.top,W+=z,j+=z):(R=B="left"===r.position?n.right:n.left,R+=z,B+=z),s.beginPath(),s.moveTo(R,W),s.lineTo(B,j),s.stroke()}}}})}},{}],31:[function(t,e,i){"use strict";e.exports=function(t){var e=t.helpers;t.scaleService={constructors:{},defaults:{},registerScaleType:function(t,i,n){this.constructors[t]=i,this.defaults[t]=e.clone(n)},getScaleConstructor:function(t){return this.constructors.hasOwnProperty(t)?this.constructors[t]:void 0},getScaleDefaults:function(i){return this.defaults.hasOwnProperty(i)?e.scaleMerge(t.defaults.scale,this.defaults[i]):{}},updateScaleDefaults:function(t,i){var n=this.defaults;n.hasOwnProperty(t)&&(n[t]=e.extend(n[t],i))},addScalesToLayout:function(i){e.each(i.scales,function(e){t.layoutService.addBox(i,e)})}}}},{}],32:[function(t,e,i){"use strict";e.exports=function(t){var e=t.helpers;t.defaults.global.title={display:!1,position:"top",fullWidth:!0,fontStyle:"bold",padding:10,text:""};var i=e.noop;t.Title=t.Element.extend({initialize:function(i){var n=this;e.extend(n,i),n.options=e.configMerge(t.defaults.global.title,i.options),n.legendHitBoxes=[]},beforeUpdate:function(){var i=this.chart.options;i&&i.title&&(this.options=e.configMerge(t.defaults.global.title,i.title))},update:function(t,e,i){var n=this;return n.beforeUpdate(),n.maxWidth=t,n.maxHeight=e,n.margins=i,n.beforeSetDimensions(),n.setDimensions(),n.afterSetDimensions(),n.beforeBuildLabels(),n.buildLabels(),n.afterBuildLabels(),n.beforeFit(),n.fit(),n.afterFit(),n.afterUpdate(),n.minSize},afterUpdate:i,beforeSetDimensions:i,setDimensions:function(){var t=this;t.isHorizontal()?(t.width=t.maxWidth,t.left=0,t.right=t.width):(t.height=t.maxHeight,t.top=0,t.bottom=t.height),t.paddingLeft=0,t.paddingTop=0,t.paddingRight=0,t.paddingBottom=0,t.minSize={width:0,height:0}},afterSetDimensions:i,beforeBuildLabels:i,buildLabels:i,afterBuildLabels:i,beforeFit:i,fit:function(){var i=this,n=(i.ctx,e.getValueOrDefault),r=i.options,o=t.defaults.global,a=r.display,s=n(r.fontSize,o.defaultFontSize),l=i.minSize;i.isHorizontal()?(l.width=i.maxWidth,l.height=a?s+2*r.padding:0):(l.width=a?s+2*r.padding:0,l.height=i.maxHeight),i.width=l.width,i.height=l.height},afterFit:i,isHorizontal:function(){var t=this.options.position;return"top"===t||"bottom"===t},draw:function(){var i=this,n=i.ctx,r=e.getValueOrDefault,o=i.options,a=t.defaults.global;if(o.display){var s,l,c=r(o.fontSize,a.defaultFontSize),u=r(o.fontStyle,a.defaultFontStyle),h=r(o.fontFamily,a.defaultFontFamily),d=e.fontString(c,u,h),p=0,f=i.top,g=i.left,m=i.bottom,v=i.right;n.fillStyle=r(o.fontColor,a.defaultFontColor),n.font=d,i.isHorizontal()?(s=g+(v-g)/2,l=f+(m-f)/2):(s="left"===o.position?g+c/2:v-c/2,l=f+(m-f)/2,p=Math.PI*("left"===o.position?-.5:.5)),n.save(),n.translate(s,l),n.rotate(p),n.textAlign="center",n.textBaseline="middle",n.fillText(o.text,0,0),n.restore()}}}),t.plugins.register({beforeInit:function(e){var i=e.options,n=i.title;n&&(e.titleBlock=new t.Title({ctx:e.chart.ctx,options:n,chart:e}),t.layoutService.addBox(e,e.titleBlock))}})}},{}],33:[function(t,e,i){"use strict";e.exports=function(t){function e(t,e){return e&&(r.isArray(e)?Array.prototype.push.apply(t,e):t.push(e)),t}function i(t){if(!t.length)return!1;var e,i,n=[],r=[];for(e=0,i=t.length;i>e;++e){var o=t[e];if(o&&o.hasValue()){var a=o.tooltipPosition();n.push(a.x),r.push(a.y)}}var s=0,l=0;for(e=0,i-n.length;i>e;++e)s+=n[e],l+=r[e];return{x:Math.round(s/n.length),y:Math.round(l/n.length)}}function n(t){var e=t._xScale,i=t._yScale||t._scale,n=t._index,r=t._datasetIndex;return{xLabel:e?e.getLabelForIndex(n,r):"",yLabel:i?i.getLabelForIndex(n,r):"",index:n,datasetIndex:r}}var r=t.helpers;t.defaults.global.tooltips={enabled:!0,custom:null,mode:"single",backgroundColor:"rgba(0,0,0,0.8)",titleFontStyle:"bold",titleSpacing:2,titleMarginBottom:6,titleFontColor:"#fff",titleAlign:"left",bodySpacing:2,bodyFontColor:"#fff",bodyAlign:"left",footerFontStyle:"bold",footerSpacing:2,footerMarginTop:6,footerFontColor:"#fff",footerAlign:"left",yPadding:6,xPadding:6,yAlign:"center",xAlign:"center",caretSize:5,cornerRadius:6,multiKeyBackground:"#fff",callbacks:{beforeTitle:r.noop,title:function(t,e){var i="",n=e.labels,r=n?n.length:0;if(t.length>0){var o=t[0];o.xLabel?i=o.xLabel:r>0&&o.index<r&&(i=n[o.index])}return i},afterTitle:r.noop,beforeBody:r.noop,beforeLabel:r.noop,label:function(t,e){var i=e.datasets[t.datasetIndex].label||"";return i+": "+t.yLabel},labelColor:function(t,e){var i=e.getDatasetMeta(t.datasetIndex),n=i.data[t.index],r=n._view;return{borderColor:r.borderColor,backgroundColor:r.backgroundColor}},afterLabel:r.noop,afterBody:r.noop,beforeFooter:r.noop,footer:r.noop,afterFooter:r.noop}},t.Tooltip=t.Element.extend({initialize:function(){var e=this,i=t.defaults.global,n=e._options,o=r.getValueOrDefault;r.extend(e,{_model:{xPadding:n.xPadding,yPadding:n.yPadding,xAlign:n.yAlign,yAlign:n.xAlign,bodyFontColor:n.bodyFontColor,_bodyFontFamily:o(n.bodyFontFamily,i.defaultFontFamily),_bodyFontStyle:o(n.bodyFontStyle,i.defaultFontStyle),_bodyAlign:n.bodyAlign,bodyFontSize:o(n.bodyFontSize,i.defaultFontSize),bodySpacing:n.bodySpacing,titleFontColor:n.titleFontColor,_titleFontFamily:o(n.titleFontFamily,i.defaultFontFamily),_titleFontStyle:o(n.titleFontStyle,i.defaultFontStyle),titleFontSize:o(n.titleFontSize,i.defaultFontSize),_titleAlign:n.titleAlign,titleSpacing:n.titleSpacing,titleMarginBottom:n.titleMarginBottom,footerFontColor:n.footerFontColor,_footerFontFamily:o(n.footerFontFamily,i.defaultFontFamily),_footerFontStyle:o(n.footerFontStyle,i.defaultFontStyle),footerFontSize:o(n.footerFontSize,i.defaultFontSize),_footerAlign:n.footerAlign,footerSpacing:n.footerSpacing,footerMarginTop:n.footerMarginTop,caretSize:n.caretSize,cornerRadius:n.cornerRadius,backgroundColor:n.backgroundColor,opacity:0,legendColorBackground:n.multiKeyBackground}})},getTitle:function(){var t=this,i=t._options,n=i.callbacks,r=n.beforeTitle.apply(t,arguments),o=n.title.apply(t,arguments),a=n.afterTitle.apply(t,arguments),s=[];return s=e(s,r),s=e(s,o),s=e(s,a)},getBeforeBody:function(){var t=this._options.callbacks.beforeBody.apply(this,arguments);return r.isArray(t)?t:void 0!==t?[t]:[]},getBody:function(t,i){var n=this,o=n._options.callbacks,a=[];return r.each(t,function(t){var r={before:[],lines:[],after:[]};e(r.before,o.beforeLabel.call(n,t,i)),e(r.lines,o.label.call(n,t,i)),e(r.after,o.afterLabel.call(n,t,i)),a.push(r)}),a},getAfterBody:function(){var t=this._options.callbacks.afterBody.apply(this,arguments);return r.isArray(t)?t:void 0!==t?[t]:[]},getFooter:function(){var t=this,i=t._options.callbacks,n=i.beforeFooter.apply(t,arguments),r=i.footer.apply(t,arguments),o=i.afterFooter.apply(t,arguments),a=[];return a=e(a,n),a=e(a,r),a=e(a,o)},update:function(t){var e,o,a=this,s=a._options,l=a._model,c=a._active,u=a._data,h=a._chartInstance;if(c.length){l.opacity=1;var d=[],p=i(c),f=[];for(e=0,o=c.length;o>e;++e)f.push(n(c[e]));s.itemSort&&(f=f.sort(s.itemSort)),c.length>1&&r.each(f,function(t){d.push(s.callbacks.labelColor.call(a,t,h))}),r.extend(l,{title:a.getTitle(f,u),beforeBody:a.getBeforeBody(f,u),body:a.getBody(f,u),afterBody:a.getAfterBody(f,u),footer:a.getFooter(f,u),x:Math.round(p.x),y:Math.round(p.y),caretPadding:r.getValueOrDefault(p.padding,2),labelColors:d});var g=a.getTooltipSize(l);a.determineAlignment(g),r.extend(l,a.getBackgroundPoint(l,g))}else a._model.opacity=0;return t&&s.custom&&s.custom.call(a,l),a},getTooltipSize:function(t){var e=this._chart.ctx,i={height:2*t.yPadding,width:0},n=t.body,o=n.reduce(function(t,e){return t+e.before.length+e.lines.length+e.after.length},0);o+=t.beforeBody.length+t.afterBody.length;var a=t.title.length,s=t.footer.length,l=t.titleFontSize,c=t.bodyFontSize,u=t.footerFontSize;i.height+=a*l,i.height+=(a-1)*t.titleSpacing,i.height+=a?t.titleMarginBottom:0,i.height+=o*c,i.height+=o?(o-1)*t.bodySpacing:0,i.height+=s?t.footerMarginTop:0,i.height+=s*u,i.height+=s?(s-1)*t.footerSpacing:0;var h=0,d=function(t){i.width=Math.max(i.width,e.measureText(t).width+h)};return e.font=r.fontString(l,t._titleFontStyle,t._titleFontFamily),r.each(t.title,d),e.font=r.fontString(c,t._bodyFontStyle,t._bodyFontFamily),r.each(t.beforeBody.concat(t.afterBody),d),h=n.length>1?c+2:0,r.each(n,function(t){r.each(t.before,d),r.each(t.lines,d),r.each(t.after,d)}),h=0,e.font=r.fontString(u,t._footerFontStyle,t._footerFontFamily),r.each(t.footer,d),i.width+=2*t.xPadding,i},determineAlignment:function(t){var e=this,i=e._model,n=e._chart,r=e._chartInstance.chartArea;i.y<t.height?i.yAlign="top":i.y>n.height-t.height&&(i.yAlign="bottom");var o,a,s,l,c,u=(r.left+r.right)/2,h=(r.top+r.bottom)/2;"center"===i.yAlign?(o=function(t){return u>=t},a=function(t){return t>u}):(o=function(e){return e<=t.width/2},a=function(e){return e>=n.width-t.width/2}),s=function(e){return e+t.width>n.width},l=function(e){return e-t.width<0},c=function(t){return h>=t?"top":"bottom"},o(i.x)?(i.xAlign="left",s(i.x)&&(i.xAlign="center",i.yAlign=c(i.y))):a(i.x)&&(i.xAlign="right",l(i.x)&&(i.xAlign="center",i.yAlign=c(i.y)))},getBackgroundPoint:function(t,e){var i={x:t.x,y:t.y},n=t.caretSize,r=t.caretPadding,o=t.cornerRadius,a=t.xAlign,s=t.yAlign,l=n+r,c=o+r;return"right"===a?i.x-=e.width:"center"===a&&(i.x-=e.width/2),"top"===s?i.y+=l:"bottom"===s?i.y-=e.height+l:i.y-=e.height/2,"center"===s?"left"===a?i.x+=l:"right"===a&&(i.x-=l):"left"===a?i.x-=c:"right"===a&&(i.x+=c),i},drawCaret:function(t,e,i,n){var o,a,s,l,c,u,h=this._view,d=this._chart.ctx,p=h.caretSize,f=h.cornerRadius,g=h.xAlign,m=h.yAlign,v=t.x,y=t.y,b=e.width,x=e.height;"center"===m?("left"===g?(o=v,a=o-p,s=o):(o=v+b,a=o+p,s=o),c=y+x/2,l=c-p,u=c+p):("left"===g?(o=v+f,a=o+p,s=a+p):"right"===g?(o=v+b-f,a=o-p,s=a-p):(a=v+b/2,o=a-p,s=a+p),"top"===m?(l=y,c=l-p,u=l):(l=y+x,c=l+p,u=l));var k=r.color(h.backgroundColor);d.fillStyle=k.alpha(i*k.alpha()).rgbString(),d.beginPath(),d.moveTo(o,l),d.lineTo(a,c),d.lineTo(s,u),d.closePath(),d.fill()},drawTitle:function(t,e,i,n){var o=e.title;if(o.length){i.textAlign=e._titleAlign,i.textBaseline="top";var a=e.titleFontSize,s=e.titleSpacing,l=r.color(e.titleFontColor);i.fillStyle=l.alpha(n*l.alpha()).rgbString(),i.font=r.fontString(a,e._titleFontStyle,e._titleFontFamily);var c,u;for(c=0,u=o.length;u>c;++c)i.fillText(o[c],t.x,t.y),t.y+=a+s,c+1===o.length&&(t.y+=e.titleMarginBottom-s)}},drawBody:function(t,e,i,n){var o=e.bodyFontSize,a=e.bodySpacing,s=e.body;i.textAlign=e._bodyAlign,i.textBaseline="top";var l=r.color(e.bodyFontColor),c=l.alpha(n*l.alpha()).rgbString();i.fillStyle=c,i.font=r.fontString(o,e._bodyFontStyle,e._bodyFontFamily);var u=0,h=function(e){i.fillText(e,t.x+u,t.y),t.y+=o+a};r.each(e.beforeBody,h);var d=s.length>1;u=d?o+2:0,r.each(s,function(a,s){r.each(a.before,h),r.each(a.lines,function(a){d&&(i.fillStyle=r.color(e.legendColorBackground).alpha(n).rgbaString(),i.fillRect(t.x,t.y,o,o),i.strokeStyle=r.color(e.labelColors[s].borderColor).alpha(n).rgbaString(),i.strokeRect(t.x,t.y,o,o),i.fillStyle=r.color(e.labelColors[s].backgroundColor).alpha(n).rgbaString(),i.fillRect(t.x+1,t.y+1,o-2,o-2),i.fillStyle=c),h(a)}),r.each(a.after,h)}),u=0,r.each(e.afterBody,h),t.y-=a},drawFooter:function(t,e,i,n){var o=e.footer;if(o.length){t.y+=e.footerMarginTop,i.textAlign=e._footerAlign,i.textBaseline="top";var a=r.color(e.footerFontColor);i.fillStyle=a.alpha(n*a.alpha()).rgbString(),i.font=r.fontString(e.footerFontSize,e._footerFontStyle,e._footerFontFamily),r.each(o,function(n){i.fillText(n,t.x,t.y),t.y+=e.footerFontSize+e.footerSpacing})}},draw:function(){var t=this._chart.ctx,e=this._view;if(0!==e.opacity){var i=this.getTooltipSize(e),n={x:e.x,y:e.y},o=Math.abs(e.opacity<.001)?0:e.opacity;if(this._options.enabled){var a=r.color(e.backgroundColor);t.fillStyle=a.alpha(o*a.alpha()).rgbString(),r.drawRoundedRectangle(t,n.x,n.y,i.width,i.height,e.cornerRadius),t.fill(),this.drawCaret(n,i,o,e.caretPadding),n.x+=e.xPadding,n.y+=e.yPadding,this.drawTitle(n,e,t,o),this.drawBody(n,e,t,o),this.drawFooter(n,e,t,o)}}}})}},{}],34:[function(t,e,i){"use strict";e.exports=function(t,e){var i=t.helpers,n=t.defaults.global;n.elements.arc={backgroundColor:n.defaultColor,borderColor:"#fff",borderWidth:2},t.elements.Arc=t.Element.extend({inLabelRange:function(t){var e=this._view;return e?Math.pow(t-e.x,2)<Math.pow(e.radius+e.hoverRadius,2):!1},inRange:function(t,e){var n=this._view;if(n){for(var r=i.getAngleFromPoint(n,{x:t,y:e}),o=r.angle,a=r.distance,s=n.startAngle,l=n.endAngle;s>l;)l+=2*Math.PI;for(;o>l;)o-=2*Math.PI;for(;s>o;)o+=2*Math.PI;var c=o>=s&&l>=o,u=a>=n.innerRadius&&a<=n.outerRadius;return c&&u}return!1},tooltipPosition:function(){var t=this._view,e=t.startAngle+(t.endAngle-t.startAngle)/2,i=(t.outerRadius-t.innerRadius)/2+t.innerRadius;return{x:t.x+Math.cos(e)*i,y:t.y+Math.sin(e)*i}},draw:function(){var t=this._chart.ctx,e=this._view,i=e.startAngle,n=e.endAngle;t.beginPath(),t.arc(e.x,e.y,e.outerRadius,i,n),t.arc(e.x,e.y,e.innerRadius,n,i,!0),t.closePath(),t.strokeStyle=e.borderColor,t.lineWidth=e.borderWidth,t.fillStyle=e.backgroundColor,t.fill(),t.lineJoin="bevel",e.borderWidth&&t.stroke()}})}},{}],35:[function(t,e,i){"use strict";e.exports=function(t){var e=t.helpers,i=t.defaults.global;t.defaults.global.elements.line={tension:.4,backgroundColor:i.defaultColor,borderWidth:3,borderColor:i.defaultColor,borderCapStyle:"butt",borderDash:[],borderDashOffset:0,borderJoinStyle:"miter",fill:!0},t.elements.Line=t.Element.extend({lineToNextPoint:function(t,e,i,n,r){var o=this,a=o._chart.ctx,s=o._view?o._view.spanGaps:!1;e._view.skip&&!s?n.call(o,t,e,i):t._view.skip&&!s?r.call(o,t,e,i):0===e._view.tension?a.lineTo(e._view.x,e._view.y):a.bezierCurveTo(t._view.controlPointNextX,t._view.controlPointNextY,e._view.controlPointPreviousX,e._view.controlPointPreviousY,e._view.x,e._view.y)},draw:function(){function t(t){a._view.skip||s._view.skip?t&&o.lineTo(n._view.scaleZero.x,n._view.scaleZero.y):o.bezierCurveTo(s._view.controlPointNextX,s._view.controlPointNextY,a._view.controlPointPreviousX,a._view.controlPointPreviousY,a._view.x,a._view.y)}var n=this,r=n._view,o=n._chart.ctx,a=n._children[0],s=n._children[n._children.length-1];o.save(),n._children.length>0&&r.fill&&(o.beginPath(),e.each(n._children,function(t,i){var a=e.previousItem(n._children,i),s=e.nextItem(n._children,i);0===i?(n._loop?o.moveTo(r.scaleZero.x,r.scaleZero.y):o.moveTo(t._view.x,r.scaleZero),t._view.skip?n._loop||o.moveTo(s._view.x,n._view.scaleZero):o.lineTo(t._view.x,t._view.y)):n.lineToNextPoint(a,t,s,function(t,e,i){n._loop?o.lineTo(n._view.scaleZero.x,n._view.scaleZero.y):(o.lineTo(t._view.x,n._view.scaleZero),o.moveTo(i._view.x,n._view.scaleZero))},function(t,e){o.lineTo(e._view.x,e._view.y)})},n),n._loop?t(!0):(o.lineTo(n._children[n._children.length-1]._view.x,r.scaleZero),o.lineTo(n._children[0]._view.x,r.scaleZero)),o.fillStyle=r.backgroundColor||i.defaultColor,o.closePath(),o.fill());var l=i.elements.line;o.lineCap=r.borderCapStyle||l.borderCapStyle,o.setLineDash&&o.setLineDash(r.borderDash||l.borderDash),o.lineDashOffset=r.borderDashOffset||l.borderDashOffset,o.lineJoin=r.borderJoinStyle||l.borderJoinStyle,o.lineWidth=r.borderWidth||l.borderWidth,o.strokeStyle=r.borderColor||i.defaultColor,o.beginPath(),e.each(n._children,function(t,i){var r=e.previousItem(n._children,i),a=e.nextItem(n._children,i);0===i?o.moveTo(t._view.x,t._view.y):n.lineToNextPoint(r,t,a,function(t,e,i){o.moveTo(i._view.x,i._view.y)},function(t,e){o.moveTo(e._view.x,e._view.y)})},n),n._loop&&n._children.length>0&&t(),o.stroke(),o.restore()}})}},{}],36:[function(t,e,i){"use strict";e.exports=function(t){var e=t.helpers,i=t.defaults.global,n=i.defaultColor;i.elements.point={radius:3,pointStyle:"circle",backgroundColor:n,borderWidth:1,borderColor:n,hitRadius:1,hoverRadius:4,hoverBorderWidth:1},t.elements.Point=t.Element.extend({inRange:function(t,e){var i=this._view;return i?Math.pow(t-i.x,2)+Math.pow(e-i.y,2)<Math.pow(i.hitRadius+i.radius,2):!1},inLabelRange:function(t){var e=this._view;return e?Math.pow(t-e.x,2)<Math.pow(e.radius+e.hitRadius,2):!1;
},tooltipPosition:function(){var t=this._view;return{x:t.x,y:t.y,padding:t.radius+t.borderWidth}},draw:function(){var t,r,o,a,s,l,c=this._view,u=this._chart.ctx,h=c.pointStyle,d=c.radius,p=c.x,f=c.y;if(!c.skip){if("object"==typeof h&&(t=h.toString(),"[object HTMLImageElement]"===t||"[object HTMLCanvasElement]"===t))return void u.drawImage(h,p-h.width/2,f-h.height/2);if(!(isNaN(d)||0>=d)){switch(u.strokeStyle=c.borderColor||n,u.lineWidth=e.getValueOrDefault(c.borderWidth,i.elements.point.borderWidth),u.fillStyle=c.backgroundColor||n,h){default:u.beginPath(),u.arc(p,f,d,0,2*Math.PI),u.closePath(),u.fill();break;case"triangle":u.beginPath(),r=3*d/Math.sqrt(3),s=r*Math.sqrt(3)/2,u.moveTo(p-r/2,f+s/3),u.lineTo(p+r/2,f+s/3),u.lineTo(p,f-2*s/3),u.closePath(),u.fill();break;case"rect":l=1/Math.SQRT2*d,u.fillRect(p-l,f-l,2*l,2*l),u.strokeRect(p-l,f-l,2*l,2*l);break;case"rectRot":l=1/Math.SQRT2*d,u.beginPath(),u.moveTo(p-l,f),u.lineTo(p,f+l),u.lineTo(p+l,f),u.lineTo(p,f-l),u.closePath(),u.fill();break;case"cross":u.beginPath(),u.moveTo(p,f+d),u.lineTo(p,f-d),u.moveTo(p-d,f),u.lineTo(p+d,f),u.closePath();break;case"crossRot":u.beginPath(),o=Math.cos(Math.PI/4)*d,a=Math.sin(Math.PI/4)*d,u.moveTo(p-o,f-a),u.lineTo(p+o,f+a),u.moveTo(p-o,f+a),u.lineTo(p+o,f-a),u.closePath();break;case"star":u.beginPath(),u.moveTo(p,f+d),u.lineTo(p,f-d),u.moveTo(p-d,f),u.lineTo(p+d,f),o=Math.cos(Math.PI/4)*d,a=Math.sin(Math.PI/4)*d,u.moveTo(p-o,f-a),u.lineTo(p+o,f+a),u.moveTo(p-o,f+a),u.lineTo(p+o,f-a),u.closePath();break;case"line":u.beginPath(),u.moveTo(p-d,f),u.lineTo(p+d,f),u.closePath();break;case"dash":u.beginPath(),u.moveTo(p,f),u.lineTo(p+d,f),u.closePath()}u.stroke()}}}})}},{}],37:[function(t,e,i){"use strict";e.exports=function(t){var e=(t.helpers,t.defaults.global);e.elements.rectangle={backgroundColor:e.defaultColor,borderWidth:0,borderColor:e.defaultColor,borderSkipped:"bottom"},t.elements.Rectangle=t.Element.extend({draw:function(){function t(t){return l[(u+t)%4]}var e=this._chart.ctx,i=this._view,n=i.width/2,r=i.x-n,o=i.x+n,a=i.base-(i.base-i.y),s=i.borderWidth/2;i.borderWidth&&(r+=s,o-=s,a+=s),e.beginPath(),e.fillStyle=i.backgroundColor,e.strokeStyle=i.borderColor,e.lineWidth=i.borderWidth;var l=[[r,i.base],[r,a],[o,a],[o,i.base]],c=["bottom","left","top","right"],u=c.indexOf(i.borderSkipped,0);-1===u&&(u=0),e.moveTo.apply(e,t(0));for(var h=1;4>h;h++)e.lineTo.apply(e,t(h));e.fill(),i.borderWidth&&e.stroke()},height:function(){var t=this._view;return t.base-t.y},inRange:function(t,e){var i=this._view;return i?i.y<i.base?t>=i.x-i.width/2&&t<=i.x+i.width/2&&e>=i.y&&e<=i.base:t>=i.x-i.width/2&&t<=i.x+i.width/2&&e>=i.base&&e<=i.y:!1},inLabelRange:function(t){var e=this._view;return e?t>=e.x-e.width/2&&t<=e.x+e.width/2:!1},tooltipPosition:function(){var t=this._view;return{x:t.x,y:t.y}}})}},{}],38:[function(t,e,i){"use strict";e.exports=function(t){var e=t.helpers,i={position:"bottom"},n=t.Scale.extend({determineDataLimits:function(){var t=this;t.minIndex=0,t.maxIndex=t.chart.data.labels.length-1;var i;void 0!==t.options.ticks.min&&(i=e.indexOf(t.chart.data.labels,t.options.ticks.min),t.minIndex=-1!==i?i:t.minIndex),void 0!==t.options.ticks.max&&(i=e.indexOf(t.chart.data.labels,t.options.ticks.max),t.maxIndex=-1!==i?i:t.maxIndex),t.min=t.chart.data.labels[t.minIndex],t.max=t.chart.data.labels[t.maxIndex]},buildTicks:function(t){var e=this;e.ticks=0===e.minIndex&&e.maxIndex===e.chart.data.labels.length-1?e.chart.data.labels:e.chart.data.labels.slice(e.minIndex,e.maxIndex+1)},getLabelForIndex:function(t,e){return this.ticks[t]},getPixelForValue:function(t,e,i,n){var r=this,o=Math.max(r.maxIndex+1-r.minIndex-(r.options.gridLines.offsetGridLines?0:1),1);if(r.isHorizontal()){var a=r.width-(r.paddingLeft+r.paddingRight),s=a/o,l=s*(e-r.minIndex)+r.paddingLeft;return r.options.gridLines.offsetGridLines&&n&&(l+=s/2),r.left+Math.round(l)}var c=r.height-(r.paddingTop+r.paddingBottom),u=c/o,h=u*(e-r.minIndex)+r.paddingTop;return r.options.gridLines.offsetGridLines&&n&&(h+=u/2),r.top+Math.round(h)},getPixelForTick:function(t,e){return this.getPixelForValue(this.ticks[t],t+this.minIndex,null,e)},getValueForPixel:function(t){var e,i=this,n=Math.max(i.ticks.length-(i.options.gridLines.offsetGridLines?0:1),1),r=i.isHorizontal(),o=r?i.width-(i.paddingLeft+i.paddingRight):i.height-(i.paddingTop+i.paddingBottom),a=o/n;return i.options.gridLines.offsetGridLines&&(t-=a/2),t-=r?i.paddingLeft:i.paddingTop,e=0>=t?0:Math.round(t/a)}});t.scaleService.registerScaleType("category",n,i)}},{}],39:[function(t,e,i){"use strict";e.exports=function(t){var e=t.helpers,i={position:"left",ticks:{callback:function(t,i,n){var r=n.length>3?n[2]-n[1]:n[1]-n[0];Math.abs(r)>1&&t!==Math.floor(t)&&(r=t-Math.floor(t));var o=e.log10(Math.abs(r)),a="";if(0!==t){var s=-1*Math.floor(o);s=Math.max(Math.min(s,20),0),a=t.toFixed(s)}else a="0";return a}}},n=t.LinearScaleBase.extend({determineDataLimits:function(){function t(t){return s?t.xAxisID===i.id:t.yAxisID===i.id}var i=this,n=i.options,r=(n.ticks,i.chart),o=r.data,a=o.datasets,s=i.isHorizontal();if(i.min=null,i.max=null,n.stacked){var l={},c=!1,u=!1;e.each(a,function(o,a){var s=r.getDatasetMeta(a);void 0===l[s.type]&&(l[s.type]={positiveValues:[],negativeValues:[]});var h=l[s.type].positiveValues,d=l[s.type].negativeValues;r.isDatasetVisible(a)&&t(s)&&e.each(o.data,function(t,e){var r=+i.getRightValue(t);isNaN(r)||s.data[e].hidden||(h[e]=h[e]||0,d[e]=d[e]||0,n.relativePoints?h[e]=100:0>r?(u=!0,d[e]+=r):(c=!0,h[e]+=r))})}),e.each(l,function(t){var n=t.positiveValues.concat(t.negativeValues),r=e.min(n),o=e.max(n);i.min=null===i.min?r:Math.min(i.min,r),i.max=null===i.max?o:Math.max(i.max,o)})}else e.each(a,function(n,o){var a=r.getDatasetMeta(o);r.isDatasetVisible(o)&&t(a)&&e.each(n.data,function(t,e){var n=+i.getRightValue(t);isNaN(n)||a.data[e].hidden||(null===i.min?i.min=n:n<i.min&&(i.min=n),null===i.max?i.max=n:n>i.max&&(i.max=n))})});this.handleTickRangeOptions()},getTickLimit:function(){var i,n=this,r=n.options.ticks;if(n.isHorizontal())i=Math.min(r.maxTicksLimit?r.maxTicksLimit:11,Math.ceil(n.width/50));else{var o=e.getValueOrDefault(r.fontSize,t.defaults.global.defaultFontSize);i=Math.min(r.maxTicksLimit?r.maxTicksLimit:11,Math.ceil(n.height/(2*o)))}return i},handleDirectionalChanges:function(){this.isHorizontal()||this.ticks.reverse()},getLabelForIndex:function(t,e){return+this.getRightValue(this.chart.data.datasets[e].data[t])},getPixelForValue:function(t,e,i,n){var r,o,a=this,s=a.paddingLeft,l=a.paddingBottom,c=a.start,u=+a.getRightValue(t),h=a.end-c;return a.isHorizontal()?(o=a.width-(s+a.paddingRight),r=a.left+o/h*(u-c),Math.round(r+s)):(o=a.height-(a.paddingTop+l),r=a.bottom-l-o/h*(u-c),Math.round(r))},getValueForPixel:function(t){var e=this,i=e.isHorizontal(),n=e.paddingLeft,r=e.paddingBottom,o=i?e.width-(n+e.paddingRight):e.height-(e.paddingTop+r),a=(i?t-e.left-n:e.bottom-r-t)/o;return e.start+(e.end-e.start)*a},getPixelForTick:function(t,e){return this.getPixelForValue(this.ticksAsNumbers[t],null,null,e)}});t.scaleService.registerScaleType("linear",n,i)}},{}],40:[function(t,e,i){"use strict";e.exports=function(t){var e=t.helpers,i=e.noop;t.LinearScaleBase=t.Scale.extend({handleTickRangeOptions:function(){var t=this,i=t.options,n=i.ticks;if(n.beginAtZero){var r=e.sign(t.min),o=e.sign(t.max);0>r&&0>o?t.max=0:r>0&&o>0&&(t.min=0)}void 0!==n.min?t.min=n.min:void 0!==n.suggestedMin&&(t.min=Math.min(t.min,n.suggestedMin)),void 0!==n.max?t.max=n.max:void 0!==n.suggestedMax&&(t.max=Math.max(t.max,n.suggestedMax)),t.min===t.max&&(t.max++,n.beginAtZero||t.min--)},getTickLimit:i,handleDirectionalChanges:i,buildTicks:function(){var t=this,i=t.options,n=i.ticks,r=e.getValueOrDefault,o=(t.isHorizontal(),t.ticks=[]),a=t.getTickLimit();a=Math.max(2,a);var s,l=n.fixedStepSize&&n.fixedStepSize>0||n.stepSize&&n.stepSize>0;if(l)s=r(n.fixedStepSize,n.stepSize);else{var c=e.niceNum(t.max-t.min,!1);s=e.niceNum(c/(a-1),!0)}var u=Math.floor(t.min/s)*s,h=Math.ceil(t.max/s)*s,d=(h-u)/s;d=e.almostEquals(d,Math.round(d),s/1e3)?Math.round(d):Math.ceil(d),o.push(void 0!==n.min?n.min:u);for(var p=1;d>p;++p)o.push(u+p*s);o.push(void 0!==n.max?n.max:h),t.handleDirectionalChanges(),t.max=e.max(o),t.min=e.min(o),n.reverse?(o.reverse(),t.start=t.max,t.end=t.min):(t.start=t.min,t.end=t.max)},convertTicksToLabels:function(){var e=this;e.ticksAsNumbers=e.ticks.slice(),e.zeroLineIndex=e.ticks.indexOf(0),t.Scale.prototype.convertTicksToLabels.call(e)}})}},{}],41:[function(t,e,i){"use strict";e.exports=function(t){var e=t.helpers,i={position:"left",ticks:{callback:function(t,i,n){var r=t/Math.pow(10,Math.floor(e.log10(t)));return 1===r||2===r||5===r||0===i||i===n.length-1?t.toExponential():""}}},n=t.Scale.extend({determineDataLimits:function(){function t(t){return c?t.xAxisID===i.id:t.yAxisID===i.id}var i=this,n=i.options,r=n.ticks,o=i.chart,a=o.data,s=a.datasets,l=e.getValueOrDefault,c=i.isHorizontal();if(i.min=null,i.max=null,n.stacked){var u={};e.each(s,function(r,a){var s=o.getDatasetMeta(a);o.isDatasetVisible(a)&&t(s)&&(void 0===u[s.type]&&(u[s.type]=[]),e.each(r.data,function(t,e){var r=u[s.type],o=+i.getRightValue(t);isNaN(o)||s.data[e].hidden||(r[e]=r[e]||0,n.relativePoints?r[e]=100:r[e]+=o)}))}),e.each(u,function(t){var n=e.min(t),r=e.max(t);i.min=null===i.min?n:Math.min(i.min,n),i.max=null===i.max?r:Math.max(i.max,r)})}else e.each(s,function(n,r){var a=o.getDatasetMeta(r);o.isDatasetVisible(r)&&t(a)&&e.each(n.data,function(t,e){var n=+i.getRightValue(t);isNaN(n)||a.data[e].hidden||(null===i.min?i.min=n:n<i.min&&(i.min=n),null===i.max?i.max=n:n>i.max&&(i.max=n))})});i.min=l(r.min,i.min),i.max=l(r.max,i.max),i.min===i.max&&(0!==i.min&&null!==i.min?(i.min=Math.pow(10,Math.floor(e.log10(i.min))-1),i.max=Math.pow(10,Math.floor(e.log10(i.max))+1)):(i.min=1,i.max=10))},buildTicks:function(){for(var t=this,i=t.options,n=i.ticks,r=e.getValueOrDefault,o=t.ticks=[],a=r(n.min,Math.pow(10,Math.floor(e.log10(t.min))));a<t.max;){o.push(a);var s=Math.floor(e.log10(a)),l=Math.floor(a/Math.pow(10,s))+1;10===l&&(l=1,++s),a=l*Math.pow(10,s)}var c=r(n.max,a);o.push(c),t.isHorizontal()||o.reverse(),t.max=e.max(o),t.min=e.min(o),n.reverse?(o.reverse(),t.start=t.max,t.end=t.min):(t.start=t.min,t.end=t.max)},convertTicksToLabels:function(){this.tickValues=this.ticks.slice(),t.Scale.prototype.convertTicksToLabels.call(this)},getLabelForIndex:function(t,e){return+this.getRightValue(this.chart.data.datasets[e].data[t])},getPixelForTick:function(t,e){return this.getPixelForValue(this.tickValues[t],null,null,e)},getPixelForValue:function(t,i,n,r){var o,a,s=this,l=s.start,c=+s.getRightValue(t),u=e.log10(s.end)-e.log10(l),h=s.paddingTop,d=s.paddingBottom,p=s.paddingLeft;return s.isHorizontal()?0===c?a=s.left+p:(o=s.width-(p+s.paddingRight),a=s.left+o/u*(e.log10(c)-e.log10(l)),a+=p):0===c?a=s.top+h:(o=s.height-(h+d),a=s.bottom-d-o/u*(e.log10(c)-e.log10(l))),a},getValueForPixel:function(t){var i,n,r=this,o=e.log10(r.end)-e.log10(r.start);return r.isHorizontal()?(n=r.width-(r.paddingLeft+r.paddingRight),i=r.start*Math.pow(10,(t-r.left-r.paddingLeft)*o/n)):(n=r.height-(r.paddingTop+r.paddingBottom),i=Math.pow(10,(r.bottom-r.paddingBottom-t)*o/n)/r.start),i}});t.scaleService.registerScaleType("logarithmic",n,i)}},{}],42:[function(t,e,i){"use strict";e.exports=function(t){var e=t.helpers,i=t.defaults.global,n={display:!0,animate:!0,lineArc:!1,position:"chartArea",angleLines:{display:!0,color:"rgba(0, 0, 0, 0.1)",lineWidth:1},ticks:{showLabelBackdrop:!0,backdropColor:"rgba(255,255,255,0.75)",backdropPaddingY:2,backdropPaddingX:2},pointLabels:{fontSize:10,callback:function(t){return t}}},r=t.LinearScaleBase.extend({getValueCount:function(){return this.chart.data.labels.length},setDimensions:function(){var t=this,n=t.options,r=n.ticks;t.width=t.maxWidth,t.height=t.maxHeight,t.xCenter=Math.round(t.width/2),t.yCenter=Math.round(t.height/2);var o=e.min([t.height,t.width]),a=e.getValueOrDefault(r.fontSize,i.defaultFontSize);t.drawingArea=n.display?o/2-(a/2+r.backdropPaddingY):o/2},determineDataLimits:function(){var t=this,i=t.chart;t.min=null,t.max=null,e.each(i.data.datasets,function(n,r){if(i.isDatasetVisible(r)){var o=i.getDatasetMeta(r);e.each(n.data,function(e,i){var n=+t.getRightValue(e);isNaN(n)||o.data[i].hidden||(null===t.min?t.min=n:n<t.min&&(t.min=n),null===t.max?t.max=n:n>t.max&&(t.max=n))})}}),t.handleTickRangeOptions()},getTickLimit:function(){var t=this.options.ticks,n=e.getValueOrDefault(t.fontSize,i.defaultFontSize);return Math.min(t.maxTicksLimit?t.maxTicksLimit:11,Math.ceil(this.drawingArea/(1.5*n)))},convertTicksToLabels:function(){var e=this;t.LinearScaleBase.prototype.convertTicksToLabels.call(e),e.pointLabels=e.chart.data.labels.map(e.options.pointLabels.callback,e)},getLabelForIndex:function(t,e){return+this.getRightValue(this.chart.data.datasets[e].data[t])},fit:function(){var t,n,r,o,a,s,l,c,u,h,d,p,f=this.options.pointLabels,g=e.getValueOrDefault(f.fontSize,i.defaultFontSize),m=e.getValueOrDefault(f.fontStyle,i.defaultFontStyle),v=e.getValueOrDefault(f.fontFamily,i.defaultFontFamily),y=e.fontString(g,m,v),b=e.min([this.height/2-g-5,this.width/2]),x=this.width,k=0;for(this.ctx.font=y,n=0;n<this.getValueCount();n++)t=this.getPointPosition(n,b),r=this.ctx.measureText(this.pointLabels[n]?this.pointLabels[n]:"").width+5,0===n||n===this.getValueCount()/2?(o=r/2,t.x+o>x&&(x=t.x+o,a=n),t.x-o<k&&(k=t.x-o,l=n)):n<this.getValueCount()/2?t.x+r>x&&(x=t.x+r,a=n):n>this.getValueCount()/2&&t.x-r<k&&(k=t.x-r,l=n);u=k,h=Math.ceil(x-this.width),s=this.getIndexAngle(a),c=this.getIndexAngle(l),d=h/Math.sin(s+Math.PI/2),p=u/Math.sin(c+Math.PI/2),d=e.isNumber(d)?d:0,p=e.isNumber(p)?p:0,this.drawingArea=Math.round(b-(p+d)/2),this.setCenterPoint(p,d)},setCenterPoint:function(t,e){var i=this,n=i.width-e-i.drawingArea,r=t+i.drawingArea;i.xCenter=Math.round((r+n)/2+i.left),i.yCenter=Math.round(i.height/2+i.top)},getIndexAngle:function(t){var e=2*Math.PI/this.getValueCount();return t*e-Math.PI/2},getDistanceFromCenterForValue:function(t){var e=this;if(null===t)return 0;var i=e.drawingArea/(e.max-e.min);return e.options.reverse?(e.max-t)*i:(t-e.min)*i},getPointPosition:function(t,e){var i=this,n=i.getIndexAngle(t);return{x:Math.round(Math.cos(n)*e)+i.xCenter,y:Math.round(Math.sin(n)*e)+i.yCenter}},getPointPositionForValue:function(t,e){return this.getPointPosition(t,this.getDistanceFromCenterForValue(e))},getBasePosition:function(){var t=this,e=t.min,i=t.max;return t.getPointPositionForValue(0,t.beginAtZero?0:0>e&&0>i?i:e>0&&i>0?e:0)},draw:function(){var t=this,n=t.options,r=n.gridLines,o=n.ticks,a=n.angleLines,s=n.pointLabels,l=e.getValueOrDefault;if(n.display){var c=t.ctx,u=l(o.fontSize,i.defaultFontSize),h=l(o.fontStyle,i.defaultFontStyle),d=l(o.fontFamily,i.defaultFontFamily),p=e.fontString(u,h,d);if(e.each(t.ticks,function(a,s){if(s>0||n.reverse){var h=t.getDistanceFromCenterForValue(t.ticksAsNumbers[s]),d=t.yCenter-h;if(r.display&&0!==s)if(c.strokeStyle=e.getValueAtIndexOrDefault(r.color,s-1),c.lineWidth=e.getValueAtIndexOrDefault(r.lineWidth,s-1),n.lineArc)c.beginPath(),c.arc(t.xCenter,t.yCenter,h,0,2*Math.PI),c.closePath(),c.stroke();else{c.beginPath();for(var f=0;f<t.getValueCount();f++){var g=t.getPointPosition(f,h);0===f?c.moveTo(g.x,g.y):c.lineTo(g.x,g.y)}c.closePath(),c.stroke()}if(o.display){var m=l(o.fontColor,i.defaultFontColor);if(c.font=p,o.showLabelBackdrop){var v=c.measureText(a).width;c.fillStyle=o.backdropColor,c.fillRect(t.xCenter-v/2-o.backdropPaddingX,d-u/2-o.backdropPaddingY,v+2*o.backdropPaddingX,u+2*o.backdropPaddingY)}c.textAlign="center",c.textBaseline="middle",c.fillStyle=m,c.fillText(a,t.xCenter,d)}}}),!n.lineArc){c.lineWidth=a.lineWidth,c.strokeStyle=a.color;for(var f=t.getDistanceFromCenterForValue(n.reverse?t.min:t.max),g=l(s.fontSize,i.defaultFontSize),m=l(s.fontStyle,i.defaultFontStyle),v=l(s.fontFamily,i.defaultFontFamily),y=e.fontString(g,m,v),b=t.getValueCount()-1;b>=0;b--){if(a.display){var x=t.getPointPosition(b,f);c.beginPath(),c.moveTo(t.xCenter,t.yCenter),c.lineTo(x.x,x.y),c.stroke(),c.closePath()}var k=t.getPointPosition(b,f+5),w=l(s.fontColor,i.defaultFontColor);c.font=y,c.fillStyle=w;var _=t.pointLabels,S=_.length,C=_.length/2,D=C/2,P=D>b||b>S-D,M=b===D||b===S-D;0===b?c.textAlign="center":b===C?c.textAlign="center":C>b?c.textAlign="left":c.textAlign="right",M?c.textBaseline="middle":P?c.textBaseline="bottom":c.textBaseline="top",c.fillText(_[b]?_[b]:"",k.x,k.y)}}}}});t.scaleService.registerScaleType("radialLinear",r,n)}},{}],43:[function(t,e,i){"use strict";var n=t(1);n="function"==typeof n?n:window.moment,e.exports=function(t){var e=t.helpers,i={units:[{name:"millisecond",steps:[1,2,5,10,20,50,100,250,500]},{name:"second",steps:[1,2,5,10,30]},{name:"minute",steps:[1,2,5,10,30]},{name:"hour",steps:[1,2,3,6,12]},{name:"day",steps:[1,2,5]},{name:"week",maxStep:4},{name:"month",maxStep:3},{name:"quarter",maxStep:4},{name:"year",maxStep:!1}]},r={position:"bottom",time:{parser:!1,format:!1,unit:!1,round:!1,displayFormat:!1,isoWeekday:!1,displayFormats:{millisecond:"h:mm:ss.SSS a",second:"h:mm:ss a",minute:"h:mm:ss a",hour:"MMM D, hA",day:"ll",week:"ll",month:"MMM YYYY",quarter:"[Q]Q - YYYY",year:"YYYY"}},ticks:{autoSkip:!1}},o=t.Scale.extend({initialize:function(){if(!n)throw new Error("Chart.js - Moment.js could not be found! You must include it before Chart.js to use the time scale. Download at https://momentjs.com");t.Scale.prototype.initialize.call(this)},getLabelMoment:function(t,e){return this.labelMoments[t][e]},getMomentStartOf:function(t){var e=this;return"week"===e.options.time.unit&&e.options.time.isoWeekday!==!1?t.clone().startOf("isoWeek").isoWeekday(e.options.time.isoWeekday):t.clone().startOf(e.tickUnit)},determineDataLimits:function(){var t=this;t.labelMoments=[];var i=[];t.chart.data.labels&&t.chart.data.labels.length>0?(e.each(t.chart.data.labels,function(e,n){var r=t.parseTime(e);r.isValid()&&(t.options.time.round&&r.startOf(t.options.time.round),i.push(r))},t),t.firstTick=n.min.call(t,i),t.lastTick=n.max.call(t,i)):(t.firstTick=null,t.lastTick=null),e.each(t.chart.data.datasets,function(r,o){var a=[],s=t.chart.isDatasetVisible(o);"object"==typeof r.data[0]&&null!==r.data[0]?e.each(r.data,function(e,i){var r=t.parseTime(t.getRightValue(e));r.isValid()&&(t.options.time.round&&r.startOf(t.options.time.round),a.push(r),s&&(t.firstTick=null!==t.firstTick?n.min(t.firstTick,r):r,t.lastTick=null!==t.lastTick?n.max(t.lastTick,r):r))},t):a=i,t.labelMoments.push(a)},t),t.options.time.min&&(t.firstTick=t.parseTime(t.options.time.min)),t.options.time.max&&(t.lastTick=t.parseTime(t.options.time.max)),t.firstTick=(t.firstTick||n()).clone(),t.lastTick=(t.lastTick||n()).clone()},buildTicks:function(n){var r=this;r.ctx.save();var o=e.getValueOrDefault(r.options.ticks.fontSize,t.defaults.global.defaultFontSize),a=e.getValueOrDefault(r.options.ticks.fontStyle,t.defaults.global.defaultFontStyle),s=e.getValueOrDefault(r.options.ticks.fontFamily,t.defaults.global.defaultFontFamily),l=e.fontString(o,a,s);if(r.ctx.font=l,r.ticks=[],r.unitScale=1,r.scaleSizeInUnits=0,r.options.time.unit)r.tickUnit=r.options.time.unit||"day",r.displayFormat=r.options.time.displayFormats[r.tickUnit],r.scaleSizeInUnits=r.lastTick.diff(r.firstTick,r.tickUnit,!0),r.unitScale=e.getValueOrDefault(r.options.time.unitStepSize,1);else{var c=r.isHorizontal()?r.width-(r.paddingLeft+r.paddingRight):r.height-(r.paddingTop+r.paddingBottom),u=r.tickFormatFunction(r.firstTick,0,[]),h=r.ctx.measureText(u).width,d=Math.cos(e.toRadians(r.options.ticks.maxRotation)),p=Math.sin(e.toRadians(r.options.ticks.maxRotation));h=h*d+o*p;var f=c/h;r.tickUnit="millisecond",r.scaleSizeInUnits=r.lastTick.diff(r.firstTick,r.tickUnit,!0),r.displayFormat=r.options.time.displayFormats[r.tickUnit];for(var g=0,m=i.units[g];g<i.units.length;){if(r.unitScale=1,e.isArray(m.steps)&&Math.ceil(r.scaleSizeInUnits/f)<e.max(m.steps)){for(var v=0;v<m.steps.length;++v)if(m.steps[v]>=Math.ceil(r.scaleSizeInUnits/f)){r.unitScale=e.getValueOrDefault(r.options.time.unitStepSize,m.steps[v]);break}break}if(m.maxStep===!1||Math.ceil(r.scaleSizeInUnits/f)<m.maxStep){r.unitScale=e.getValueOrDefault(r.options.time.unitStepSize,Math.ceil(r.scaleSizeInUnits/f));break}++g,m=i.units[g],r.tickUnit=m.name;var y=r.firstTick.diff(r.getMomentStartOf(r.firstTick),r.tickUnit,!0),b=r.getMomentStartOf(r.lastTick.clone().add(1,r.tickUnit)).diff(r.lastTick,r.tickUnit,!0);r.scaleSizeInUnits=r.lastTick.diff(r.firstTick,r.tickUnit,!0)+y+b,r.displayFormat=r.options.time.displayFormats[m.name]}}var x;if(r.options.time.min?x=r.getMomentStartOf(r.firstTick):(r.firstTick=r.getMomentStartOf(r.firstTick),x=r.firstTick),!r.options.time.max){var k=r.getMomentStartOf(r.lastTick);0!==k.diff(r.lastTick,r.tickUnit,!0)&&(r.lastTick=r.getMomentStartOf(r.lastTick.add(1,r.tickUnit)))}r.smallestLabelSeparation=r.width,e.each(r.chart.data.datasets,function(t,e){for(var i=1;i<r.labelMoments[e].length;i++)r.smallestLabelSeparation=Math.min(r.smallestLabelSeparation,r.labelMoments[e][i].diff(r.labelMoments[e][i-1],r.tickUnit,!0))},r),r.options.time.displayFormat&&(r.displayFormat=r.options.time.displayFormat),r.ticks.push(r.firstTick.clone());for(var w=1;w<=r.scaleSizeInUnits;++w){var _=x.clone().add(w,r.tickUnit);if(r.options.time.max&&_.diff(r.lastTick,r.tickUnit,!0)>=0)break;w%r.unitScale===0&&r.ticks.push(_)}var S=r.ticks[r.ticks.length-1].diff(r.lastTick,r.tickUnit);(0!==S||0===r.scaleSizeInUnits)&&(r.options.time.max?(r.ticks.push(r.lastTick.clone()),r.scaleSizeInUnits=r.lastTick.diff(r.ticks[0],r.tickUnit,!0)):(r.ticks.push(r.lastTick.clone()),r.scaleSizeInUnits=r.lastTick.diff(r.firstTick,r.tickUnit,!0))),r.ctx.restore()},getLabelForIndex:function(t,e){var i=this,n=i.chart.data.labels&&t<i.chart.data.labels.length?i.chart.data.labels[t]:"";return"object"==typeof i.chart.data.datasets[e].data[0]&&(n=i.getRightValue(i.chart.data.datasets[e].data[t])),i.options.time.tooltipFormat&&(n=i.parseTime(n).format(i.options.time.tooltipFormat)),n},tickFormatFunction:function(t,i,n){var r=t.format(this.displayFormat),o=this.options.ticks,a=e.getValueOrDefault(o.callback,o.userCallback);return a?a(r,i,n):r},convertTicksToLabels:function(){var t=this;t.tickMoments=t.ticks,t.ticks=t.ticks.map(t.tickFormatFunction,t)},getPixelForValue:function(t,e,i,n){var r=this,o=t&&t.isValid&&t.isValid()?t:r.getLabelMoment(i,e);if(o){var a=o.diff(r.firstTick,r.tickUnit,!0),s=a/r.scaleSizeInUnits;if(r.isHorizontal()){var l=r.width-(r.paddingLeft+r.paddingRight),c=(l/Math.max(r.ticks.length-1,1),l*s+r.paddingLeft);return r.left+Math.round(c)}var u=r.height-(r.paddingTop+r.paddingBottom),h=(u/Math.max(r.ticks.length-1,1),u*s+r.paddingTop);return r.top+Math.round(h)}},getPixelForTick:function(t,e){return this.getPixelForValue(this.tickMoments[t],null,null,e)},getValueForPixel:function(t){var e=this,i=e.isHorizontal()?e.width-(e.paddingLeft+e.paddingRight):e.height-(e.paddingTop+e.paddingBottom),r=(t-(e.isHorizontal()?e.left+e.paddingLeft:e.top+e.paddingTop))/i;return r*=e.scaleSizeInUnits,e.firstTick.clone().add(n.duration(r,e.tickUnit).asSeconds(),"seconds")},parseTime:function(t){var e=this;return"string"==typeof e.options.time.parser?n(t,e.options.time.parser):"function"==typeof e.options.time.parser?e.options.time.parser(t):"function"==typeof t.getMonth||"number"==typeof t?n(t):t.isValid&&t.isValid()?t:"string"!=typeof e.options.time.format&&e.options.time.format.call?(console.warn("options.time.format is deprecated and replaced by options.time.parser. See http://nnnick.github.io/Chart.js/docs-v2/#scales-time-scale"),e.options.time.format(t)):n(t,e.options.time.format)}});t.scaleService.registerScaleType("time",o,r)}},{1:1}]},{},[7])(7)}),!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define([],e):"object"==typeof exports?exports.Handlebars=e():t.Handlebars=e()}(this,function(){return function(t){function e(n){if(i[n])return i[n].exports;var r=i[n]={exports:{},id:n,loaded:!1};return t[n].call(r.exports,r,r.exports,e),r.loaded=!0,r.exports}var i={};return e.m=t,e.c=i,e.p="",e(0)}([function(t,e,i){"use strict";function n(){var t=v();return t.compile=function(e,i){return u.compile(e,i,t)},t.precompile=function(e,i){return u.precompile(e,i,t)},t.AST=l["default"],t.Compiler=u.Compiler,t.JavaScriptCompiler=d["default"],t.Parser=c.parser,t.parse=c.parse,t}var r=i(1)["default"];e.__esModule=!0;var o=i(2),a=r(o),s=i(21),l=r(s),c=i(22),u=i(27),h=i(28),d=r(h),p=i(25),f=r(p),g=i(20),m=r(g),v=a["default"].create,y=n();y.create=n,m["default"](y),y.Visitor=f["default"],y["default"]=y,e["default"]=y,t.exports=e["default"]},function(t,e){"use strict";e["default"]=function(t){return t&&t.__esModule?t:{"default":t}},e.__esModule=!0},function(t,e,i){"use strict";function n(){var t=new s.HandlebarsEnvironment;return p.extend(t,s),t.SafeString=c["default"],t.Exception=h["default"],t.Utils=p,t.escapeExpression=p.escapeExpression,t.VM=g,t.template=function(e){return g.template(e,t)},t}var r=i(3)["default"],o=i(1)["default"];e.__esModule=!0;var a=i(4),s=r(a),l=i(18),c=o(l),u=i(6),h=o(u),d=i(5),p=r(d),f=i(19),g=r(f),m=i(20),v=o(m),y=n();y.create=n,v["default"](y),y["default"]=y,e["default"]=y,t.exports=e["default"]},function(t,e){"use strict";e["default"]=function(t){if(t&&t.__esModule)return t;var e={};if(null!=t)for(var i in t)Object.prototype.hasOwnProperty.call(t,i)&&(e[i]=t[i]);return e["default"]=t,e},e.__esModule=!0},function(t,e,i){"use strict";function n(t,e,i){this.helpers=t||{},this.partials=e||{},this.decorators=i||{},l.registerDefaultHelpers(this),c.registerDefaultDecorators(this)}var r=i(1)["default"];e.__esModule=!0,e.HandlebarsEnvironment=n;var o=i(5),a=i(6),s=r(a),l=i(7),c=i(15),u=i(17),h=r(u),d="4.0.5";e.VERSION=d;var p=7;e.COMPILER_REVISION=p;var f={1:"<= 1.0.rc.2",2:"== 1.0.0-rc.3",3:"== 1.0.0-rc.4",4:"== 1.x.x",5:"== 2.0.0-alpha.x",6:">= 2.0.0-beta.1",7:">= 4.0.0"};e.REVISION_CHANGES=f;var g="[object Object]";n.prototype={constructor:n,logger:h["default"],log:h["default"].log,registerHelper:function(t,e){if(o.toString.call(t)===g){if(e)throw new s["default"]("Arg not supported with multiple helpers");o.extend(this.helpers,t)}else this.helpers[t]=e},unregisterHelper:function(t){delete this.helpers[t]},registerPartial:function(t,e){if(o.toString.call(t)===g)o.extend(this.partials,t);else{if("undefined"==typeof e)throw new s["default"]('Attempting to register a partial called "'+t+'" as undefined');this.partials[t]=e}},unregisterPartial:function(t){delete this.partials[t]},registerDecorator:function(t,e){if(o.toString.call(t)===g){if(e)throw new s["default"]("Arg not supported with multiple decorators");o.extend(this.decorators,t)}else this.decorators[t]=e},unregisterDecorator:function(t){delete this.decorators[t]}};var m=h["default"].log;e.log=m,e.createFrame=o.createFrame,e.logger=h["default"]},function(t,e){"use strict";function i(t){return u[t]}function n(t){for(var e=1;e<arguments.length;e++)for(var i in arguments[e])Object.prototype.hasOwnProperty.call(arguments[e],i)&&(t[i]=arguments[e][i]);return t}function r(t,e){for(var i=0,n=t.length;n>i;i++)if(t[i]===e)return i;return-1}function o(t){if("string"!=typeof t){if(t&&t.toHTML)return t.toHTML();if(null==t)return"";if(!t)return t+"";t=""+t}return d.test(t)?t.replace(h,i):t}function a(t){return t||0===t?!(!g(t)||0!==t.length):!0}function s(t){var e=n({},t);return e._parent=t,e}function l(t,e){return t.path=e,t}function c(t,e){return(t?t+".":"")+e}e.__esModule=!0,e.extend=n,e.indexOf=r,e.escapeExpression=o,e.isEmpty=a,e.createFrame=s,e.blockParams=l,e.appendContextPath=c;var u={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#x27;","`":"&#x60;","=":"&#x3D;"},h=/[&<>"'`=]/g,d=/[&<>"'`=]/,p=Object.prototype.toString;e.toString=p;var f=function(t){return"function"==typeof t};f(/x/)&&(e.isFunction=f=function(t){return"function"==typeof t&&"[object Function]"===p.call(t)}),e.isFunction=f;var g=Array.isArray||function(t){return t&&"object"==typeof t?"[object Array]"===p.call(t):!1};e.isArray=g},function(t,e){"use strict";function i(t,e){var r=e&&e.loc,o=void 0,a=void 0;r&&(o=r.start.line,a=r.start.column,t+=" - "+o+":"+a);for(var s=Error.prototype.constructor.call(this,t),l=0;l<n.length;l++)this[n[l]]=s[n[l]];Error.captureStackTrace&&Error.captureStackTrace(this,i),r&&(this.lineNumber=o,this.column=a)}e.__esModule=!0;var n=["description","fileName","lineNumber","message","name","number","stack"];i.prototype=new Error,e["default"]=i,t.exports=e["default"]},function(t,e,i){"use strict";function n(t){a["default"](t),l["default"](t),u["default"](t),d["default"](t),f["default"](t),m["default"](t),y["default"](t)}var r=i(1)["default"];e.__esModule=!0,e.registerDefaultHelpers=n;var o=i(8),a=r(o),s=i(9),l=r(s),c=i(10),u=r(c),h=i(11),d=r(h),p=i(12),f=r(p),g=i(13),m=r(g),v=i(14),y=r(v)},function(t,e,i){"use strict";e.__esModule=!0;var n=i(5);e["default"]=function(t){t.registerHelper("blockHelperMissing",function(e,i){var r=i.inverse,o=i.fn;if(e===!0)return o(this);if(e===!1||null==e)return r(this);if(n.isArray(e))return e.length>0?(i.ids&&(i.ids=[i.name]),t.helpers.each(e,i)):r(this);if(i.data&&i.ids){var a=n.createFrame(i.data);a.contextPath=n.appendContextPath(i.data.contextPath,i.name),i={data:a}}return o(e,i)})},t.exports=e["default"]},function(t,e,i){"use strict";var n=i(1)["default"];e.__esModule=!0;var r=i(5),o=i(6),a=n(o);e["default"]=function(t){t.registerHelper("each",function(t,e){function i(e,i,o){c&&(c.key=e,c.index=i,c.first=0===i,c.last=!!o,u&&(c.contextPath=u+e)),l+=n(t[e],{data:c,blockParams:r.blockParams([t[e],e],[u+e,null])})}if(!e)throw new a["default"]("Must pass iterator to #each");var n=e.fn,o=e.inverse,s=0,l="",c=void 0,u=void 0;if(e.data&&e.ids&&(u=r.appendContextPath(e.data.contextPath,e.ids[0])+"."),r.isFunction(t)&&(t=t.call(this)),e.data&&(c=r.createFrame(e.data)),t&&"object"==typeof t)if(r.isArray(t))for(var h=t.length;h>s;s++)s in t&&i(s,s,s===t.length-1);else{var d=void 0;for(var p in t)t.hasOwnProperty(p)&&(void 0!==d&&i(d,s-1),d=p,s++);void 0!==d&&i(d,s-1,!0)}return 0===s&&(l=o(this)),l})},t.exports=e["default"]},function(t,e,i){"use strict";var n=i(1)["default"];e.__esModule=!0;var r=i(6),o=n(r);e["default"]=function(t){t.registerHelper("helperMissing",function(){if(1!==arguments.length)throw new o["default"]('Missing helper: "'+arguments[arguments.length-1].name+'"')})},t.exports=e["default"]},function(t,e,i){"use strict";e.__esModule=!0;var n=i(5);e["default"]=function(t){t.registerHelper("if",function(t,e){return n.isFunction(t)&&(t=t.call(this)),!e.hash.includeZero&&!t||n.isEmpty(t)?e.inverse(this):e.fn(this)}),t.registerHelper("unless",function(e,i){return t.helpers["if"].call(this,e,{fn:i.inverse,inverse:i.fn,hash:i.hash})})},t.exports=e["default"]},function(t,e){"use strict";e.__esModule=!0,e["default"]=function(t){t.registerHelper("log",function(){for(var e=[void 0],i=arguments[arguments.length-1],n=0;n<arguments.length-1;n++)e.push(arguments[n]);var r=1;null!=i.hash.level?r=i.hash.level:i.data&&null!=i.data.level&&(r=i.data.level),e[0]=r,t.log.apply(t,e)})},t.exports=e["default"]},function(t,e){"use strict";e.__esModule=!0,e["default"]=function(t){t.registerHelper("lookup",function(t,e){return t&&t[e]})},t.exports=e["default"]},function(t,e,i){"use strict";e.__esModule=!0;var n=i(5);e["default"]=function(t){t.registerHelper("with",function(t,e){n.isFunction(t)&&(t=t.call(this));var i=e.fn;if(n.isEmpty(t))return e.inverse(this);var r=e.data;return e.data&&e.ids&&(r=n.createFrame(e.data),r.contextPath=n.appendContextPath(e.data.contextPath,e.ids[0])),i(t,{data:r,blockParams:n.blockParams([t],[r&&r.contextPath])})})},t.exports=e["default"]},function(t,e,i){"use strict";function n(t){a["default"](t)}var r=i(1)["default"];e.__esModule=!0,e.registerDefaultDecorators=n;var o=i(16),a=r(o)},function(t,e,i){"use strict";e.__esModule=!0;var n=i(5);e["default"]=function(t){t.registerDecorator("inline",function(t,e,i,r){var o=t;return e.partials||(e.partials={},
o=function(r,o){var a=i.partials;i.partials=n.extend({},a,e.partials);var s=t(r,o);return i.partials=a,s}),e.partials[r.args[0]]=r.fn,o})},t.exports=e["default"]},function(t,e,i){"use strict";e.__esModule=!0;var n=i(5),r={methodMap:["debug","info","warn","error"],level:"info",lookupLevel:function(t){if("string"==typeof t){var e=n.indexOf(r.methodMap,t.toLowerCase());t=e>=0?e:parseInt(t,10)}return t},log:function(t){if(t=r.lookupLevel(t),"undefined"!=typeof console&&r.lookupLevel(r.level)<=t){var e=r.methodMap[t];console[e]||(e="log");for(var i=arguments.length,n=Array(i>1?i-1:0),o=1;i>o;o++)n[o-1]=arguments[o];console[e].apply(console,n)}}};e["default"]=r,t.exports=e["default"]},function(t,e){"use strict";function i(t){this.string=t}e.__esModule=!0,i.prototype.toString=i.prototype.toHTML=function(){return""+this.string},e["default"]=i,t.exports=e["default"]},function(t,e,i){"use strict";function n(t){var e=t&&t[0]||1,i=v.COMPILER_REVISION;if(e!==i){if(i>e){var n=v.REVISION_CHANGES[i],r=v.REVISION_CHANGES[e];throw new m["default"]("Template was precompiled with an older version of Handlebars than the current runtime. Please update your precompiler to a newer version ("+n+") or downgrade your runtime to an older version ("+r+").")}throw new m["default"]("Template was precompiled with a newer version of Handlebars than the current runtime. Please update your runtime to a newer version ("+t[1]+").")}}function r(t,e){function i(i,n,r){r.hash&&(n=f.extend({},n,r.hash),r.ids&&(r.ids[0]=!0)),i=e.VM.resolvePartial.call(this,i,n,r);var o=e.VM.invokePartial.call(this,i,n,r);if(null==o&&e.compile&&(r.partials[r.name]=e.compile(i,t.compilerOptions,e),o=r.partials[r.name](n,r)),null!=o){if(r.indent){for(var a=o.split("\n"),s=0,l=a.length;l>s&&(a[s]||s+1!==l);s++)a[s]=r.indent+a[s];o=a.join("\n")}return o}throw new m["default"]("The partial "+r.name+" could not be compiled when running in runtime-only mode")}function n(e){function i(e){return""+t.main(r,e,r.helpers,r.partials,a,l,s)}var o=arguments.length<=1||void 0===arguments[1]?{}:arguments[1],a=o.data;n._setup(o),!o.partial&&t.useData&&(a=c(e,a));var s=void 0,l=t.useBlockParams?[]:void 0;return t.useDepths&&(s=o.depths?e!==o.depths[0]?[e].concat(o.depths):o.depths:[e]),(i=u(t.main,i,r,o.depths||[],a,l))(e,o)}if(!e)throw new m["default"]("No environment passed to template");if(!t||!t.main)throw new m["default"]("Unknown template object: "+typeof t);t.main.decorator=t.main_d,e.VM.checkRevision(t.compiler);var r={strict:function(t,e){if(!(e in t))throw new m["default"]('"'+e+'" not defined in '+t);return t[e]},lookup:function(t,e){for(var i=t.length,n=0;i>n;n++)if(t[n]&&null!=t[n][e])return t[n][e]},lambda:function(t,e){return"function"==typeof t?t.call(e):t},escapeExpression:f.escapeExpression,invokePartial:i,fn:function(e){var i=t[e];return i.decorator=t[e+"_d"],i},programs:[],program:function(t,e,i,n,r){var a=this.programs[t],s=this.fn(t);return e||r||n||i?a=o(this,t,s,e,i,n,r):a||(a=this.programs[t]=o(this,t,s)),a},data:function(t,e){for(;t&&e--;)t=t._parent;return t},merge:function(t,e){var i=t||e;return t&&e&&t!==e&&(i=f.extend({},e,t)),i},noop:e.VM.noop,compilerInfo:t.compiler};return n.isTop=!0,n._setup=function(i){i.partial?(r.helpers=i.helpers,r.partials=i.partials,r.decorators=i.decorators):(r.helpers=r.merge(i.helpers,e.helpers),t.usePartial&&(r.partials=r.merge(i.partials,e.partials)),(t.usePartial||t.useDecorators)&&(r.decorators=r.merge(i.decorators,e.decorators)))},n._child=function(e,i,n,a){if(t.useBlockParams&&!n)throw new m["default"]("must pass block params");if(t.useDepths&&!a)throw new m["default"]("must pass parent depths");return o(r,e,t[e],i,0,n,a)},n}function o(t,e,i,n,r,o,a){function s(e){var r=arguments.length<=1||void 0===arguments[1]?{}:arguments[1],s=a;return a&&e!==a[0]&&(s=[e].concat(a)),i(t,e,t.helpers,t.partials,r.data||n,o&&[r.blockParams].concat(o),s)}return s=u(i,s,t,a,n,o),s.program=e,s.depth=a?a.length:0,s.blockParams=r||0,s}function a(t,e,i){return t?t.call||i.name||(i.name=t,t=i.partials[t]):t="@partial-block"===i.name?i.data["partial-block"]:i.partials[i.name],t}function s(t,e,i){i.partial=!0,i.ids&&(i.data.contextPath=i.ids[0]||i.data.contextPath);var n=void 0;if(i.fn&&i.fn!==l&&(i.data=v.createFrame(i.data),n=i.data["partial-block"]=i.fn,n.partials&&(i.partials=f.extend({},i.partials,n.partials))),void 0===t&&n&&(t=n),void 0===t)throw new m["default"]("The partial "+i.name+" could not be found");return t instanceof Function?t(e,i):void 0}function l(){return""}function c(t,e){return e&&"root"in e||(e=e?v.createFrame(e):{},e.root=t),e}function u(t,e,i,n,r,o){if(t.decorator){var a={};e=t.decorator(e,a,i,n&&n[0],r,o,n),f.extend(e,a)}return e}var h=i(3)["default"],d=i(1)["default"];e.__esModule=!0,e.checkRevision=n,e.template=r,e.wrapProgram=o,e.resolvePartial=a,e.invokePartial=s,e.noop=l;var p=i(5),f=h(p),g=i(6),m=d(g),v=i(4)},function(t,e){(function(i){"use strict";e.__esModule=!0,e["default"]=function(t){var e="undefined"!=typeof i?i:window,n=e.Handlebars;t.noConflict=function(){return e.Handlebars===t&&(e.Handlebars=n),t}},t.exports=e["default"]}).call(e,function(){return this}())},function(t,e){"use strict";e.__esModule=!0;var i={helpers:{helperExpression:function(t){return"SubExpression"===t.type||("MustacheStatement"===t.type||"BlockStatement"===t.type)&&!!(t.params&&t.params.length||t.hash)},scopedId:function(t){return/^\.|this\b/.test(t.original)},simpleId:function(t){return 1===t.parts.length&&!i.helpers.scopedId(t)&&!t.depth}}};e["default"]=i,t.exports=e["default"]},function(t,e,i){"use strict";function n(t,e){if("Program"===t.type)return t;s["default"].yy=p,p.locInfo=function(t){return new p.SourceLocation(e&&e.srcName,t)};var i=new c["default"](e);return i.accept(s["default"].parse(t))}var r=i(1)["default"],o=i(3)["default"];e.__esModule=!0,e.parse=n;var a=i(23),s=r(a),l=i(24),c=r(l),u=i(26),h=o(u),d=i(5);e.parser=s["default"];var p={};d.extend(p,h)},function(t,e){"use strict";var i=function(){function t(){this.yy={}}var e={trace:function(){},yy:{},symbols_:{error:2,root:3,program:4,EOF:5,program_repetition0:6,statement:7,mustache:8,block:9,rawBlock:10,partial:11,partialBlock:12,content:13,COMMENT:14,CONTENT:15,openRawBlock:16,rawBlock_repetition_plus0:17,END_RAW_BLOCK:18,OPEN_RAW_BLOCK:19,helperName:20,openRawBlock_repetition0:21,openRawBlock_option0:22,CLOSE_RAW_BLOCK:23,openBlock:24,block_option0:25,closeBlock:26,openInverse:27,block_option1:28,OPEN_BLOCK:29,openBlock_repetition0:30,openBlock_option0:31,openBlock_option1:32,CLOSE:33,OPEN_INVERSE:34,openInverse_repetition0:35,openInverse_option0:36,openInverse_option1:37,openInverseChain:38,OPEN_INVERSE_CHAIN:39,openInverseChain_repetition0:40,openInverseChain_option0:41,openInverseChain_option1:42,inverseAndProgram:43,INVERSE:44,inverseChain:45,inverseChain_option0:46,OPEN_ENDBLOCK:47,OPEN:48,mustache_repetition0:49,mustache_option0:50,OPEN_UNESCAPED:51,mustache_repetition1:52,mustache_option1:53,CLOSE_UNESCAPED:54,OPEN_PARTIAL:55,partialName:56,partial_repetition0:57,partial_option0:58,openPartialBlock:59,OPEN_PARTIAL_BLOCK:60,openPartialBlock_repetition0:61,openPartialBlock_option0:62,param:63,sexpr:64,OPEN_SEXPR:65,sexpr_repetition0:66,sexpr_option0:67,CLOSE_SEXPR:68,hash:69,hash_repetition_plus0:70,hashSegment:71,ID:72,EQUALS:73,blockParams:74,OPEN_BLOCK_PARAMS:75,blockParams_repetition_plus0:76,CLOSE_BLOCK_PARAMS:77,path:78,dataName:79,STRING:80,NUMBER:81,BOOLEAN:82,UNDEFINED:83,NULL:84,DATA:85,pathSegments:86,SEP:87,$accept:0,$end:1},terminals_:{2:"error",5:"EOF",14:"COMMENT",15:"CONTENT",18:"END_RAW_BLOCK",19:"OPEN_RAW_BLOCK",23:"CLOSE_RAW_BLOCK",29:"OPEN_BLOCK",33:"CLOSE",34:"OPEN_INVERSE",39:"OPEN_INVERSE_CHAIN",44:"INVERSE",47:"OPEN_ENDBLOCK",48:"OPEN",51:"OPEN_UNESCAPED",54:"CLOSE_UNESCAPED",55:"OPEN_PARTIAL",60:"OPEN_PARTIAL_BLOCK",65:"OPEN_SEXPR",68:"CLOSE_SEXPR",72:"ID",73:"EQUALS",75:"OPEN_BLOCK_PARAMS",77:"CLOSE_BLOCK_PARAMS",80:"STRING",81:"NUMBER",82:"BOOLEAN",83:"UNDEFINED",84:"NULL",85:"DATA",87:"SEP"},productions_:[0,[3,2],[4,1],[7,1],[7,1],[7,1],[7,1],[7,1],[7,1],[7,1],[13,1],[10,3],[16,5],[9,4],[9,4],[24,6],[27,6],[38,6],[43,2],[45,3],[45,1],[26,3],[8,5],[8,5],[11,5],[12,3],[59,5],[63,1],[63,1],[64,5],[69,1],[71,3],[74,3],[20,1],[20,1],[20,1],[20,1],[20,1],[20,1],[20,1],[56,1],[56,1],[79,2],[78,1],[86,3],[86,1],[6,0],[6,2],[17,1],[17,2],[21,0],[21,2],[22,0],[22,1],[25,0],[25,1],[28,0],[28,1],[30,0],[30,2],[31,0],[31,1],[32,0],[32,1],[35,0],[35,2],[36,0],[36,1],[37,0],[37,1],[40,0],[40,2],[41,0],[41,1],[42,0],[42,1],[46,0],[46,1],[49,0],[49,2],[50,0],[50,1],[52,0],[52,2],[53,0],[53,1],[57,0],[57,2],[58,0],[58,1],[61,0],[61,2],[62,0],[62,1],[66,0],[66,2],[67,0],[67,1],[70,1],[70,2],[76,1],[76,2]],performAction:function(t,e,i,n,r,o,a){var s=o.length-1;switch(r){case 1:return o[s-1];case 2:this.$=n.prepareProgram(o[s]);break;case 3:this.$=o[s];break;case 4:this.$=o[s];break;case 5:this.$=o[s];break;case 6:this.$=o[s];break;case 7:this.$=o[s];break;case 8:this.$=o[s];break;case 9:this.$={type:"CommentStatement",value:n.stripComment(o[s]),strip:n.stripFlags(o[s],o[s]),loc:n.locInfo(this._$)};break;case 10:this.$={type:"ContentStatement",original:o[s],value:o[s],loc:n.locInfo(this._$)};break;case 11:this.$=n.prepareRawBlock(o[s-2],o[s-1],o[s],this._$);break;case 12:this.$={path:o[s-3],params:o[s-2],hash:o[s-1]};break;case 13:this.$=n.prepareBlock(o[s-3],o[s-2],o[s-1],o[s],!1,this._$);break;case 14:this.$=n.prepareBlock(o[s-3],o[s-2],o[s-1],o[s],!0,this._$);break;case 15:this.$={open:o[s-5],path:o[s-4],params:o[s-3],hash:o[s-2],blockParams:o[s-1],strip:n.stripFlags(o[s-5],o[s])};break;case 16:this.$={path:o[s-4],params:o[s-3],hash:o[s-2],blockParams:o[s-1],strip:n.stripFlags(o[s-5],o[s])};break;case 17:this.$={path:o[s-4],params:o[s-3],hash:o[s-2],blockParams:o[s-1],strip:n.stripFlags(o[s-5],o[s])};break;case 18:this.$={strip:n.stripFlags(o[s-1],o[s-1]),program:o[s]};break;case 19:var l=n.prepareBlock(o[s-2],o[s-1],o[s],o[s],!1,this._$),c=n.prepareProgram([l],o[s-1].loc);c.chained=!0,this.$={strip:o[s-2].strip,program:c,chain:!0};break;case 20:this.$=o[s];break;case 21:this.$={path:o[s-1],strip:n.stripFlags(o[s-2],o[s])};break;case 22:this.$=n.prepareMustache(o[s-3],o[s-2],o[s-1],o[s-4],n.stripFlags(o[s-4],o[s]),this._$);break;case 23:this.$=n.prepareMustache(o[s-3],o[s-2],o[s-1],o[s-4],n.stripFlags(o[s-4],o[s]),this._$);break;case 24:this.$={type:"PartialStatement",name:o[s-3],params:o[s-2],hash:o[s-1],indent:"",strip:n.stripFlags(o[s-4],o[s]),loc:n.locInfo(this._$)};break;case 25:this.$=n.preparePartialBlock(o[s-2],o[s-1],o[s],this._$);break;case 26:this.$={path:o[s-3],params:o[s-2],hash:o[s-1],strip:n.stripFlags(o[s-4],o[s])};break;case 27:this.$=o[s];break;case 28:this.$=o[s];break;case 29:this.$={type:"SubExpression",path:o[s-3],params:o[s-2],hash:o[s-1],loc:n.locInfo(this._$)};break;case 30:this.$={type:"Hash",pairs:o[s],loc:n.locInfo(this._$)};break;case 31:this.$={type:"HashPair",key:n.id(o[s-2]),value:o[s],loc:n.locInfo(this._$)};break;case 32:this.$=n.id(o[s-1]);break;case 33:this.$=o[s];break;case 34:this.$=o[s];break;case 35:this.$={type:"StringLiteral",value:o[s],original:o[s],loc:n.locInfo(this._$)};break;case 36:this.$={type:"NumberLiteral",value:Number(o[s]),original:Number(o[s]),loc:n.locInfo(this._$)};break;case 37:this.$={type:"BooleanLiteral",value:"true"===o[s],original:"true"===o[s],loc:n.locInfo(this._$)};break;case 38:this.$={type:"UndefinedLiteral",original:void 0,value:void 0,loc:n.locInfo(this._$)};break;case 39:this.$={type:"NullLiteral",original:null,value:null,loc:n.locInfo(this._$)};break;case 40:this.$=o[s];break;case 41:this.$=o[s];break;case 42:this.$=n.preparePath(!0,o[s],this._$);break;case 43:this.$=n.preparePath(!1,o[s],this._$);break;case 44:o[s-2].push({part:n.id(o[s]),original:o[s],separator:o[s-1]}),this.$=o[s-2];break;case 45:this.$=[{part:n.id(o[s]),original:o[s]}];break;case 46:this.$=[];break;case 47:o[s-1].push(o[s]);break;case 48:this.$=[o[s]];break;case 49:o[s-1].push(o[s]);break;case 50:this.$=[];break;case 51:o[s-1].push(o[s]);break;case 58:this.$=[];break;case 59:o[s-1].push(o[s]);break;case 64:this.$=[];break;case 65:o[s-1].push(o[s]);break;case 70:this.$=[];break;case 71:o[s-1].push(o[s]);break;case 78:this.$=[];break;case 79:o[s-1].push(o[s]);break;case 82:this.$=[];break;case 83:o[s-1].push(o[s]);break;case 86:this.$=[];break;case 87:o[s-1].push(o[s]);break;case 90:this.$=[];break;case 91:o[s-1].push(o[s]);break;case 94:this.$=[];break;case 95:o[s-1].push(o[s]);break;case 98:this.$=[o[s]];break;case 99:o[s-1].push(o[s]);break;case 100:this.$=[o[s]];break;case 101:o[s-1].push(o[s])}},table:[{3:1,4:2,5:[2,46],6:3,14:[2,46],15:[2,46],19:[2,46],29:[2,46],34:[2,46],48:[2,46],51:[2,46],55:[2,46],60:[2,46]},{1:[3]},{5:[1,4]},{5:[2,2],7:5,8:6,9:7,10:8,11:9,12:10,13:11,14:[1,12],15:[1,20],16:17,19:[1,23],24:15,27:16,29:[1,21],34:[1,22],39:[2,2],44:[2,2],47:[2,2],48:[1,13],51:[1,14],55:[1,18],59:19,60:[1,24]},{1:[2,1]},{5:[2,47],14:[2,47],15:[2,47],19:[2,47],29:[2,47],34:[2,47],39:[2,47],44:[2,47],47:[2,47],48:[2,47],51:[2,47],55:[2,47],60:[2,47]},{5:[2,3],14:[2,3],15:[2,3],19:[2,3],29:[2,3],34:[2,3],39:[2,3],44:[2,3],47:[2,3],48:[2,3],51:[2,3],55:[2,3],60:[2,3]},{5:[2,4],14:[2,4],15:[2,4],19:[2,4],29:[2,4],34:[2,4],39:[2,4],44:[2,4],47:[2,4],48:[2,4],51:[2,4],55:[2,4],60:[2,4]},{5:[2,5],14:[2,5],15:[2,5],19:[2,5],29:[2,5],34:[2,5],39:[2,5],44:[2,5],47:[2,5],48:[2,5],51:[2,5],55:[2,5],60:[2,5]},{5:[2,6],14:[2,6],15:[2,6],19:[2,6],29:[2,6],34:[2,6],39:[2,6],44:[2,6],47:[2,6],48:[2,6],51:[2,6],55:[2,6],60:[2,6]},{5:[2,7],14:[2,7],15:[2,7],19:[2,7],29:[2,7],34:[2,7],39:[2,7],44:[2,7],47:[2,7],48:[2,7],51:[2,7],55:[2,7],60:[2,7]},{5:[2,8],14:[2,8],15:[2,8],19:[2,8],29:[2,8],34:[2,8],39:[2,8],44:[2,8],47:[2,8],48:[2,8],51:[2,8],55:[2,8],60:[2,8]},{5:[2,9],14:[2,9],15:[2,9],19:[2,9],29:[2,9],34:[2,9],39:[2,9],44:[2,9],47:[2,9],48:[2,9],51:[2,9],55:[2,9],60:[2,9]},{20:25,72:[1,35],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{20:36,72:[1,35],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{4:37,6:3,14:[2,46],15:[2,46],19:[2,46],29:[2,46],34:[2,46],39:[2,46],44:[2,46],47:[2,46],48:[2,46],51:[2,46],55:[2,46],60:[2,46]},{4:38,6:3,14:[2,46],15:[2,46],19:[2,46],29:[2,46],34:[2,46],44:[2,46],47:[2,46],48:[2,46],51:[2,46],55:[2,46],60:[2,46]},{13:40,15:[1,20],17:39},{20:42,56:41,64:43,65:[1,44],72:[1,35],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{4:45,6:3,14:[2,46],15:[2,46],19:[2,46],29:[2,46],34:[2,46],47:[2,46],48:[2,46],51:[2,46],55:[2,46],60:[2,46]},{5:[2,10],14:[2,10],15:[2,10],18:[2,10],19:[2,10],29:[2,10],34:[2,10],39:[2,10],44:[2,10],47:[2,10],48:[2,10],51:[2,10],55:[2,10],60:[2,10]},{20:46,72:[1,35],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{20:47,72:[1,35],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{20:48,72:[1,35],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{20:42,56:49,64:43,65:[1,44],72:[1,35],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{33:[2,78],49:50,65:[2,78],72:[2,78],80:[2,78],81:[2,78],82:[2,78],83:[2,78],84:[2,78],85:[2,78]},{23:[2,33],33:[2,33],54:[2,33],65:[2,33],68:[2,33],72:[2,33],75:[2,33],80:[2,33],81:[2,33],82:[2,33],83:[2,33],84:[2,33],85:[2,33]},{23:[2,34],33:[2,34],54:[2,34],65:[2,34],68:[2,34],72:[2,34],75:[2,34],80:[2,34],81:[2,34],82:[2,34],83:[2,34],84:[2,34],85:[2,34]},{23:[2,35],33:[2,35],54:[2,35],65:[2,35],68:[2,35],72:[2,35],75:[2,35],80:[2,35],81:[2,35],82:[2,35],83:[2,35],84:[2,35],85:[2,35]},{23:[2,36],33:[2,36],54:[2,36],65:[2,36],68:[2,36],72:[2,36],75:[2,36],80:[2,36],81:[2,36],82:[2,36],83:[2,36],84:[2,36],85:[2,36]},{23:[2,37],33:[2,37],54:[2,37],65:[2,37],68:[2,37],72:[2,37],75:[2,37],80:[2,37],81:[2,37],82:[2,37],83:[2,37],84:[2,37],85:[2,37]},{23:[2,38],33:[2,38],54:[2,38],65:[2,38],68:[2,38],72:[2,38],75:[2,38],80:[2,38],81:[2,38],82:[2,38],83:[2,38],84:[2,38],85:[2,38]},{23:[2,39],33:[2,39],54:[2,39],65:[2,39],68:[2,39],72:[2,39],75:[2,39],80:[2,39],81:[2,39],82:[2,39],83:[2,39],84:[2,39],85:[2,39]},{23:[2,43],33:[2,43],54:[2,43],65:[2,43],68:[2,43],72:[2,43],75:[2,43],80:[2,43],81:[2,43],82:[2,43],83:[2,43],84:[2,43],85:[2,43],87:[1,51]},{72:[1,35],86:52},{23:[2,45],33:[2,45],54:[2,45],65:[2,45],68:[2,45],72:[2,45],75:[2,45],80:[2,45],81:[2,45],82:[2,45],83:[2,45],84:[2,45],85:[2,45],87:[2,45]},{52:53,54:[2,82],65:[2,82],72:[2,82],80:[2,82],81:[2,82],82:[2,82],83:[2,82],84:[2,82],85:[2,82]},{25:54,38:56,39:[1,58],43:57,44:[1,59],45:55,47:[2,54]},{28:60,43:61,44:[1,59],47:[2,56]},{13:63,15:[1,20],18:[1,62]},{15:[2,48],18:[2,48]},{33:[2,86],57:64,65:[2,86],72:[2,86],80:[2,86],81:[2,86],82:[2,86],83:[2,86],84:[2,86],85:[2,86]},{33:[2,40],65:[2,40],72:[2,40],80:[2,40],81:[2,40],82:[2,40],83:[2,40],84:[2,40],85:[2,40]},{33:[2,41],65:[2,41],72:[2,41],80:[2,41],81:[2,41],82:[2,41],83:[2,41],84:[2,41],85:[2,41]},{20:65,72:[1,35],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{26:66,47:[1,67]},{30:68,33:[2,58],65:[2,58],72:[2,58],75:[2,58],80:[2,58],81:[2,58],82:[2,58],83:[2,58],84:[2,58],85:[2,58]},{33:[2,64],35:69,65:[2,64],72:[2,64],75:[2,64],80:[2,64],81:[2,64],82:[2,64],83:[2,64],84:[2,64],85:[2,64]},{21:70,23:[2,50],65:[2,50],72:[2,50],80:[2,50],81:[2,50],82:[2,50],83:[2,50],84:[2,50],85:[2,50]},{33:[2,90],61:71,65:[2,90],72:[2,90],80:[2,90],81:[2,90],82:[2,90],83:[2,90],84:[2,90],85:[2,90]},{20:75,33:[2,80],50:72,63:73,64:76,65:[1,44],69:74,70:77,71:78,72:[1,79],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{72:[1,80]},{23:[2,42],33:[2,42],54:[2,42],65:[2,42],68:[2,42],72:[2,42],75:[2,42],80:[2,42],81:[2,42],82:[2,42],83:[2,42],84:[2,42],85:[2,42],87:[1,51]},{20:75,53:81,54:[2,84],63:82,64:76,65:[1,44],69:83,70:77,71:78,72:[1,79],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{26:84,47:[1,67]},{47:[2,55]},{4:85,6:3,14:[2,46],15:[2,46],19:[2,46],29:[2,46],34:[2,46],39:[2,46],44:[2,46],47:[2,46],48:[2,46],51:[2,46],55:[2,46],60:[2,46]},{47:[2,20]},{20:86,72:[1,35],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{4:87,6:3,14:[2,46],15:[2,46],19:[2,46],29:[2,46],34:[2,46],47:[2,46],48:[2,46],51:[2,46],55:[2,46],60:[2,46]},{26:88,47:[1,67]},{47:[2,57]},{5:[2,11],14:[2,11],15:[2,11],19:[2,11],29:[2,11],34:[2,11],39:[2,11],44:[2,11],47:[2,11],48:[2,11],51:[2,11],55:[2,11],60:[2,11]},{15:[2,49],18:[2,49]},{20:75,33:[2,88],58:89,63:90,64:76,65:[1,44],69:91,70:77,71:78,72:[1,79],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{65:[2,94],66:92,68:[2,94],72:[2,94],80:[2,94],81:[2,94],82:[2,94],83:[2,94],84:[2,94],85:[2,94]},{5:[2,25],14:[2,25],15:[2,25],19:[2,25],29:[2,25],34:[2,25],39:[2,25],44:[2,25],47:[2,25],48:[2,25],51:[2,25],55:[2,25],60:[2,25]},{20:93,72:[1,35],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{20:75,31:94,33:[2,60],63:95,64:76,65:[1,44],69:96,70:77,71:78,72:[1,79],75:[2,60],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{20:75,33:[2,66],36:97,63:98,64:76,65:[1,44],69:99,70:77,71:78,72:[1,79],75:[2,66],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{20:75,22:100,23:[2,52],63:101,64:76,65:[1,44],69:102,70:77,71:78,72:[1,79],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{20:75,33:[2,92],62:103,63:104,64:76,65:[1,44],69:105,70:77,71:78,72:[1,79],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{33:[1,106]},{33:[2,79],65:[2,79],72:[2,79],80:[2,79],81:[2,79],82:[2,79],83:[2,79],84:[2,79],85:[2,79]},{33:[2,81]},{23:[2,27],33:[2,27],54:[2,27],65:[2,27],68:[2,27],72:[2,27],75:[2,27],80:[2,27],81:[2,27],82:[2,27],83:[2,27],84:[2,27],85:[2,27]},{23:[2,28],33:[2,28],54:[2,28],65:[2,28],68:[2,28],72:[2,28],75:[2,28],80:[2,28],81:[2,28],82:[2,28],83:[2,28],84:[2,28],85:[2,28]},{23:[2,30],33:[2,30],54:[2,30],68:[2,30],71:107,72:[1,108],75:[2,30]},{23:[2,98],33:[2,98],54:[2,98],68:[2,98],72:[2,98],75:[2,98]},{23:[2,45],33:[2,45],54:[2,45],65:[2,45],68:[2,45],72:[2,45],73:[1,109],75:[2,45],80:[2,45],81:[2,45],82:[2,45],83:[2,45],84:[2,45],85:[2,45],87:[2,45]},{23:[2,44],33:[2,44],54:[2,44],65:[2,44],68:[2,44],72:[2,44],75:[2,44],80:[2,44],81:[2,44],82:[2,44],83:[2,44],84:[2,44],85:[2,44],87:[2,44]},{54:[1,110]},{54:[2,83],65:[2,83],72:[2,83],80:[2,83],81:[2,83],82:[2,83],83:[2,83],84:[2,83],85:[2,83]},{54:[2,85]},{5:[2,13],14:[2,13],15:[2,13],19:[2,13],29:[2,13],34:[2,13],39:[2,13],44:[2,13],47:[2,13],48:[2,13],51:[2,13],55:[2,13],60:[2,13]},{38:56,39:[1,58],43:57,44:[1,59],45:112,46:111,47:[2,76]},{33:[2,70],40:113,65:[2,70],72:[2,70],75:[2,70],80:[2,70],81:[2,70],82:[2,70],83:[2,70],84:[2,70],85:[2,70]},{47:[2,18]},{5:[2,14],14:[2,14],15:[2,14],19:[2,14],29:[2,14],34:[2,14],39:[2,14],44:[2,14],47:[2,14],48:[2,14],51:[2,14],55:[2,14],60:[2,14]},{33:[1,114]},{33:[2,87],65:[2,87],72:[2,87],80:[2,87],81:[2,87],82:[2,87],83:[2,87],84:[2,87],85:[2,87]},{33:[2,89]},{20:75,63:116,64:76,65:[1,44],67:115,68:[2,96],69:117,70:77,71:78,72:[1,79],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{33:[1,118]},{32:119,33:[2,62],74:120,75:[1,121]},{33:[2,59],65:[2,59],72:[2,59],75:[2,59],80:[2,59],81:[2,59],82:[2,59],83:[2,59],84:[2,59],85:[2,59]},{33:[2,61],75:[2,61]},{33:[2,68],37:122,74:123,75:[1,121]},{33:[2,65],65:[2,65],72:[2,65],75:[2,65],80:[2,65],81:[2,65],82:[2,65],83:[2,65],84:[2,65],85:[2,65]},{33:[2,67],75:[2,67]},{23:[1,124]},{23:[2,51],65:[2,51],72:[2,51],80:[2,51],81:[2,51],82:[2,51],83:[2,51],84:[2,51],85:[2,51]},{23:[2,53]},{33:[1,125]},{33:[2,91],65:[2,91],72:[2,91],80:[2,91],81:[2,91],82:[2,91],83:[2,91],84:[2,91],85:[2,91]},{33:[2,93]},{5:[2,22],14:[2,22],15:[2,22],19:[2,22],29:[2,22],34:[2,22],39:[2,22],44:[2,22],47:[2,22],48:[2,22],51:[2,22],55:[2,22],60:[2,22]},{23:[2,99],33:[2,99],54:[2,99],68:[2,99],72:[2,99],75:[2,99]},{73:[1,109]},{20:75,63:126,64:76,65:[1,44],72:[1,35],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{5:[2,23],14:[2,23],15:[2,23],19:[2,23],29:[2,23],34:[2,23],39:[2,23],44:[2,23],47:[2,23],48:[2,23],51:[2,23],55:[2,23],60:[2,23]},{47:[2,19]},{47:[2,77]},{20:75,33:[2,72],41:127,63:128,64:76,65:[1,44],69:129,70:77,71:78,72:[1,79],75:[2,72],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{5:[2,24],14:[2,24],15:[2,24],19:[2,24],29:[2,24],34:[2,24],39:[2,24],44:[2,24],47:[2,24],48:[2,24],51:[2,24],55:[2,24],60:[2,24]},{68:[1,130]},{65:[2,95],68:[2,95],72:[2,95],80:[2,95],81:[2,95],82:[2,95],83:[2,95],84:[2,95],85:[2,95]},{68:[2,97]},{5:[2,21],14:[2,21],15:[2,21],19:[2,21],29:[2,21],34:[2,21],39:[2,21],44:[2,21],47:[2,21],48:[2,21],51:[2,21],55:[2,21],60:[2,21]},{33:[1,131]},{33:[2,63]},{72:[1,133],76:132},{33:[1,134]},{33:[2,69]},{15:[2,12]},{14:[2,26],15:[2,26],19:[2,26],29:[2,26],34:[2,26],47:[2,26],48:[2,26],51:[2,26],55:[2,26],60:[2,26]},{23:[2,31],33:[2,31],54:[2,31],68:[2,31],72:[2,31],75:[2,31]},{33:[2,74],42:135,74:136,75:[1,121]},{33:[2,71],65:[2,71],72:[2,71],75:[2,71],80:[2,71],81:[2,71],82:[2,71],83:[2,71],84:[2,71],85:[2,71]},{33:[2,73],75:[2,73]},{23:[2,29],33:[2,29],54:[2,29],65:[2,29],68:[2,29],72:[2,29],75:[2,29],80:[2,29],81:[2,29],82:[2,29],83:[2,29],84:[2,29],85:[2,29]},{14:[2,15],15:[2,15],19:[2,15],29:[2,15],34:[2,15],39:[2,15],44:[2,15],47:[2,15],48:[2,15],51:[2,15],55:[2,15],60:[2,15]},{72:[1,138],77:[1,137]},{72:[2,100],77:[2,100]},{14:[2,16],15:[2,16],19:[2,16],29:[2,16],34:[2,16],44:[2,16],47:[2,16],48:[2,16],51:[2,16],55:[2,16],60:[2,16]},{33:[1,139]},{33:[2,75]},{33:[2,32]},{72:[2,101],77:[2,101]},{14:[2,17],15:[2,17],19:[2,17],29:[2,17],34:[2,17],39:[2,17],44:[2,17],47:[2,17],48:[2,17],51:[2,17],55:[2,17],60:[2,17]}],defaultActions:{4:[2,1],55:[2,55],57:[2,20],61:[2,57],74:[2,81],83:[2,85],87:[2,18],91:[2,89],102:[2,53],105:[2,93],111:[2,19],112:[2,77],117:[2,97],120:[2,63],123:[2,69],124:[2,12],136:[2,75],137:[2,32]},parseError:function(t,e){throw new Error(t)},parse:function(t){function e(){var t;return t=i.lexer.lex()||1,"number"!=typeof t&&(t=i.symbols_[t]||t),t}var i=this,n=[0],r=[null],o=[],a=this.table,s="",l=0,c=0,u=0;this.lexer.setInput(t),this.lexer.yy=this.yy,this.yy.lexer=this.lexer,this.yy.parser=this,"undefined"==typeof this.lexer.yylloc&&(this.lexer.yylloc={});var h=this.lexer.yylloc;o.push(h);var d=this.lexer.options&&this.lexer.options.ranges;"function"==typeof this.yy.parseError&&(this.parseError=this.yy.parseError);for(var p,f,g,m,v,y,b,x,k,w={};;){if(g=n[n.length-1],this.defaultActions[g]?m=this.defaultActions[g]:((null===p||"undefined"==typeof p)&&(p=e()),m=a[g]&&a[g][p]),"undefined"==typeof m||!m.length||!m[0]){var _="";if(!u){k=[];for(y in a[g])this.terminals_[y]&&y>2&&k.push("'"+this.terminals_[y]+"'");_=this.lexer.showPosition?"Parse error on line "+(l+1)+":\n"+this.lexer.showPosition()+"\nExpecting "+k.join(", ")+", got '"+(this.terminals_[p]||p)+"'":"Parse error on line "+(l+1)+": Unexpected "+(1==p?"end of input":"'"+(this.terminals_[p]||p)+"'"),this.parseError(_,{text:this.lexer.match,token:this.terminals_[p]||p,line:this.lexer.yylineno,loc:h,expected:k})}}if(m[0]instanceof Array&&m.length>1)throw new Error("Parse Error: multiple actions possible at state: "+g+", token: "+p);switch(m[0]){case 1:n.push(p),r.push(this.lexer.yytext),o.push(this.lexer.yylloc),n.push(m[1]),p=null,f?(p=f,f=null):(c=this.lexer.yyleng,s=this.lexer.yytext,l=this.lexer.yylineno,h=this.lexer.yylloc,u>0&&u--);break;case 2:if(b=this.productions_[m[1]][1],w.$=r[r.length-b],w._$={first_line:o[o.length-(b||1)].first_line,last_line:o[o.length-1].last_line,first_column:o[o.length-(b||1)].first_column,last_column:o[o.length-1].last_column},d&&(w._$.range=[o[o.length-(b||1)].range[0],o[o.length-1].range[1]]),v=this.performAction.call(w,s,c,l,this.yy,m[1],r,o),"undefined"!=typeof v)return v;b&&(n=n.slice(0,-1*b*2),r=r.slice(0,-1*b),o=o.slice(0,-1*b)),n.push(this.productions_[m[1]][0]),r.push(w.$),o.push(w._$),x=a[n[n.length-2]][n[n.length-1]],n.push(x);break;case 3:return!0}}return!0}},i=function(){var t={EOF:1,parseError:function(t,e){if(!this.yy.parser)throw new Error(t);this.yy.parser.parseError(t,e)},setInput:function(t){return this._input=t,this._more=this._less=this.done=!1,this.yylineno=this.yyleng=0,this.yytext=this.matched=this.match="",this.conditionStack=["INITIAL"],this.yylloc={first_line:1,first_column:0,last_line:1,last_column:0},this.options.ranges&&(this.yylloc.range=[0,0]),this.offset=0,this},input:function(){var t=this._input[0];this.yytext+=t,this.yyleng++,this.offset++,this.match+=t,this.matched+=t;var e=t.match(/(?:\r\n?|\n).*/g);return e?(this.yylineno++,this.yylloc.last_line++):this.yylloc.last_column++,this.options.ranges&&this.yylloc.range[1]++,this._input=this._input.slice(1),t},unput:function(t){var e=t.length,i=t.split(/(?:\r\n?|\n)/g);this._input=t+this._input,this.yytext=this.yytext.substr(0,this.yytext.length-e-1),this.offset-=e;var n=this.match.split(/(?:\r\n?|\n)/g);this.match=this.match.substr(0,this.match.length-1),this.matched=this.matched.substr(0,this.matched.length-1),i.length-1&&(this.yylineno-=i.length-1);var r=this.yylloc.range;return this.yylloc={first_line:this.yylloc.first_line,last_line:this.yylineno+1,first_column:this.yylloc.first_column,last_column:i?(i.length===n.length?this.yylloc.first_column:0)+n[n.length-i.length].length-i[0].length:this.yylloc.first_column-e},this.options.ranges&&(this.yylloc.range=[r[0],r[0]+this.yyleng-e]),this},more:function(){return this._more=!0,this},less:function(t){this.unput(this.match.slice(t))},pastInput:function(){var t=this.matched.substr(0,this.matched.length-this.match.length);return(t.length>20?"...":"")+t.substr(-20).replace(/\n/g,"")},upcomingInput:function(){var t=this.match;return t.length<20&&(t+=this._input.substr(0,20-t.length)),(t.substr(0,20)+(t.length>20?"...":"")).replace(/\n/g,"")},showPosition:function(){var t=this.pastInput(),e=new Array(t.length+1).join("-");return t+this.upcomingInput()+"\n"+e+"^"},next:function(){if(this.done)return this.EOF;this._input||(this.done=!0);var t,e,i,n,r;this._more||(this.yytext="",this.match="");for(var o=this._currentRules(),a=0;a<o.length&&(i=this._input.match(this.rules[o[a]]),!i||e&&!(i[0].length>e[0].length)||(e=i,n=a,this.options.flex));a++);return e?(r=e[0].match(/(?:\r\n?|\n).*/g),r&&(this.yylineno+=r.length),this.yylloc={first_line:this.yylloc.last_line,last_line:this.yylineno+1,first_column:this.yylloc.last_column,last_column:r?r[r.length-1].length-r[r.length-1].match(/\r?\n?/)[0].length:this.yylloc.last_column+e[0].length},this.yytext+=e[0],this.match+=e[0],this.matches=e,this.yyleng=this.yytext.length,this.options.ranges&&(this.yylloc.range=[this.offset,this.offset+=this.yyleng]),this._more=!1,this._input=this._input.slice(e[0].length),this.matched+=e[0],t=this.performAction.call(this,this.yy,this,o[n],this.conditionStack[this.conditionStack.length-1]),this.done&&this._input&&(this.done=!1),t?t:void 0):""===this._input?this.EOF:this.parseError("Lexical error on line "+(this.yylineno+1)+". Unrecognized text.\n"+this.showPosition(),{text:"",token:null,line:this.yylineno})},lex:function(){var t=this.next();return"undefined"!=typeof t?t:this.lex()},begin:function(t){this.conditionStack.push(t)},popState:function(){return this.conditionStack.pop()},_currentRules:function(){return this.conditions[this.conditionStack[this.conditionStack.length-1]].rules},topState:function(){return this.conditionStack[this.conditionStack.length-2]},pushState:function(t){this.begin(t)}};return t.options={},t.performAction=function(t,e,i,n){function r(t,i){return e.yytext=e.yytext.substr(t,e.yyleng-i)}switch(i){case 0:if("\\\\"===e.yytext.slice(-2)?(r(0,1),this.begin("mu")):"\\"===e.yytext.slice(-1)?(r(0,1),this.begin("emu")):this.begin("mu"),e.yytext)return 15;break;case 1:return 15;case 2:return this.popState(),15;case 3:return this.begin("raw"),15;case 4:return this.popState(),"raw"===this.conditionStack[this.conditionStack.length-1]?15:(e.yytext=e.yytext.substr(5,e.yyleng-9),"END_RAW_BLOCK");case 5:return 15;case 6:return this.popState(),14;case 7:return 65;case 8:return 68;case 9:return 19;case 10:return this.popState(),this.begin("raw"),23;case 11:return 55;case 12:return 60;case 13:return 29;case 14:return 47;case 15:return this.popState(),44;case 16:return this.popState(),44;case 17:return 34;case 18:return 39;case 19:return 51;case 20:return 48;case 21:this.unput(e.yytext),this.popState(),this.begin("com");break;case 22:return this.popState(),14;case 23:return 48;case 24:return 73;case 25:return 72;case 26:return 72;case 27:return 87;case 28:break;case 29:return this.popState(),54;case 30:return this.popState(),33;case 31:return e.yytext=r(1,2).replace(/\\"/g,'"'),80;case 32:return e.yytext=r(1,2).replace(/\\'/g,"'"),80;case 33:return 85;case 34:return 82;case 35:return 82;case 36:return 83;case 37:return 84;case 38:return 81;case 39:return 75;case 40:return 77;case 41:return 72;case 42:return e.yytext=e.yytext.replace(/\\([\\\]])/g,"$1"),72;case 43:return"INVALID";case 44:return 5}},t.rules=[/^(?:[^\x00]*?(?=(\{\{)))/,/^(?:[^\x00]+)/,/^(?:[^\x00]{2,}?(?=(\{\{|\\\{\{|\\\\\{\{|$)))/,/^(?:\{\{\{\{(?=[^\/]))/,/^(?:\{\{\{\{\/[^\s!"#%-,\.\/;->@\[-\^`\{-~]+(?=[=}\s\/.])\}\}\}\})/,/^(?:[^\x00]*?(?=(\{\{\{\{)))/,/^(?:[\s\S]*?--(~)?\}\})/,/^(?:\()/,/^(?:\))/,/^(?:\{\{\{\{)/,/^(?:\}\}\}\})/,/^(?:\{\{(~)?>)/,/^(?:\{\{(~)?#>)/,/^(?:\{\{(~)?#\*?)/,/^(?:\{\{(~)?\/)/,/^(?:\{\{(~)?\^\s*(~)?\}\})/,/^(?:\{\{(~)?\s*else\s*(~)?\}\})/,/^(?:\{\{(~)?\^)/,/^(?:\{\{(~)?\s*else\b)/,/^(?:\{\{(~)?\{)/,/^(?:\{\{(~)?&)/,/^(?:\{\{(~)?!--)/,/^(?:\{\{(~)?![\s\S]*?\}\})/,/^(?:\{\{(~)?\*?)/,/^(?:=)/,/^(?:\.\.)/,/^(?:\.(?=([=~}\s\/.)|])))/,/^(?:[\/.])/,/^(?:\s+)/,/^(?:\}(~)?\}\})/,/^(?:(~)?\}\})/,/^(?:"(\\["]|[^"])*")/,/^(?:'(\\[']|[^'])*')/,/^(?:@)/,/^(?:true(?=([~}\s)])))/,/^(?:false(?=([~}\s)])))/,/^(?:undefined(?=([~}\s)])))/,/^(?:null(?=([~}\s)])))/,/^(?:-?[0-9]+(?:\.[0-9]+)?(?=([~}\s)])))/,/^(?:as\s+\|)/,/^(?:\|)/,/^(?:([^\s!"#%-,\.\/;->@\[-\^`\{-~]+(?=([=~}\s\/.)|]))))/,/^(?:\[(\\\]|[^\]])*\])/,/^(?:.)/,/^(?:$)/],
t.conditions={mu:{rules:[7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44],inclusive:!1},emu:{rules:[2],inclusive:!1},com:{rules:[6],inclusive:!1},raw:{rules:[3,4,5],inclusive:!1},INITIAL:{rules:[0,1,44],inclusive:!0}},t}();return e.lexer=i,t.prototype=e,e.Parser=t,new t}();e.__esModule=!0,e["default"]=i},function(t,e,i){"use strict";function n(){var t=arguments.length<=0||void 0===arguments[0]?{}:arguments[0];this.options=t}function r(t,e,i){void 0===e&&(e=t.length);var n=t[e-1],r=t[e-2];return n?"ContentStatement"===n.type?(r||!i?/\r?\n\s*?$/:/(^|\r?\n)\s*?$/).test(n.original):void 0:i}function o(t,e,i){void 0===e&&(e=-1);var n=t[e+1],r=t[e+2];return n?"ContentStatement"===n.type?(r||!i?/^\s*?\r?\n/:/^\s*?(\r?\n|$)/).test(n.original):void 0:i}function a(t,e,i){var n=t[null==e?0:e+1];if(n&&"ContentStatement"===n.type&&(i||!n.rightStripped)){var r=n.value;n.value=n.value.replace(i?/^\s+/:/^[ \t]*\r?\n?/,""),n.rightStripped=n.value!==r}}function s(t,e,i){var n=t[null==e?t.length-1:e-1];if(n&&"ContentStatement"===n.type&&(i||!n.leftStripped)){var r=n.value;return n.value=n.value.replace(i?/\s+$/:/[ \t]+$/,""),n.leftStripped=n.value!==r,n.leftStripped}}var l=i(1)["default"];e.__esModule=!0;var c=i(25),u=l(c);n.prototype=new u["default"],n.prototype.Program=function(t){var e=!this.options.ignoreStandalone,i=!this.isRootSeen;this.isRootSeen=!0;for(var n=t.body,l=0,c=n.length;c>l;l++){var u=n[l],h=this.accept(u);if(h){var d=r(n,l,i),p=o(n,l,i),f=h.openStandalone&&d,g=h.closeStandalone&&p,m=h.inlineStandalone&&d&&p;h.close&&a(n,l,!0),h.open&&s(n,l,!0),e&&m&&(a(n,l),s(n,l)&&"PartialStatement"===u.type&&(u.indent=/([ \t]+$)/.exec(n[l-1].original)[1])),e&&f&&(a((u.program||u.inverse).body),s(n,l)),e&&g&&(a(n,l),s((u.inverse||u.program).body))}}return t},n.prototype.BlockStatement=n.prototype.DecoratorBlock=n.prototype.PartialBlockStatement=function(t){this.accept(t.program),this.accept(t.inverse);var e=t.program||t.inverse,i=t.program&&t.inverse,n=i,l=i;if(i&&i.chained)for(n=i.body[0].program;l.chained;)l=l.body[l.body.length-1].program;var c={open:t.openStrip.open,close:t.closeStrip.close,openStandalone:o(e.body),closeStandalone:r((n||e).body)};if(t.openStrip.close&&a(e.body,null,!0),i){var u=t.inverseStrip;u.open&&s(e.body,null,!0),u.close&&a(n.body,null,!0),t.closeStrip.open&&s(l.body,null,!0),!this.options.ignoreStandalone&&r(e.body)&&o(n.body)&&(s(e.body),a(n.body))}else t.closeStrip.open&&s(e.body,null,!0);return c},n.prototype.Decorator=n.prototype.MustacheStatement=function(t){return t.strip},n.prototype.PartialStatement=n.prototype.CommentStatement=function(t){var e=t.strip||{};return{inlineStandalone:!0,open:e.open,close:e.close}},e["default"]=n,t.exports=e["default"]},function(t,e,i){"use strict";function n(){this.parents=[]}function r(t){this.acceptRequired(t,"path"),this.acceptArray(t.params),this.acceptKey(t,"hash")}function o(t){r.call(this,t),this.acceptKey(t,"program"),this.acceptKey(t,"inverse")}function a(t){this.acceptRequired(t,"name"),this.acceptArray(t.params),this.acceptKey(t,"hash")}var s=i(1)["default"];e.__esModule=!0;var l=i(6),c=s(l);n.prototype={constructor:n,mutating:!1,acceptKey:function(t,e){var i=this.accept(t[e]);if(this.mutating){if(i&&!n.prototype[i.type])throw new c["default"]('Unexpected node type "'+i.type+'" found when accepting '+e+" on "+t.type);t[e]=i}},acceptRequired:function(t,e){if(this.acceptKey(t,e),!t[e])throw new c["default"](t.type+" requires "+e)},acceptArray:function(t){for(var e=0,i=t.length;i>e;e++)this.acceptKey(t,e),t[e]||(t.splice(e,1),e--,i--)},accept:function(t){if(t){if(!this[t.type])throw new c["default"]("Unknown type: "+t.type,t);this.current&&this.parents.unshift(this.current),this.current=t;var e=this[t.type](t);return this.current=this.parents.shift(),!this.mutating||e?e:e!==!1?t:void 0}},Program:function(t){this.acceptArray(t.body)},MustacheStatement:r,Decorator:r,BlockStatement:o,DecoratorBlock:o,PartialStatement:a,PartialBlockStatement:function(t){a.call(this,t),this.acceptKey(t,"program")},ContentStatement:function(){},CommentStatement:function(){},SubExpression:r,PathExpression:function(){},StringLiteral:function(){},NumberLiteral:function(){},BooleanLiteral:function(){},UndefinedLiteral:function(){},NullLiteral:function(){},Hash:function(t){this.acceptArray(t.pairs)},HashPair:function(t){this.acceptRequired(t,"value")}},e["default"]=n,t.exports=e["default"]},function(t,e,i){"use strict";function n(t,e){if(e=e.path?e.path.original:e,t.path.original!==e){var i={loc:t.path.loc};throw new m["default"](t.path.original+" doesn't match "+e,i)}}function r(t,e){this.source=t,this.start={line:e.first_line,column:e.first_column},this.end={line:e.last_line,column:e.last_column}}function o(t){return/^\[.*\]$/.test(t)?t.substr(1,t.length-2):t}function a(t,e){return{open:"~"===t.charAt(2),close:"~"===e.charAt(e.length-3)}}function s(t){return t.replace(/^\{\{~?\!-?-?/,"").replace(/-?-?~?\}\}$/,"")}function l(t,e,i){i=this.locInfo(i);for(var n=t?"@":"",r=[],o=0,a="",s=0,l=e.length;l>s;s++){var c=e[s].part,u=e[s].original!==c;if(n+=(e[s].separator||"")+c,u||".."!==c&&"."!==c&&"this"!==c)r.push(c);else{if(r.length>0)throw new m["default"]("Invalid path: "+n,{loc:i});".."===c&&(o++,a+="../")}}return{type:"PathExpression",data:t,depth:o,parts:r,original:n,loc:i}}function c(t,e,i,n,r,o){var a=n.charAt(3)||n.charAt(2),s="{"!==a&&"&"!==a,l=/\*/.test(n);return{type:l?"Decorator":"MustacheStatement",path:t,params:e,hash:i,escaped:s,strip:r,loc:this.locInfo(o)}}function u(t,e,i,r){n(t,i),r=this.locInfo(r);var o={type:"Program",body:e,strip:{},loc:r};return{type:"BlockStatement",path:t.path,params:t.params,hash:t.hash,program:o,openStrip:{},inverseStrip:{},closeStrip:{},loc:r}}function h(t,e,i,r,o,a){r&&r.path&&n(t,r);var s=/\*/.test(t.open);e.blockParams=t.blockParams;var l=void 0,c=void 0;if(i){if(s)throw new m["default"]("Unexpected inverse block on decorator",i);i.chain&&(i.program.body[0].closeStrip=r.strip),c=i.strip,l=i.program}return o&&(o=l,l=e,e=o),{type:s?"DecoratorBlock":"BlockStatement",path:t.path,params:t.params,hash:t.hash,program:e,inverse:l,openStrip:t.strip,inverseStrip:c,closeStrip:r&&r.strip,loc:this.locInfo(a)}}function d(t,e){if(!e&&t.length){var i=t[0].loc,n=t[t.length-1].loc;i&&n&&(e={source:i.source,start:{line:i.start.line,column:i.start.column},end:{line:n.end.line,column:n.end.column}})}return{type:"Program",body:t,strip:{},loc:e}}function p(t,e,i,r){return n(t,i),{type:"PartialBlockStatement",name:t.path,params:t.params,hash:t.hash,program:e,openStrip:t.strip,closeStrip:i&&i.strip,loc:this.locInfo(r)}}var f=i(1)["default"];e.__esModule=!0,e.SourceLocation=r,e.id=o,e.stripFlags=a,e.stripComment=s,e.preparePath=l,e.prepareMustache=c,e.prepareRawBlock=u,e.prepareBlock=h,e.prepareProgram=d,e.preparePartialBlock=p;var g=i(6),m=f(g)},function(t,e,i){"use strict";function n(){}function r(t,e,i){if(null==t||"string"!=typeof t&&"Program"!==t.type)throw new u["default"]("You must pass a string or Handlebars AST to Handlebars.precompile. You passed "+t);e=e||{},"data"in e||(e.data=!0),e.compat&&(e.useDepths=!0);var n=i.parse(t,e),r=(new i.Compiler).compile(n,e);return(new i.JavaScriptCompiler).compile(r,e)}function o(t,e,i){function n(){var n=i.parse(t,e),r=(new i.Compiler).compile(n,e),o=(new i.JavaScriptCompiler).compile(r,e,void 0,!0);return i.template(o)}function r(t,e){return o||(o=n()),o.call(this,t,e)}if(void 0===e&&(e={}),null==t||"string"!=typeof t&&"Program"!==t.type)throw new u["default"]("You must pass a string or Handlebars AST to Handlebars.compile. You passed "+t);"data"in e||(e.data=!0),e.compat&&(e.useDepths=!0);var o=void 0;return r._setup=function(t){return o||(o=n()),o._setup(t)},r._child=function(t,e,i,r){return o||(o=n()),o._child(t,e,i,r)},r}function a(t,e){if(t===e)return!0;if(h.isArray(t)&&h.isArray(e)&&t.length===e.length){for(var i=0;i<t.length;i++)if(!a(t[i],e[i]))return!1;return!0}}function s(t){if(!t.path.parts){var e=t.path;t.path={type:"PathExpression",data:!1,depth:0,parts:[e.original+""],original:e.original+"",loc:e.loc}}}var l=i(1)["default"];e.__esModule=!0,e.Compiler=n,e.precompile=r,e.compile=o;var c=i(6),u=l(c),h=i(5),d=i(21),p=l(d),f=[].slice;n.prototype={compiler:n,equals:function(t){var e=this.opcodes.length;if(t.opcodes.length!==e)return!1;for(var i=0;e>i;i++){var n=this.opcodes[i],r=t.opcodes[i];if(n.opcode!==r.opcode||!a(n.args,r.args))return!1}e=this.children.length;for(var i=0;e>i;i++)if(!this.children[i].equals(t.children[i]))return!1;return!0},guid:0,compile:function(t,e){this.sourceNode=[],this.opcodes=[],this.children=[],this.options=e,this.stringParams=e.stringParams,this.trackIds=e.trackIds,e.blockParams=e.blockParams||[];var i=e.knownHelpers;if(e.knownHelpers={helperMissing:!0,blockHelperMissing:!0,each:!0,"if":!0,unless:!0,"with":!0,log:!0,lookup:!0},i)for(var n in i)n in i&&(e.knownHelpers[n]=i[n]);return this.accept(t)},compileProgram:function(t){var e=new this.compiler,i=e.compile(t,this.options),n=this.guid++;return this.usePartial=this.usePartial||i.usePartial,this.children[n]=i,this.useDepths=this.useDepths||i.useDepths,n},accept:function(t){if(!this[t.type])throw new u["default"]("Unknown type: "+t.type,t);this.sourceNode.unshift(t);var e=this[t.type](t);return this.sourceNode.shift(),e},Program:function(t){this.options.blockParams.unshift(t.blockParams);for(var e=t.body,i=e.length,n=0;i>n;n++)this.accept(e[n]);return this.options.blockParams.shift(),this.isSimple=1===i,this.blockParams=t.blockParams?t.blockParams.length:0,this},BlockStatement:function(t){s(t);var e=t.program,i=t.inverse;e=e&&this.compileProgram(e),i=i&&this.compileProgram(i);var n=this.classifySexpr(t);"helper"===n?this.helperSexpr(t,e,i):"simple"===n?(this.simpleSexpr(t),this.opcode("pushProgram",e),this.opcode("pushProgram",i),this.opcode("emptyHash"),this.opcode("blockValue",t.path.original)):(this.ambiguousSexpr(t,e,i),this.opcode("pushProgram",e),this.opcode("pushProgram",i),this.opcode("emptyHash"),this.opcode("ambiguousBlockValue")),this.opcode("append")},DecoratorBlock:function(t){var e=t.program&&this.compileProgram(t.program),i=this.setupFullMustacheParams(t,e,void 0),n=t.path;this.useDecorators=!0,this.opcode("registerDecorator",i.length,n.original)},PartialStatement:function(t){this.usePartial=!0;var e=t.program;e&&(e=this.compileProgram(t.program));var i=t.params;if(i.length>1)throw new u["default"]("Unsupported number of partial arguments: "+i.length,t);i.length||(this.options.explicitPartialContext?this.opcode("pushLiteral","undefined"):i.push({type:"PathExpression",parts:[],depth:0}));var n=t.name.original,r="SubExpression"===t.name.type;r&&this.accept(t.name),this.setupFullMustacheParams(t,e,void 0,!0);var o=t.indent||"";this.options.preventIndent&&o&&(this.opcode("appendContent",o),o=""),this.opcode("invokePartial",r,n,o),this.opcode("append")},PartialBlockStatement:function(t){this.PartialStatement(t)},MustacheStatement:function(t){this.SubExpression(t),t.escaped&&!this.options.noEscape?this.opcode("appendEscaped"):this.opcode("append")},Decorator:function(t){this.DecoratorBlock(t)},ContentStatement:function(t){t.value&&this.opcode("appendContent",t.value)},CommentStatement:function(){},SubExpression:function(t){s(t);var e=this.classifySexpr(t);"simple"===e?this.simpleSexpr(t):"helper"===e?this.helperSexpr(t):this.ambiguousSexpr(t)},ambiguousSexpr:function(t,e,i){var n=t.path,r=n.parts[0],o=null!=e||null!=i;this.opcode("getContext",n.depth),this.opcode("pushProgram",e),this.opcode("pushProgram",i),n.strict=!0,this.accept(n),this.opcode("invokeAmbiguous",r,o)},simpleSexpr:function(t){var e=t.path;e.strict=!0,this.accept(e),this.opcode("resolvePossibleLambda")},helperSexpr:function(t,e,i){var n=this.setupFullMustacheParams(t,e,i),r=t.path,o=r.parts[0];if(this.options.knownHelpers[o])this.opcode("invokeKnownHelper",n.length,o);else{if(this.options.knownHelpersOnly)throw new u["default"]("You specified knownHelpersOnly, but used the unknown helper "+o,t);r.strict=!0,r.falsy=!0,this.accept(r),this.opcode("invokeHelper",n.length,r.original,p["default"].helpers.simpleId(r))}},PathExpression:function(t){this.addDepth(t.depth),this.opcode("getContext",t.depth);var e=t.parts[0],i=p["default"].helpers.scopedId(t),n=!t.depth&&!i&&this.blockParamIndex(e);n?this.opcode("lookupBlockParam",n,t.parts):e?t.data?(this.options.data=!0,this.opcode("lookupData",t.depth,t.parts,t.strict)):this.opcode("lookupOnContext",t.parts,t.falsy,t.strict,i):this.opcode("pushContext")},StringLiteral:function(t){this.opcode("pushString",t.value)},NumberLiteral:function(t){this.opcode("pushLiteral",t.value)},BooleanLiteral:function(t){this.opcode("pushLiteral",t.value)},UndefinedLiteral:function(){this.opcode("pushLiteral","undefined")},NullLiteral:function(){this.opcode("pushLiteral","null")},Hash:function(t){var e=t.pairs,i=0,n=e.length;for(this.opcode("pushHash");n>i;i++)this.pushParam(e[i].value);for(;i--;)this.opcode("assignToHash",e[i].key);this.opcode("popHash")},opcode:function(t){this.opcodes.push({opcode:t,args:f.call(arguments,1),loc:this.sourceNode[0].loc})},addDepth:function(t){t&&(this.useDepths=!0)},classifySexpr:function(t){var e=p["default"].helpers.simpleId(t.path),i=e&&!!this.blockParamIndex(t.path.parts[0]),n=!i&&p["default"].helpers.helperExpression(t),r=!i&&(n||e);if(r&&!n){var o=t.path.parts[0],a=this.options;a.knownHelpers[o]?n=!0:a.knownHelpersOnly&&(r=!1)}return n?"helper":r?"ambiguous":"simple"},pushParams:function(t){for(var e=0,i=t.length;i>e;e++)this.pushParam(t[e])},pushParam:function(t){var e=null!=t.value?t.value:t.original||"";if(this.stringParams)e.replace&&(e=e.replace(/^(\.?\.\/)*/g,"").replace(/\//g,".")),t.depth&&this.addDepth(t.depth),this.opcode("getContext",t.depth||0),this.opcode("pushStringParam",e,t.type),"SubExpression"===t.type&&this.accept(t);else{if(this.trackIds){var i=void 0;if(!t.parts||p["default"].helpers.scopedId(t)||t.depth||(i=this.blockParamIndex(t.parts[0])),i){var n=t.parts.slice(1).join(".");this.opcode("pushId","BlockParam",i,n)}else e=t.original||e,e.replace&&(e=e.replace(/^this(?:\.|$)/,"").replace(/^\.\//,"").replace(/^\.$/,"")),this.opcode("pushId",t.type,e)}this.accept(t)}},setupFullMustacheParams:function(t,e,i,n){var r=t.params;return this.pushParams(r),this.opcode("pushProgram",e),this.opcode("pushProgram",i),t.hash?this.accept(t.hash):this.opcode("emptyHash",n),r},blockParamIndex:function(t){for(var e=0,i=this.options.blockParams.length;i>e;e++){var n=this.options.blockParams[e],r=n&&h.indexOf(n,t);if(n&&r>=0)return[e,r]}}}},function(t,e,i){"use strict";function n(t){this.value=t}function r(){}function o(t,e,i,n){var r=e.popStack(),o=0,a=i.length;for(t&&a--;a>o;o++)r=e.nameLookup(r,i[o],n);return t?[e.aliasable("container.strict"),"(",r,", ",e.quotedString(i[o]),")"]:r}var a=i(1)["default"];e.__esModule=!0;var s=i(4),l=i(6),c=a(l),u=i(5),h=i(29),d=a(h);r.prototype={nameLookup:function(t,e){return r.isValidJavaScriptVariableName(e)?[t,".",e]:[t,"[",JSON.stringify(e),"]"]},depthedLookup:function(t){return[this.aliasable("container.lookup"),'(depths, "',t,'")']},compilerInfo:function(){var t=s.COMPILER_REVISION,e=s.REVISION_CHANGES[t];return[t,e]},appendToBuffer:function(t,e,i){return u.isArray(t)||(t=[t]),t=this.source.wrap(t,e),this.environment.isSimple?["return ",t,";"]:i?["buffer += ",t,";"]:(t.appendToBuffer=!0,t)},initializeBuffer:function(){return this.quotedString("")},compile:function(t,e,i,n){this.environment=t,this.options=e,this.stringParams=this.options.stringParams,this.trackIds=this.options.trackIds,this.precompile=!n,this.name=this.environment.name,this.isChild=!!i,this.context=i||{decorators:[],programs:[],environments:[]},this.preamble(),this.stackSlot=0,this.stackVars=[],this.aliases={},this.registers={list:[]},this.hashes=[],this.compileStack=[],this.inlineStack=[],this.blockParams=[],this.compileChildren(t,e),this.useDepths=this.useDepths||t.useDepths||t.useDecorators||this.options.compat,this.useBlockParams=this.useBlockParams||t.useBlockParams;var r=t.opcodes,o=void 0,a=void 0,s=void 0,l=void 0;for(s=0,l=r.length;l>s;s++)o=r[s],this.source.currentLocation=o.loc,a=a||o.loc,this[o.opcode].apply(this,o.args);if(this.source.currentLocation=a,this.pushSource(""),this.stackSlot||this.inlineStack.length||this.compileStack.length)throw new c["default"]("Compile completed with content left on stack");this.decorators.isEmpty()?this.decorators=void 0:(this.useDecorators=!0,this.decorators.prepend("var decorators = container.decorators;\n"),this.decorators.push("return fn;"),n?this.decorators=Function.apply(this,["fn","props","container","depth0","data","blockParams","depths",this.decorators.merge()]):(this.decorators.prepend("function(fn, props, container, depth0, data, blockParams, depths) {\n"),this.decorators.push("}\n"),this.decorators=this.decorators.merge()));var u=this.createFunctionContext(n);if(this.isChild)return u;var h={compiler:this.compilerInfo(),main:u};this.decorators&&(h.main_d=this.decorators,h.useDecorators=!0);var d=this.context,p=d.programs,f=d.decorators;for(s=0,l=p.length;l>s;s++)p[s]&&(h[s]=p[s],f[s]&&(h[s+"_d"]=f[s],h.useDecorators=!0));return this.environment.usePartial&&(h.usePartial=!0),this.options.data&&(h.useData=!0),this.useDepths&&(h.useDepths=!0),this.useBlockParams&&(h.useBlockParams=!0),this.options.compat&&(h.compat=!0),n?h.compilerOptions=this.options:(h.compiler=JSON.stringify(h.compiler),this.source.currentLocation={start:{line:1,column:0}},h=this.objectLiteral(h),e.srcName?(h=h.toStringWithSourceMap({file:e.destName}),h.map=h.map&&h.map.toString()):h=h.toString()),h},preamble:function(){this.lastContext=0,this.source=new d["default"](this.options.srcName),this.decorators=new d["default"](this.options.srcName)},createFunctionContext:function(t){var e="",i=this.stackVars.concat(this.registers.list);i.length>0&&(e+=", "+i.join(", "));var n=0;for(var r in this.aliases){var o=this.aliases[r];this.aliases.hasOwnProperty(r)&&o.children&&o.referenceCount>1&&(e+=", alias"+ ++n+"="+r,o.children[0]="alias"+n)}var a=["container","depth0","helpers","partials","data"];(this.useBlockParams||this.useDepths)&&a.push("blockParams"),this.useDepths&&a.push("depths");var s=this.mergeSource(e);return t?(a.push(s),Function.apply(this,a)):this.source.wrap(["function(",a.join(","),") {\n  ",s,"}"])},mergeSource:function(t){var e=this.environment.isSimple,i=!this.forceBuffer,n=void 0,r=void 0,o=void 0,a=void 0;return this.source.each(function(t){t.appendToBuffer?(o?t.prepend("  + "):o=t,a=t):(o&&(r?o.prepend("buffer += "):n=!0,a.add(";"),o=a=void 0),r=!0,e||(i=!1))}),i?o?(o.prepend("return "),a.add(";")):r||this.source.push('return "";'):(t+=", buffer = "+(n?"":this.initializeBuffer()),o?(o.prepend("return buffer + "),a.add(";")):this.source.push("return buffer;")),t&&this.source.prepend("var "+t.substring(2)+(n?"":";\n")),this.source.merge()},blockValue:function(t){var e=this.aliasable("helpers.blockHelperMissing"),i=[this.contextName(0)];this.setupHelperArgs(t,0,i);var n=this.popStack();i.splice(1,0,n),this.push(this.source.functionCall(e,"call",i))},ambiguousBlockValue:function(){var t=this.aliasable("helpers.blockHelperMissing"),e=[this.contextName(0)];this.setupHelperArgs("",0,e,!0),this.flushInline();var i=this.topStack();e.splice(1,0,i),this.pushSource(["if (!",this.lastHelper,") { ",i," = ",this.source.functionCall(t,"call",e),"}"])},appendContent:function(t){this.pendingContent?t=this.pendingContent+t:this.pendingLocation=this.source.currentLocation,this.pendingContent=t},append:function(){if(this.isInline())this.replaceStack(function(t){return[" != null ? ",t,' : ""']}),this.pushSource(this.appendToBuffer(this.popStack()));else{var t=this.popStack();this.pushSource(["if (",t," != null) { ",this.appendToBuffer(t,void 0,!0)," }"]),this.environment.isSimple&&this.pushSource(["else { ",this.appendToBuffer("''",void 0,!0)," }"])}},appendEscaped:function(){this.pushSource(this.appendToBuffer([this.aliasable("container.escapeExpression"),"(",this.popStack(),")"]))},getContext:function(t){this.lastContext=t},pushContext:function(){this.pushStackLiteral(this.contextName(this.lastContext))},lookupOnContext:function(t,e,i,n){var r=0;n||!this.options.compat||this.lastContext?this.pushContext():this.push(this.depthedLookup(t[r++])),this.resolvePath("context",t,r,e,i)},lookupBlockParam:function(t,e){this.useBlockParams=!0,this.push(["blockParams[",t[0],"][",t[1],"]"]),this.resolvePath("context",e,1)},lookupData:function(t,e,i){t?this.pushStackLiteral("container.data(data, "+t+")"):this.pushStackLiteral("data"),this.resolvePath("data",e,0,!0,i)},resolvePath:function(t,e,i,n,r){var a=this;if(this.options.strict||this.options.assumeObjects)return void this.push(o(this.options.strict&&r,this,e,t));for(var s=e.length;s>i;i++)this.replaceStack(function(r){var o=a.nameLookup(r,e[i],t);return n?[" && ",o]:[" != null ? ",o," : ",r]})},resolvePossibleLambda:function(){this.push([this.aliasable("container.lambda"),"(",this.popStack(),", ",this.contextName(0),")"])},pushStringParam:function(t,e){this.pushContext(),this.pushString(e),"SubExpression"!==e&&("string"==typeof t?this.pushString(t):this.pushStackLiteral(t))},emptyHash:function(t){this.trackIds&&this.push("{}"),this.stringParams&&(this.push("{}"),this.push("{}")),this.pushStackLiteral(t?"undefined":"{}")},pushHash:function(){this.hash&&this.hashes.push(this.hash),this.hash={values:[],types:[],contexts:[],ids:[]}},popHash:function(){var t=this.hash;this.hash=this.hashes.pop(),this.trackIds&&this.push(this.objectLiteral(t.ids)),this.stringParams&&(this.push(this.objectLiteral(t.contexts)),this.push(this.objectLiteral(t.types))),this.push(this.objectLiteral(t.values))},pushString:function(t){this.pushStackLiteral(this.quotedString(t))},pushLiteral:function(t){this.pushStackLiteral(t)},pushProgram:function(t){null!=t?this.pushStackLiteral(this.programExpression(t)):this.pushStackLiteral(null)},registerDecorator:function(t,e){var i=this.nameLookup("decorators",e,"decorator"),n=this.setupHelperArgs(e,t);this.decorators.push(["fn = ",this.decorators.functionCall(i,"",["fn","props","container",n])," || fn;"])},invokeHelper:function(t,e,i){var n=this.popStack(),r=this.setupHelper(t,e),o=i?[r.name," || "]:"",a=["("].concat(o,n);this.options.strict||a.push(" || ",this.aliasable("helpers.helperMissing")),a.push(")"),this.push(this.source.functionCall(a,"call",r.callParams))},invokeKnownHelper:function(t,e){var i=this.setupHelper(t,e);this.push(this.source.functionCall(i.name,"call",i.callParams))},invokeAmbiguous:function(t,e){this.useRegister("helper");var i=this.popStack();this.emptyHash();var n=this.setupHelper(0,t,e),r=this.lastHelper=this.nameLookup("helpers",t,"helper"),o=["(","(helper = ",r," || ",i,")"];this.options.strict||(o[0]="(helper = ",o.push(" != null ? helper : ",this.aliasable("helpers.helperMissing"))),this.push(["(",o,n.paramsInit?["),(",n.paramsInit]:[],"),","(typeof helper === ",this.aliasable('"function"')," ? ",this.source.functionCall("helper","call",n.callParams)," : helper))"])},invokePartial:function(t,e,i){var n=[],r=this.setupParams(e,1,n);t&&(e=this.popStack(),delete r.name),i&&(r.indent=JSON.stringify(i)),r.helpers="helpers",r.partials="partials",r.decorators="container.decorators",t?n.unshift(e):n.unshift(this.nameLookup("partials",e,"partial")),this.options.compat&&(r.depths="depths"),r=this.objectLiteral(r),n.push(r),this.push(this.source.functionCall("container.invokePartial","",n))},assignToHash:function(t){var e=this.popStack(),i=void 0,n=void 0,r=void 0;this.trackIds&&(r=this.popStack()),this.stringParams&&(n=this.popStack(),i=this.popStack());var o=this.hash;i&&(o.contexts[t]=i),n&&(o.types[t]=n),r&&(o.ids[t]=r),o.values[t]=e},pushId:function(t,e,i){"BlockParam"===t?this.pushStackLiteral("blockParams["+e[0]+"].path["+e[1]+"]"+(i?" + "+JSON.stringify("."+i):"")):"PathExpression"===t?this.pushString(e):"SubExpression"===t?this.pushStackLiteral("true"):this.pushStackLiteral("null")},compiler:r,compileChildren:function(t,e){for(var i=t.children,n=void 0,r=void 0,o=0,a=i.length;a>o;o++){n=i[o],r=new this.compiler;var s=this.matchExistingProgram(n);null==s?(this.context.programs.push(""),s=this.context.programs.length,n.index=s,n.name="program"+s,this.context.programs[s]=r.compile(n,e,this.context,!this.precompile),this.context.decorators[s]=r.decorators,this.context.environments[s]=n,this.useDepths=this.useDepths||r.useDepths,this.useBlockParams=this.useBlockParams||r.useBlockParams):(n.index=s,n.name="program"+s,this.useDepths=this.useDepths||n.useDepths,this.useBlockParams=this.useBlockParams||n.useBlockParams)}},matchExistingProgram:function(t){for(var e=0,i=this.context.environments.length;i>e;e++){var n=this.context.environments[e];if(n&&n.equals(t))return e}},programExpression:function(t){var e=this.environment.children[t],i=[e.index,"data",e.blockParams];return(this.useBlockParams||this.useDepths)&&i.push("blockParams"),this.useDepths&&i.push("depths"),"container.program("+i.join(", ")+")"},useRegister:function(t){this.registers[t]||(this.registers[t]=!0,this.registers.list.push(t))},push:function(t){return t instanceof n||(t=this.source.wrap(t)),this.inlineStack.push(t),t},pushStackLiteral:function(t){this.push(new n(t))},pushSource:function(t){this.pendingContent&&(this.source.push(this.appendToBuffer(this.source.quotedString(this.pendingContent),this.pendingLocation)),this.pendingContent=void 0),t&&this.source.push(t)},replaceStack:function(t){var e=["("],i=void 0,r=void 0,o=void 0;if(!this.isInline())throw new c["default"]("replaceStack on non-inline");var a=this.popStack(!0);if(a instanceof n)i=[a.value],e=["(",i],o=!0;else{r=!0;var s=this.incrStack();e=["((",this.push(s)," = ",a,")"],i=this.topStack()}var l=t.call(this,i);o||this.popStack(),r&&this.stackSlot--,this.push(e.concat(l,")"))},incrStack:function(){return this.stackSlot++,this.stackSlot>this.stackVars.length&&this.stackVars.push("stack"+this.stackSlot),this.topStackName()},topStackName:function(){return"stack"+this.stackSlot},flushInline:function(){var t=this.inlineStack;this.inlineStack=[];for(var e=0,i=t.length;i>e;e++){var r=t[e];if(r instanceof n)this.compileStack.push(r);else{var o=this.incrStack();this.pushSource([o," = ",r,";"]),this.compileStack.push(o)}}},isInline:function(){return this.inlineStack.length},popStack:function(t){var e=this.isInline(),i=(e?this.inlineStack:this.compileStack).pop();if(!t&&i instanceof n)return i.value;if(!e){if(!this.stackSlot)throw new c["default"]("Invalid stack pop");this.stackSlot--}return i},topStack:function(){var t=this.isInline()?this.inlineStack:this.compileStack,e=t[t.length-1];return e instanceof n?e.value:e},contextName:function(t){return this.useDepths&&t?"depths["+t+"]":"depth"+t},quotedString:function(t){return this.source.quotedString(t)},objectLiteral:function(t){return this.source.objectLiteral(t)},aliasable:function(t){var e=this.aliases[t];return e?(e.referenceCount++,e):(e=this.aliases[t]=this.source.wrap(t),e.aliasable=!0,e.referenceCount=1,e)},setupHelper:function(t,e,i){var n=[],r=this.setupHelperArgs(e,t,n,i),o=this.nameLookup("helpers",e,"helper"),a=this.aliasable(this.contextName(0)+" != null ? "+this.contextName(0)+" : {}");return{params:n,paramsInit:r,name:o,callParams:[a].concat(n)}},setupParams:function(t,e,i){var n={},r=[],o=[],a=[],s=!i,l=void 0;s&&(i=[]),n.name=this.quotedString(t),n.hash=this.popStack(),this.trackIds&&(n.hashIds=this.popStack()),this.stringParams&&(n.hashTypes=this.popStack(),n.hashContexts=this.popStack());var c=this.popStack(),u=this.popStack();(u||c)&&(n.fn=u||"container.noop",n.inverse=c||"container.noop");for(var h=e;h--;)l=this.popStack(),i[h]=l,this.trackIds&&(a[h]=this.popStack()),this.stringParams&&(o[h]=this.popStack(),r[h]=this.popStack());return s&&(n.args=this.source.generateArray(i)),this.trackIds&&(n.ids=this.source.generateArray(a)),this.stringParams&&(n.types=this.source.generateArray(o),n.contexts=this.source.generateArray(r)),this.options.data&&(n.data="data"),this.useBlockParams&&(n.blockParams="blockParams"),n},setupHelperArgs:function(t,e,i,n){var r=this.setupParams(t,e,i);return r=this.objectLiteral(r),n?(this.useRegister("options"),i.push("options"),["options=",r]):i?(i.push(r),""):r}},function(){for(var t="break else new var case finally return void catch for switch while continue function this with default if throw delete in try do instanceof typeof abstract enum int short boolean export interface static byte extends long super char final native synchronized class float package throws const goto private transient debugger implements protected volatile double import public let yield await null true false".split(" "),e=r.RESERVED_WORDS={},i=0,n=t.length;n>i;i++)e[t[i]]=!0}(),r.isValidJavaScriptVariableName=function(t){return!r.RESERVED_WORDS[t]&&/^[a-zA-Z_$][0-9a-zA-Z_$]*$/.test(t)},e["default"]=r,t.exports=e["default"]},function(t,e,i){"use strict";function n(t,e,i){if(o.isArray(t)){for(var n=[],r=0,a=t.length;a>r;r++)n.push(e.wrap(t[r],i));return n}return"boolean"==typeof t||"number"==typeof t?t+"":t}function r(t){this.srcFile=t,this.source=[]}e.__esModule=!0;var o=i(5),a=void 0;try{}catch(s){}a||(a=function(t,e,i,n){this.src="",n&&this.add(n)},a.prototype={add:function(t){o.isArray(t)&&(t=t.join("")),this.src+=t},prepend:function(t){o.isArray(t)&&(t=t.join("")),this.src=t+this.src},toStringWithSourceMap:function(){return{code:this.toString()}},toString:function(){return this.src}}),r.prototype={isEmpty:function(){return!this.source.length},prepend:function(t,e){this.source.unshift(this.wrap(t,e))},push:function(t,e){this.source.push(this.wrap(t,e))},merge:function(){var t=this.empty();return this.each(function(e){t.add(["  ",e,"\n"])}),t},each:function(t){for(var e=0,i=this.source.length;i>e;e++)t(this.source[e])},empty:function(){var t=this.currentLocation||{start:{}};return new a(t.start.line,t.start.column,this.srcFile)},wrap:function(t){var e=arguments.length<=1||void 0===arguments[1]?this.currentLocation||{start:{}}:arguments[1];return t instanceof a?t:(t=n(t,this,e),new a(e.start.line,e.start.column,this.srcFile,t))},functionCall:function(t,e,i){return i=this.generateList(i),this.wrap([t,e?"."+e+"(":"(",i,")"])},quotedString:function(t){return'"'+(t+"").replace(/\\/g,"\\\\").replace(/"/g,'\\"').replace(/\n/g,"\\n").replace(/\r/g,"\\r").replace(/\u2028/g,"\\u2028").replace(/\u2029/g,"\\u2029")+'"'},objectLiteral:function(t){var e=[];for(var i in t)if(t.hasOwnProperty(i)){var r=n(t[i],this);"undefined"!==r&&e.push([this.quotedString(i),":",r])}var o=this.generateList(e);return o.prepend("{"),o.add("}"),o},generateList:function(t){for(var e=this.empty(),i=0,r=t.length;r>i;i++)i&&e.add(","),e.add(n(t[i],this));return e},generateArray:function(t){var e=this.generateList(t);return e.prepend("["),e.add("]"),e}},e["default"]=r,t.exports=e["default"]}])}),function(t){t.Jcrop=function(e,i){function n(t){return Math.round(t)+"px"}function r(t){return O.baseClass+"-"+t}function o(){return t.fx.step.hasOwnProperty("backgroundColor")}function a(e){var i=t(e).offset();return[i.left,i.top]}function s(t){return[t.pageX-L[0],t.pageY-L[1]]}function l(e){"object"!=typeof e&&(e={}),O=t.extend(O,e),t.each(["onChange","onSelect","onRelease","onDblClick"],function(t,e){"function"!=typeof O[e]&&(O[e]=function(){})})}function c(t,e,i){if(L=a(V),ft.setCursor("move"===t?t:t+"-resize"),"move"===t)return ft.activateHandlers(h(e),m,i);var n=ht.getFixed(),r=d(t),o=ht.getCorner(d(r));ht.setPressed(ht.getCorner(r)),ht.setCurrent(o),ft.activateHandlers(u(t,n),m,i)}function u(t,e){return function(i){if(O.aspectRatio)switch(t){case"e":i[1]=e.y+1;break;case"w":i[1]=e.y+1;break;case"n":i[0]=e.x+1;break;case"s":i[0]=e.x+1}else switch(t){case"e":i[1]=e.y2;break;case"w":i[1]=e.y2;break;case"n":i[0]=e.x2;break;case"s":i[0]=e.x2}ht.setCurrent(i),pt.update()}}function h(t){var e=t;return gt.watchKeys(),function(t){ht.moveOffset([t[0]-e[0],t[1]-e[1]]),
e=t,pt.update()}}function d(t){switch(t){case"n":return"sw";case"s":return"nw";case"e":return"nw";case"w":return"ne";case"ne":return"sw";case"nw":return"se";case"se":return"nw";case"sw":return"ne"}}function p(t){return function(e){return O.disabled?!1:"move"!==t||O.allowMove?(L=a(V),nt=!0,c(t,s(e)),e.stopPropagation(),e.preventDefault(),!1):!1}}function f(t,e,i){var n=t.width(),r=t.height();n>e&&e>0&&(n=e,r=e/t.width()*t.height()),r>i&&i>0&&(r=i,n=i/t.height()*t.width()),et=t.width()/n,it=t.height()/r,t.width(n).height(r)}function g(t){return{x:t.x*et,y:t.y*it,x2:t.x2*et,y2:t.y2*it,w:t.w*et,h:t.h*it}}function m(t){var e=ht.getFixed();e.w>O.minSelect[0]&&e.h>O.minSelect[1]?(pt.enableHandles(),pt.done()):pt.release(),ft.setCursor(O.allowSelect?"crosshair":"default")}function v(t){if(O.disabled)return!1;if(!O.allowSelect)return!1;nt=!0,L=a(V),pt.disableHandles(),ft.setCursor("crosshair");var e=s(t);return ht.setPressed(e),pt.update(),ft.activateHandlers(y,m,"touch"===t.type.substring(0,5)),gt.watchKeys(),t.stopPropagation(),t.preventDefault(),!1}function y(t){ht.setCurrent(t),pt.update()}function b(){var e=t("<div></div>").addClass(r("tracker"));return H&&e.css({opacity:0,backgroundColor:"white"}),e}function x(t){$.removeClass().addClass(r("holder")).addClass(t)}function k(t,e){function i(){window.setTimeout(y,h)}var n=t[0]/et,r=t[1]/it,o=t[2]/et,a=t[3]/it;if(!rt){var s=ht.flipCoords(n,r,o,a),l=ht.getFixed(),c=[l.x,l.y,l.x2,l.y2],u=c,h=O.animationDelay,d=s[0]-c[0],p=s[1]-c[1],f=s[2]-c[2],g=s[3]-c[3],m=0,v=O.swingSpeed;n=u[0],r=u[1],o=u[2],a=u[3],pt.animMode(!0);var y=function(){return function(){m+=(100-m)/v,u[0]=Math.round(n+m/100*d),u[1]=Math.round(r+m/100*p),u[2]=Math.round(o+m/100*f),u[3]=Math.round(a+m/100*g),m>=99.8&&(m=100),100>m?(_(u),i()):(pt.done(),pt.animMode(!1),"function"==typeof e&&e.call(mt))}}();i()}}function w(t){_([t[0]/et,t[1]/it,t[2]/et,t[3]/it]),O.onSelect.call(mt,g(ht.getFixed())),pt.enableHandles()}function _(t){ht.setPressed([t[0],t[1]]),ht.setCurrent([t[2],t[3]]),pt.update()}function S(){return g(ht.getFixed())}function C(){return ht.getFixed()}function D(t){l(t),N()}function P(){O.disabled=!0,pt.disableHandles(),pt.setCursor("default"),ft.setCursor("default")}function M(){O.disabled=!1,N()}function I(){pt.done(),ft.activateHandlers(null,null)}function T(){$.remove(),W.show(),W.css("visibility","visible"),t(e).removeData("Jcrop")}function A(t,e){pt.release(),P();var i=new Image;i.onload=function(){var n=i.width,r=i.height,o=O.boxWidth,a=O.boxHeight;V.width(n).height(r),V.attr("src",t),U.attr("src",t),f(V,o,a),q=V.width(),Y=V.height(),U.width(q).height(Y),st.width(q+2*at).height(Y+2*at),$.width(q).height(Y),dt.resize(q,Y),M(),"function"==typeof e&&e.call(mt)},i.src=t}function F(t,e,i){var n=e||O.bgColor;O.bgFade&&o()&&O.fadeTime&&!i?t.animate({backgroundColor:n},{queue:!1,duration:O.fadeTime}):t.css("backgroundColor",n)}function N(t){O.allowResize?t?pt.enableOnly():pt.enableHandles():pt.disableHandles(),ft.setCursor(O.allowSelect?"crosshair":"default"),pt.setCursor(O.allowMove?"move":"default"),O.hasOwnProperty("trueSize")&&(et=O.trueSize[0]/q,it=O.trueSize[1]/Y),O.hasOwnProperty("setSelect")&&(w(O.setSelect),pt.done(),delete O.setSelect),dt.refresh(),O.bgColor!=lt&&(F(O.shade?dt.getShades():$,O.shade?O.shadeColor||O.bgColor:O.bgColor),lt=O.bgColor),ct!=O.bgOpacity&&(ct=O.bgOpacity,O.shade?dt.refresh():pt.setBgOpacity(ct)),G=O.maxSize[0]||0,Q=O.maxSize[1]||0,Z=O.minSize[0]||0,tt=O.minSize[1]||0,O.hasOwnProperty("outerImage")&&(V.attr("src",O.outerImage),delete O.outerImage),pt.refresh()}var L,O=t.extend({},t.Jcrop.defaults),E=navigator.userAgent.toLowerCase(),H=/msie/.test(E),R=/msie [1-6]\./.test(E);"object"!=typeof e&&(e=t(e)[0]),"object"!=typeof i&&(i={}),l(i);var B={border:"none",visibility:"visible",margin:0,padding:0,position:"absolute",top:0,left:0},W=t(e),j=!0;if("IMG"==e.tagName){if(0!=W[0].width&&0!=W[0].height)W.width(W[0].width),W.height(W[0].height);else{var z=new Image;z.src=W[0].src,W.width(z.width),W.height(z.height)}var V=W.clone().removeAttr("id").css(B).show();V.width(W.width()),V.height(W.height()),W.after(V).hide()}else V=W.css(B).show(),j=!1,null===O.shade&&(O.shade=!0);f(V,O.boxWidth,O.boxHeight);var q=V.width(),Y=V.height(),$=t("<div />").width(q).height(Y).addClass(r("holder")).css({position:"relative",backgroundColor:O.bgColor}).insertAfter(W).append(V);O.addClass&&$.addClass(O.addClass);var U=t("<div />"),X=t("<div />").width("100%").height("100%").css({zIndex:310,position:"absolute",overflow:"hidden"}),K=t("<div />").width("100%").height("100%").css("zIndex",320),J=t("<div />").css({position:"absolute",zIndex:600}).dblclick(function(){var t=ht.getFixed();O.onDblClick.call(mt,t)}).insertBefore(V).append(X,K);j&&(U=t("<img />").attr("src",V.attr("src")).css(B).width(q).height(Y),X.append(U)),R&&J.css({overflowY:"hidden"});var G,Q,Z,tt,et,it,nt,rt,ot,at=O.boundary,st=b().width(q+2*at).height(Y+2*at).css({position:"absolute",top:n(-at),left:n(-at),zIndex:290}).mousedown(v),lt=O.bgColor,ct=O.bgOpacity;L=a(V);var ut=function(){function t(){var t,e={},i=["touchstart","touchmove","touchend"],n=document.createElement("div");try{for(t=0;t<i.length;t++){var r=i[t];r="on"+r;var o=r in n;o||(n.setAttribute(r,"return;"),o="function"==typeof n[r]),e[i[t]]=o}return e.touchstart&&e.touchend&&e.touchmove}catch(a){return!1}}function e(){return O.touchSupport===!0||O.touchSupport===!1?O.touchSupport:t()}return{createDragger:function(t){return function(e){return O.disabled?!1:"move"!==t||O.allowMove?(L=a(V),nt=!0,c(t,s(ut.cfilter(e)),!0),e.stopPropagation(),e.preventDefault(),!1):!1}},newSelection:function(t){return v(ut.cfilter(t))},cfilter:function(t){return t.pageX=t.originalEvent.changedTouches[0].pageX,t.pageY=t.originalEvent.changedTouches[0].pageY,t},isSupported:t,support:e()}}(),ht=function(){function t(t){t=a(t),f=d=t[0],g=p=t[1]}function e(t){t=a(t),u=t[0]-f,h=t[1]-g,f=t[0],g=t[1]}function i(){return[u,h]}function n(t){var e=t[0],i=t[1];0>d+e&&(e-=e+d),0>p+i&&(i-=i+p),g+i>Y&&(i+=Y-(g+i)),f+e>q&&(e+=q-(f+e)),d+=e,f+=e,p+=i,g+=i}function r(t){var e=o();switch(t){case"ne":return[e.x2,e.y];case"nw":return[e.x,e.y];case"se":return[e.x2,e.y2];case"sw":return[e.x,e.y2]}}function o(){if(!O.aspectRatio)return l();var t,e,i,n,r=O.aspectRatio,o=O.minSize[0]/et,a=O.maxSize[0]/et,u=O.maxSize[1]/it,h=f-d,m=g-p,v=Math.abs(h),y=Math.abs(m),b=v/y;return 0===a&&(a=10*q),0===u&&(u=10*Y),r>b?(e=g,i=y*r,t=0>h?d-i:i+d,0>t?(t=0,n=Math.abs((t-d)/r),e=0>m?p-n:n+p):t>q&&(t=q,n=Math.abs((t-d)/r),e=0>m?p-n:n+p)):(t=f,n=v/r,e=0>m?p-n:p+n,0>e?(e=0,i=Math.abs((e-p)*r),t=0>h?d-i:i+d):e>Y&&(e=Y,i=Math.abs(e-p)*r,t=0>h?d-i:i+d)),t>d?(o>t-d?t=d+o:t-d>a&&(t=d+a),e=e>p?p+(t-d)/r:p-(t-d)/r):d>t&&(o>d-t?t=d-o:d-t>a&&(t=d-a),e=e>p?p+(d-t)/r:p-(d-t)/r),0>t?(d-=t,t=0):t>q&&(d-=t-q,t=q),0>e?(p-=e,e=0):e>Y&&(p-=e-Y,e=Y),c(s(d,p,t,e))}function a(t){return t[0]<0&&(t[0]=0),t[1]<0&&(t[1]=0),t[0]>q&&(t[0]=q),t[1]>Y&&(t[1]=Y),[Math.round(t[0]),Math.round(t[1])]}function s(t,e,i,n){var r=t,o=i,a=e,s=n;return t>i&&(r=i,o=t),e>n&&(a=n,s=e),[r,a,o,s]}function l(){var t,e=f-d,i=g-p;return G&&Math.abs(e)>G&&(f=e>0?d+G:d-G),Q&&Math.abs(i)>Q&&(g=i>0?p+Q:p-Q),tt/it&&Math.abs(i)<tt/it&&(g=i>0?p+tt/it:p-tt/it),Z/et&&Math.abs(e)<Z/et&&(f=e>0?d+Z/et:d-Z/et),0>d&&(f-=d,d-=d),0>p&&(g-=p,p-=p),0>f&&(d-=f,f-=f),0>g&&(p-=g,g-=g),f>q&&(t=f-q,d-=t,f-=t),g>Y&&(t=g-Y,p-=t,g-=t),d>q&&(t=d-Y,g-=t,p-=t),p>Y&&(t=p-Y,g-=t,p-=t),c(s(d,p,f,g))}function c(t){return{x:t[0],y:t[1],x2:t[2],y2:t[3],w:t[2]-t[0],h:t[3]-t[1]}}var u,h,d=0,p=0,f=0,g=0;return{flipCoords:s,setPressed:t,setCurrent:e,getOffset:i,moveOffset:n,getCorner:r,getFixed:o}}(),dt=function(){function e(t,e){f.left.css({height:n(e)}),f.right.css({height:n(e)})}function i(){return r(ht.getFixed())}function r(t){f.top.css({left:n(t.x),width:n(t.w),height:n(t.y)}),f.bottom.css({top:n(t.y2),left:n(t.x),width:n(t.w),height:n(Y-t.y2)}),f.right.css({left:n(t.x2),width:n(q-t.x2)}),f.left.css({width:n(t.x)})}function o(){return t("<div />").css({position:"absolute",backgroundColor:O.shadeColor||O.bgColor}).appendTo(p)}function a(){d||(d=!0,p.insertBefore(V),i(),pt.setBgOpacity(1,0,1),U.hide(),s(O.shadeColor||O.bgColor,1),pt.isAwake()?c(O.bgOpacity,1):c(1,1))}function s(t,e){F(h(),t,e)}function l(){d&&(p.remove(),U.show(),d=!1,pt.isAwake()?pt.setBgOpacity(O.bgOpacity,1,1):(pt.setBgOpacity(1,1,1),pt.disableHandles()),F($,0,1))}function c(t,e){d&&(O.bgFade&&!e?p.animate({opacity:1-t},{queue:!1,duration:O.fadeTime}):p.css({opacity:1-t}))}function u(){O.shade?a():l(),pt.isAwake()&&c(O.bgOpacity)}function h(){return p.children()}var d=!1,p=t("<div />").css({position:"absolute",zIndex:240,opacity:0}),f={top:o(),left:o().height(Y),right:o().height(Y),bottom:o()};return{update:i,updateRaw:r,getShades:h,setBgColor:s,enable:a,disable:l,resize:e,refresh:u,opacity:c}}(),pt=function(){function e(e){var i=t("<div />").css({position:"absolute",opacity:O.borderOpacity}).addClass(r(e));return X.append(i),i}function i(e,i){var n=t("<div />").mousedown(p(e)).css({cursor:e+"-resize",position:"absolute",zIndex:i}).addClass("ord-"+e);return ut.support&&n.bind("touchstart.jcrop",ut.createDragger(e)),K.append(n),n}function o(t){var e=O.handleSize,n=i(t,P++).css({opacity:O.handleOpacity}).addClass(r("handle"));return e&&n.width(e).height(e),n}function a(t){return i(t,P++).addClass("jcrop-dragbar")}function s(t){var e;for(e=0;e<t.length;e++)T[t[e]]=a(t[e])}function l(t){var i,n;for(n=0;n<t.length;n++){switch(t[n]){case"n":i="hline";break;case"s":i="hline bottom";break;case"e":i="vline right";break;case"w":i="vline"}M[t[n]]=e(i)}}function c(t){var e;for(e=0;e<t.length;e++)I[t[e]]=o(t[e])}function u(t,e){O.shade||U.css({top:n(-e),left:n(-t)}),J.css({top:n(e),left:n(t)})}function h(t,e){J.width(Math.round(t)).height(Math.round(e))}function d(){var t=ht.getFixed();ht.setPressed([t.x,t.y]),ht.setCurrent([t.x2,t.y2]),f()}function f(t){return D?m(t):void 0}function m(t){var e=ht.getFixed();h(e.w,e.h),u(e.x,e.y),O.shade&&dt.updateRaw(e),D||y(),t?O.onSelect.call(mt,g(e)):O.onChange.call(mt,g(e))}function v(t,e,i){(D||e)&&(O.bgFade&&!i?V.animate({opacity:t},{queue:!1,duration:O.fadeTime}):V.css("opacity",t))}function y(){J.show(),O.shade?dt.opacity(ct):v(ct,!0),D=!0}function x(){_(),J.hide(),O.shade?dt.opacity(1):v(1),D=!1,O.onRelease.call(mt)}function k(){A&&K.show()}function w(){return A=!0,O.allowResize?(K.show(),!0):void 0}function _(){A=!1,K.hide()}function S(t){t?(rt=!0,_()):(rt=!1,w())}function C(){S(!1),d()}var D,P=370,M={},I={},T={},A=!1;O.dragEdges&&t.isArray(O.createDragbars)&&s(O.createDragbars),t.isArray(O.createHandles)&&c(O.createHandles),O.drawBorders&&t.isArray(O.createBorders)&&l(O.createBorders),t(document).bind("touchstart.jcrop-ios",function(e){t(e.currentTarget).hasClass("jcrop-tracker")&&e.stopPropagation()});var F=b().mousedown(p("move")).css({cursor:"move",position:"absolute",zIndex:360});return ut.support&&F.bind("touchstart.jcrop",ut.createDragger("move")),X.append(F),_(),{updateVisible:f,update:m,release:x,refresh:d,isAwake:function(){return D},setCursor:function(t){F.css("cursor",t)},enableHandles:w,enableOnly:function(){A=!0},showHandles:k,disableHandles:_,animMode:S,setBgOpacity:v,done:C}}(),ft=function(){function e(e){st.css({zIndex:450}),e?t(document).bind("touchmove.jcrop",a).bind("touchend.jcrop",l):d&&t(document).bind("mousemove.jcrop",n).bind("mouseup.jcrop",r)}function i(){st.css({zIndex:290}),t(document).unbind(".jcrop")}function n(t){return u(s(t)),!1}function r(t){return t.preventDefault(),t.stopPropagation(),nt&&(nt=!1,h(s(t)),pt.isAwake()&&O.onSelect.call(mt,g(ht.getFixed())),i(),u=function(){},h=function(){}),!1}function o(t,i,n){return nt=!0,u=t,h=i,e(n),!1}function a(t){return u(s(ut.cfilter(t))),!1}function l(t){return r(ut.cfilter(t))}function c(t){st.css("cursor",t)}var u=function(){},h=function(){},d=O.trackDocument;return d||st.mousemove(n).mouseup(r).mouseout(r),V.before(st),{activateHandlers:o,setCursor:c}}(),gt=function(){function e(){O.keySupport&&(o.show(),o.focus())}function i(t){o.hide()}function n(t,e,i){O.allowMove&&(ht.moveOffset([e,i]),pt.updateVisible(!0)),t.preventDefault(),t.stopPropagation()}function r(t){if(t.ctrlKey||t.metaKey)return!0;ot=!!t.shiftKey;var e=ot?10:1;switch(t.keyCode){case 37:n(t,-e,0);break;case 39:n(t,e,0);break;case 38:n(t,0,-e);break;case 40:n(t,0,e);break;case 27:O.allowSelect&&pt.release();break;case 9:return!0}return!1}var o=t('<input type="radio" />').css({position:"fixed",left:"-120px",width:"12px"}).addClass("jcrop-keymgr"),a=t("<div />").css({position:"absolute",overflow:"hidden"}).append(o);return O.keySupport&&(o.keydown(r).blur(i),R||!O.fixedSupport?(o.css({position:"absolute",left:"-20px"}),a.append(o).insertBefore(V)):o.insertBefore(V)),{watchKeys:e}}();ut.support&&st.bind("touchstart.jcrop",ut.newSelection),K.hide(),N(!0);var mt={setImage:A,animateTo:k,setSelect:w,setOptions:D,tellSelect:S,tellScaled:C,setClass:x,disable:P,enable:M,cancel:I,release:pt.release,destroy:T,focus:gt.watchKeys,getBounds:function(){return[q*et,Y*it]},getWidgetSize:function(){return[q,Y]},getScaleFactor:function(){return[et,it]},getOptions:function(){return O},ui:{holder:$,selection:J}};return H&&$.bind("selectstart",function(){return!1}),W.data("Jcrop",mt),mt},t.fn.Jcrop=function(e,i){var n;return this.each(function(){if(t(this).data("Jcrop")){if("api"===e)return t(this).data("Jcrop");t(this).data("Jcrop").setOptions(e)}else"IMG"==this.tagName?t.Jcrop.Loader(this,function(){t(this).css({display:"block",visibility:"hidden"}),n=t.Jcrop(this,e),t.isFunction(i)&&i.call(n)}):(t(this).css({display:"block",visibility:"hidden"}),n=t.Jcrop(this,e),t.isFunction(i)&&i.call(n))}),this},t.Jcrop.Loader=function(e,i,n){function r(){a.complete?(o.unbind(".jcloader"),t.isFunction(i)&&i.call(a)):window.setTimeout(r,50)}var o=t(e),a=o[0];o.bind("load.jcloader",r).bind("error.jcloader",function(e){o.unbind(".jcloader"),t.isFunction(n)&&n.call(a)}),a.complete&&t.isFunction(i)&&(o.unbind(".jcloader"),i.call(a))},t.Jcrop.defaults={allowSelect:!0,allowMove:!0,allowResize:!0,trackDocument:!0,baseClass:"jcrop",addClass:null,bgColor:"black",bgOpacity:.6,bgFade:!1,borderOpacity:.4,handleOpacity:.5,handleSize:null,aspectRatio:0,keySupport:!0,createHandles:["n","s","e","w","nw","ne","se","sw"],createDragbars:["n","s","e","w"],createBorders:["n","s","e","w"],drawBorders:!0,dragEdges:!0,fixedSupport:!0,touchSupport:null,shade:null,boxWidth:0,boxHeight:0,boundary:2,fadeTime:400,animationDelay:20,swingSpeed:3,minSelect:[0,0],maxSize:[0,0],minSize:[0,0],onChange:function(){},onSelect:function(){},onDblClick:function(){},onRelease:function(){}}}(jQuery);
//# sourceMappingURL=data:application/json;base64,
