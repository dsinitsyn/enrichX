function createChart(e){e=JSON.parse(e);var t=$("#chart-template").html(),i=Handlebars.compile(t);if($("#charts-category").append(i(e)),e.datasets.length){var n=document.getElementById("chart-"+e.name),s=new Chart(n,{type:e.type,data:{labels:e.labels,datasets:e.datasets},options:{legend:{display:!1,labels:{fontSize:20}},responsive:!0,scales:1==e.showAxis?{yAxes:[{ticks:{beginAtZero:!0}}],xAxes:[{ticks:{beginAtZero:!0}}]}:!1,scale:"linear"}});$(".chart-datepicker").each(function(){$(this).hasClass("hasDatepicker")||$(this).datepicker({dateFormat:"dd-mm-yy",prevText:'<i class="icon-nav-left"></i>',nextText:'<i class="icon-nav-right"></i>',dayNamesMin:$.datepicker._defaults.dayNamesShort,firstDay:1,beforeShow:function(e,t){var i=e.getBoundingClientRect();setTimeout(function(){t.dpDiv.css({top:i.top,left:i.width+i.left+10})},0)}})})}else $(".chartBody:last .filters").hide(),$(".chartBody:last .emptyChart").show();chart.chartsList.push(s)}function updateChart(e,t){t=JSON.parse(t),$.each(chart.chartsList,function(i,n){n.chart.canvas.id.indexOf(e)>-1&&(n.chart.config.data={labels:t.labels,datasets:t.datasets},n.update())})}function parseCountriesData(){var e=$("#country-settings tbody tr"),t={countries:[]};e.each(function(e){var i={};$(this).find("td").each(function(e){$(this).hasClass("mig-country-name")&&(i.name=$(this).html(),i.countrycode=$(this).data("countrycode")),$(this).hasClass("mig-country-dropdown")&&(i.type=$(this).find("option:selected").val())}),t.countries.push(i)}),$(".countries-result").val(JSON.stringify(t))}function buildCountries(e){var t=$("#country-settings tbody");e.countries.length>0&&e.countries.forEach(function(e){var i=$("<tr></tr>"),n=$("<select>",{html:$('<option value="1">Domestic</option><option value="2">International</option>')});n.val(e.type),$('<td class="mig-country-name mig-shipp-search-name" data-countrycode="'+e.countrycode+'"></td>').html(e.name).appendTo(i),$('<td class="migDropdown"></td>').append(n).appendTo(i),$("<td></td>").append('<a class="mig-inset-btn delete ship-delete" href="test4.html" name="Delete row" title="Delete"></a>').appendTo(i),$(n).migDropdown(),t.append(i)})}var mejs=mejs||{};mejs.version="2.19.0",mejs.meIndex=0,mejs.plugins={silverlight:[{version:[3,0],types:["video/mp4","video/m4v","video/mov","video/wmv","audio/wma","audio/m4a","audio/mp3","audio/wav","audio/mpeg"]}],flash:[{version:[9,0,124],types:["video/mp4","video/m4v","video/mov","video/flv","video/rtmp","video/x-flv","audio/flv","audio/x-flv","audio/mp3","audio/m4a","audio/mpeg","video/youtube","video/x-youtube","video/dailymotion","video/x-dailymotion","application/x-mpegURL"]}],youtube:[{version:null,types:["video/youtube","video/x-youtube","audio/youtube","audio/x-youtube"]}],vimeo:[{version:null,types:["video/vimeo","video/x-vimeo"]}]},mejs.Utility={encodeUrl:function(e){return encodeURIComponent(e)},escapeHTML:function(e){return e.toString().split("&").join("&amp;").split("<").join("&lt;").split('"').join("&quot;")},absolutizeUrl:function(e){var t=document.createElement("div");return t.innerHTML='<a href="'+this.escapeHTML(e)+'">x</a>',t.firstChild.href},getScriptPath:function(e){for(var t,i,n,s,a,o,r=0,l="",d="",c=document.getElementsByTagName("script"),u=c.length,p=e.length;u>r;r++){for(s=c[r].src,i=s.lastIndexOf("/"),i>-1?(o=s.substring(i+1),a=s.substring(0,i+1)):(o=s,a=""),t=0;p>t;t++)if(d=e[t],n=o.indexOf(d),n>-1){l=a;break}if(""!==l)break}return l},calculateTimeFormat:function(e,t,i){0>e&&(e=0),"undefined"==typeof i&&(i=25);var n=t.timeFormat,s=n[0],a=n[1]==n[0],o=a?2:1,r=":",l=Math.floor(e/3600)%24,d=Math.floor(e/60)%60,c=Math.floor(e%60),u=Math.floor((e%1*i).toFixed(3)),p=[[u,"f"],[c,"s"],[d,"m"],[l,"h"]];n.length<o&&(r=n[o]);for(var m=!1,h=0,f=p.length;f>h;h++)if(-1!==n.indexOf(p[h][1]))m=!0;else if(m){for(var v=!1,g=h;f>g;g++)if(p[g][0]>0){v=!0;break}if(!v)break;a||(n=s+n),n=p[h][1]+r+n,a&&(n=p[h][1]+n),s=p[h][1]}t.currentTimeFormat=n},twoDigitsString:function(e){return 10>e?"0"+e:String(e)},secondsToTimeCode:function(e,t){if(0>e&&(e=0),"object"!=typeof t){var n="m:ss";n=arguments[1]?"hh:mm:ss":n,n=arguments[2]?n+":ff":n,t={currentTimeFormat:n,framesPerSecond:arguments[3]||25}}var s=t.framesPerSecond;"undefined"==typeof s&&(s=25);var n=t.currentTimeFormat,a=Math.floor(e/3600)%24,o=Math.floor(e/60)%60,r=Math.floor(e%60),l=Math.floor((e%1*s).toFixed(3));lis=[[l,"f"],[r,"s"],[o,"m"],[a,"h"]];var d=n;for(i=0,len=lis.length;i<len;i++)d=d.replace(lis[i][1]+lis[i][1],this.twoDigitsString(lis[i][0])),d=d.replace(lis[i][1],lis[i][0]);return d},timeCodeToSeconds:function(e,t,i,n){"undefined"==typeof i?i=!1:"undefined"==typeof n&&(n=25);var s=e.split(":"),a=parseInt(s[0],10),o=parseInt(s[1],10),r=parseInt(s[2],10),l=0,d=0;return i&&(l=parseInt(s[3])/n),d=3600*a+60*o+r+l},convertSMPTEtoSeconds:function(e){if("string"!=typeof e)return!1;e=e.replace(",",".");var t=0,i=-1!=e.indexOf(".")?e.split(".")[1].length:0,n=1;e=e.split(":").reverse();for(var s=0;s<e.length;s++)n=1,s>0&&(n=Math.pow(60,s)),t+=Number(e[s])*n;return Number(t.toFixed(i))},removeSwf:function(e){var t=document.getElementById(e);t&&/object|embed/i.test(t.nodeName)&&(mejs.MediaFeatures.isIE?(t.style.display="none",function(){4==t.readyState?mejs.Utility.removeObjectInIE(e):setTimeout(arguments.callee,10)}()):t.parentNode.removeChild(t))},removeObjectInIE:function(e){var t=document.getElementById(e);if(t){for(var i in t)"function"==typeof t[i]&&(t[i]=null);t.parentNode.removeChild(t)}}},mejs.PluginDetector={hasPluginVersion:function(e,t){var i=this.plugins[e];return t[1]=t[1]||0,t[2]=t[2]||0,i[0]>t[0]||i[0]==t[0]&&i[1]>t[1]||i[0]==t[0]&&i[1]==t[1]&&i[2]>=t[2]},nav:window.navigator,ua:window.navigator.userAgent.toLowerCase(),plugins:[],addPlugin:function(e,t,i,n,s){this.plugins[e]=this.detectPlugin(t,i,n,s)},detectPlugin:function(e,t,i,n){var s,a,o,r=[0,0,0];if("undefined"!=typeof this.nav.plugins&&"object"==typeof this.nav.plugins[e]){if(s=this.nav.plugins[e].description,s&&("undefined"==typeof this.nav.mimeTypes||!this.nav.mimeTypes[t]||this.nav.mimeTypes[t].enabledPlugin))for(r=s.replace(e,"").replace(/^\s+/,"").replace(/\sr/gi,".").split("."),a=0;a<r.length;a++)r[a]=parseInt(r[a].match(/\d+/),10)}else if("undefined"!=typeof window.ActiveXObject)try{o=new ActiveXObject(i),o&&(r=n(o))}catch(l){}return r}},mejs.PluginDetector.addPlugin("flash","Shockwave Flash","application/x-shockwave-flash","ShockwaveFlash.ShockwaveFlash",function(e){var t=[],i=e.GetVariable("$version");return i&&(i=i.split(" ")[1].split(","),t=[parseInt(i[0],10),parseInt(i[1],10),parseInt(i[2],10)]),t}),mejs.PluginDetector.addPlugin("silverlight","Silverlight Plug-In","application/x-silverlight-2","AgControl.AgControl",function(e){var t=[0,0,0,0],i=function(e,t,i,n){for(;e.isVersionSupported(t[0]+"."+t[1]+"."+t[2]+"."+t[3]);)t[i]+=n;t[i]-=n};return i(e,t,0,1),i(e,t,1,1),i(e,t,2,1e4),i(e,t,2,1e3),i(e,t,2,100),i(e,t,2,10),i(e,t,2,1),i(e,t,3,1),t}),mejs.MediaFeatures={init:function(){var e,t,i=this,n=document,s=mejs.PluginDetector.nav,a=mejs.PluginDetector.ua.toLowerCase(),o=["source","track","audio","video"];i.isiPad=null!==a.match(/ipad/i),i.isiPhone=null!==a.match(/iphone/i),i.isiOS=i.isiPhone||i.isiPad,i.isAndroid=null!==a.match(/android/i),i.isBustedAndroid=null!==a.match(/android 2\.[12]/),i.isBustedNativeHTTPS="https:"===location.protocol&&(null!==a.match(/android [12]\./)||null!==a.match(/macintosh.* version.* safari/)),i.isIE=-1!=s.appName.toLowerCase().indexOf("microsoft")||null!==s.appName.toLowerCase().match(/trident/gi),i.isChrome=null!==a.match(/chrome/gi),i.isChromium=null!==a.match(/chromium/gi),i.isFirefox=null!==a.match(/firefox/gi),i.isWebkit=null!==a.match(/webkit/gi),i.isGecko=null!==a.match(/gecko/gi)&&!i.isWebkit&&!i.isIE,i.isOpera=null!==a.match(/opera/gi),i.hasTouch="ontouchstart"in window,i.svgAsImg=!!document.implementation.hasFeature("http://www.w3.org/TR/SVG11/feature#Image","1.1");for(e=0;e<o.length;e++)t=document.createElement(o[e]);i.supportsMediaTag="undefined"!=typeof t.canPlayType||i.isBustedAndroid;try{t.canPlayType("video/mp4")}catch(r){i.supportsMediaTag=!1}i.hasSemiNativeFullScreen="undefined"!=typeof t.webkitEnterFullscreen,i.hasNativeFullscreen="undefined"!=typeof t.requestFullscreen,i.hasWebkitNativeFullScreen="undefined"!=typeof t.webkitRequestFullScreen,i.hasMozNativeFullScreen="undefined"!=typeof t.mozRequestFullScreen,i.hasMsNativeFullScreen="undefined"!=typeof t.msRequestFullscreen,i.hasTrueNativeFullScreen=i.hasWebkitNativeFullScreen||i.hasMozNativeFullScreen||i.hasMsNativeFullScreen,i.nativeFullScreenEnabled=i.hasTrueNativeFullScreen,i.hasMozNativeFullScreen?i.nativeFullScreenEnabled=document.mozFullScreenEnabled:i.hasMsNativeFullScreen&&(i.nativeFullScreenEnabled=document.msFullscreenEnabled),i.isChrome&&(i.hasSemiNativeFullScreen=!1),i.hasTrueNativeFullScreen&&(i.fullScreenEventName="",i.hasWebkitNativeFullScreen?i.fullScreenEventName="webkitfullscreenchange":i.hasMozNativeFullScreen?i.fullScreenEventName="mozfullscreenchange":i.hasMsNativeFullScreen&&(i.fullScreenEventName="MSFullscreenChange"),i.isFullScreen=function(){return i.hasMozNativeFullScreen?n.mozFullScreen:i.hasWebkitNativeFullScreen?n.webkitIsFullScreen:i.hasMsNativeFullScreen?null!==n.msFullscreenElement:void 0},i.requestFullScreen=function(e){i.hasWebkitNativeFullScreen?e.webkitRequestFullScreen():i.hasMozNativeFullScreen?e.mozRequestFullScreen():i.hasMsNativeFullScreen&&e.msRequestFullscreen()},i.cancelFullScreen=function(){i.hasWebkitNativeFullScreen?document.webkitCancelFullScreen():i.hasMozNativeFullScreen?document.mozCancelFullScreen():i.hasMsNativeFullScreen&&document.msExitFullscreen()}),i.hasSemiNativeFullScreen&&a.match(/mac os x 10_5/i)&&(i.hasNativeFullScreen=!1,i.hasSemiNativeFullScreen=!1)}},mejs.MediaFeatures.init(),mejs.HtmlMediaElement={pluginType:"native",isFullScreen:!1,setCurrentTime:function(e){this.currentTime=e},setMuted:function(e){this.muted=e},setVolume:function(e){this.volume=e},stop:function(){this.pause()},setSrc:function(e){for(var t=this.getElementsByTagName("source");t.length>0;)this.removeChild(t[0]);if("string"==typeof e)this.src=e;else{var i,n;for(i=0;i<e.length;i++)if(n=e[i],this.canPlayType(n.type)){this.src=n.src;break}}},setVideoSize:function(e,t){this.width=e,this.height=t}},mejs.PluginMediaElement=function(e,t,i){this.id=e,this.pluginType=t,this.src=i,this.events={},this.attributes={}},mejs.PluginMediaElement.prototype={pluginElement:null,pluginType:"",isFullScreen:!1,playbackRate:-1,defaultPlaybackRate:-1,seekable:[],played:[],paused:!0,ended:!1,seeking:!1,duration:0,error:null,tagName:"",muted:!1,volume:1,currentTime:0,play:function(){null!=this.pluginApi&&("youtube"==this.pluginType||"vimeo"==this.pluginType?this.pluginApi.playVideo():this.pluginApi.playMedia(),this.paused=!1)},load:function(){null!=this.pluginApi&&("youtube"==this.pluginType||"vimeo"==this.pluginType||this.pluginApi.loadMedia(),this.paused=!1)},pause:function(){null!=this.pluginApi&&("youtube"==this.pluginType||"vimeo"==this.pluginType?this.pluginApi.pauseVideo():this.pluginApi.pauseMedia(),this.paused=!0)},stop:function(){null!=this.pluginApi&&("youtube"==this.pluginType||"vimeo"==this.pluginType?this.pluginApi.stopVideo():this.pluginApi.stopMedia(),this.paused=!0)},canPlayType:function(e){var t,i,n,s=mejs.plugins[this.pluginType];for(t=0;t<s.length;t++)if(n=s[t],mejs.PluginDetector.hasPluginVersion(this.pluginType,n.version))for(i=0;i<n.types.length;i++)if(e==n.types[i])return"probably";return""},positionFullscreenButton:function(e,t,i){null!=this.pluginApi&&this.pluginApi.positionFullscreenButton&&this.pluginApi.positionFullscreenButton(Math.floor(e),Math.floor(t),i)},hideFullscreenButton:function(){null!=this.pluginApi&&this.pluginApi.hideFullscreenButton&&this.pluginApi.hideFullscreenButton()},setSrc:function(e){if("string"==typeof e)this.pluginApi.setSrc(mejs.Utility.absolutizeUrl(e)),this.src=mejs.Utility.absolutizeUrl(e);else{var t,i;for(t=0;t<e.length;t++)if(i=e[t],this.canPlayType(i.type)){this.pluginApi.setSrc(mejs.Utility.absolutizeUrl(i.src)),this.src=mejs.Utility.absolutizeUrl(i.src);break}}},setCurrentTime:function(e){null!=this.pluginApi&&("youtube"==this.pluginType||"vimeo"==this.pluginType?this.pluginApi.seekTo(e):this.pluginApi.setCurrentTime(e),this.currentTime=e)},setVolume:function(e){null!=this.pluginApi&&("youtube"==this.pluginType?this.pluginApi.setVolume(100*e):this.pluginApi.setVolume(e),this.volume=e)},setMuted:function(e){null!=this.pluginApi&&("youtube"==this.pluginType?(e?this.pluginApi.mute():this.pluginApi.unMute(),this.muted=e,this.dispatchEvent({type:"volumechange"})):this.pluginApi.setMuted(e),this.muted=e)},setVideoSize:function(e,t){this.pluginElement&&this.pluginElement.style&&(this.pluginElement.style.width=e+"px",this.pluginElement.style.height=t+"px"),null!=this.pluginApi&&this.pluginApi.setVideoSize&&this.pluginApi.setVideoSize(e,t)},setFullscreen:function(e){null!=this.pluginApi&&this.pluginApi.setFullscreen&&this.pluginApi.setFullscreen(e)},enterFullScreen:function(){null!=this.pluginApi&&this.pluginApi.setFullscreen&&this.setFullscreen(!0)},exitFullScreen:function(){null!=this.pluginApi&&this.pluginApi.setFullscreen&&this.setFullscreen(!1)},addEventListener:function(e,t,i){this.events[e]=this.events[e]||[],this.events[e].push(t)},removeEventListener:function(e,t){if(!e)return this.events={},!0;var i=this.events[e];if(!i)return!0;if(!t)return this.events[e]=[],!0;for(var n=0;n<i.length;n++)if(i[n]===t)return this.events[e].splice(n,1),!0;return!1},dispatchEvent:function(e){var t,i=this.events[e.type];if(i)for(t=0;t<i.length;t++)i[t].apply(this,[e])},hasAttribute:function(e){return e in this.attributes},removeAttribute:function(e){delete this.attributes[e]},getAttribute:function(e){return this.hasAttribute(e)?this.attributes[e]:""},setAttribute:function(e,t){this.attributes[e]=t},remove:function(){mejs.Utility.removeSwf(this.pluginElement.id),mejs.MediaPluginBridge.unregisterPluginElement(this.pluginElement.id)}},mejs.MediaPluginBridge={pluginMediaElements:{},htmlMediaElements:{},registerPluginElement:function(e,t,i){this.pluginMediaElements[e]=t,this.htmlMediaElements[e]=i},unregisterPluginElement:function(e){delete this.pluginMediaElements[e],delete this.htmlMediaElements[e]},initPlugin:function(e){var t=this.pluginMediaElements[e],i=this.htmlMediaElements[e];if(t){switch(t.pluginType){case"flash":t.pluginElement=t.pluginApi=document.getElementById(e);break;case"silverlight":t.pluginElement=document.getElementById(t.id),t.pluginApi=t.pluginElement.Content.MediaElementJS}null!=t.pluginApi&&t.success&&t.success(t,i)}},fireEvent:function(e,t,i){var n,s,a,o=this.pluginMediaElements[e];if(o){n={type:t,target:o};for(s in i)o[s]=i[s],n[s]=i[s];a=i.bufferedTime||0,n.target.buffered=n.buffered={start:function(e){return 0},end:function(e){return a},length:1},o.dispatchEvent(n)}}},mejs.MediaElementDefaults={mode:"auto",plugins:["flash","silverlight","youtube","vimeo"],enablePluginDebug:!1,httpsBasicAuthSite:!1,type:"",pluginPath:mejs.Utility.getScriptPath(["mediaelement.js","mediaelement.min.js","mediaelement-and-player.js","mediaelement-and-player.min.js"]),flashName:"flashmediaelement.swf",flashStreamer:"",flashScriptAccess:"sameDomain",enablePluginSmoothing:!1,enablePseudoStreaming:!1,pseudoStreamingStartQueryParam:"start",silverlightName:"silverlightmediaelement.xap",defaultVideoWidth:480,defaultVideoHeight:270,pluginWidth:-1,pluginHeight:-1,pluginVars:[],timerRate:250,startVolume:.8,success:function(){},error:function(){}},mejs.MediaElement=function(e,t){return mejs.HtmlMediaElementShim.create(e,t)},mejs.HtmlMediaElementShim={create:function(e,t){var i,n,s={},a="string"==typeof e?document.getElementById(e):e,o=a.tagName.toLowerCase(),r="audio"===o||"video"===o,l=r?a.getAttribute("src"):a.getAttribute("href"),d=a.getAttribute("poster"),c=a.getAttribute("autoplay"),u=a.getAttribute("preload"),p=a.getAttribute("controls");for(n in mejs.MediaElementDefaults)s[n]=mejs.MediaElementDefaults[n];for(n in t)s[n]=t[n];return l="undefined"==typeof l||null===l||""==l?null:l,d="undefined"==typeof d||null===d?"":d,u="undefined"==typeof u||null===u||"false"===u?"none":u,c=!("undefined"==typeof c||null===c||"false"===c),p=!("undefined"==typeof p||null===p||"false"===p),i=this.determinePlayback(a,s,mejs.MediaFeatures.supportsMediaTag,r,l),i.url=null!==i.url?mejs.Utility.absolutizeUrl(i.url):"","native"==i.method?(mejs.MediaFeatures.isBustedAndroid&&(a.src=i.url,a.addEventListener("click",function(){a.play()},!1)),this.updateNative(i,s,c,u)):""!==i.method?this.createPlugin(i,s,d,c,u,p):(this.createErrorMessage(i,s,d),this)},determinePlayback:function(e,t,i,n,s){var a,o,r,l,d,c,u,p,m,h,f,v=[],g={method:"",url:"",htmlMediaElement:e,isVideo:"audio"!=e.tagName.toLowerCase()};if("undefined"!=typeof t.type&&""!==t.type)if("string"==typeof t.type)v.push({type:t.type,url:s});else for(a=0;a<t.type.length;a++)v.push({type:t.type[a],url:s});else if(null!==s)c=this.formatType(s,e.getAttribute("type")),v.push({type:c,url:s});else for(a=0;a<e.childNodes.length;a++)d=e.childNodes[a],1==d.nodeType&&"source"==d.tagName.toLowerCase()&&(s=d.getAttribute("src"),c=this.formatType(s,d.getAttribute("type")),f=d.getAttribute("media"),(!f||!window.matchMedia||window.matchMedia&&window.matchMedia(f).matches)&&v.push({type:c,url:s}));if(!n&&v.length>0&&null!==v[0].url&&this.getTypeFromFile(v[0].url).indexOf("audio")>-1&&(g.isVideo=!1),mejs.MediaFeatures.isBustedAndroid&&(e.canPlayType=function(e){return null!==e.match(/video\/(mp4|m4v)/gi)?"maybe":""}),mejs.MediaFeatures.isChromium&&(e.canPlayType=function(e){return null!==e.match(/video\/(webm|ogv|ogg)/gi)?"maybe":""}),i&&("auto"===t.mode||"auto_plugin"===t.mode||"native"===t.mode)&&(!mejs.MediaFeatures.isBustedNativeHTTPS||t.httpsBasicAuthSite!==!0)){for(n||(h=document.createElement(g.isVideo?"video":"audio"),e.parentNode.insertBefore(h,e),e.style.display="none",g.htmlMediaElement=e=h),a=0;a<v.length;a++)if("video/m3u8"==v[a].type||""!==e.canPlayType(v[a].type).replace(/no/,"")||""!==e.canPlayType(v[a].type.replace(/mp3/,"mpeg")).replace(/no/,"")||""!==e.canPlayType(v[a].type.replace(/m4a/,"mp4")).replace(/no/,"")){g.method="native",g.url=v[a].url;break}if("native"===g.method&&(null!==g.url&&(e.src=g.url),"auto_plugin"!==t.mode))return g}if("auto"===t.mode||"auto_plugin"===t.mode||"shim"===t.mode)for(a=0;a<v.length;a++)for(c=v[a].type,o=0;o<t.plugins.length;o++)for(u=t.plugins[o],p=mejs.plugins[u],r=0;r<p.length;r++)if(m=p[r],null==m.version||mejs.PluginDetector.hasPluginVersion(u,m.version))for(l=0;l<m.types.length;l++)if(c.toLowerCase()==m.types[l].toLowerCase())return g.method=u,g.url=v[a].url,g;return"auto_plugin"===t.mode&&"native"===g.method?g:(""===g.method&&v.length>0&&(g.url=v[0].url),g)},formatType:function(e,t){return e&&!t?this.getTypeFromFile(e):t&&~t.indexOf(";")?t.substr(0,t.indexOf(";")):t},getTypeFromFile:function(e){e=e.split("?")[0];var t=e.substring(e.lastIndexOf(".")+1).toLowerCase(),i=/(mp4|m4v|ogg|ogv|m3u8|webm|webmv|flv|wmv|mpeg|mov)/gi.test(t)?"video/":"audio/";return this.getTypeFromExtension(t,i)},getTypeFromExtension:function(e,t){switch(t=t||"",e){case"mp4":case"m4v":case"m4a":case"f4v":case"f4a":return t+"mp4";case"flv":return t+"x-flv";case"webm":case"webma":case"webmv":return t+"webm";case"ogg":case"oga":case"ogv":return t+"ogg";case"m3u8":return"application/x-mpegurl";case"ts":return t+"mp2t";default:return t+e}},createErrorMessage:function(e,t,i){var n=e.htmlMediaElement,s=document.createElement("div"),a=t.customError;s.className="me-cannotplay";try{s.style.width=n.width+"px",s.style.height=n.height+"px"}catch(o){}a||(a='<a href="'+e.url+'">',""!==i&&(a+='<img src="'+i+'" width="100%" height="100%" alt="" />'),a+="<span>"+mejs.i18n.t("Download File")+"</span></a>"),s.innerHTML=a,n.parentNode.insertBefore(s,n),n.style.display="none",t.error(n)},createPlugin:function(e,t,i,n,s,a){var o,r,l,d=e.htmlMediaElement,c=1,u=1,p="me_"+e.method+"_"+mejs.meIndex++,m=new mejs.PluginMediaElement(p,e.method,e.url),h=document.createElement("div");m.tagName=d.tagName;for(var f=0;f<d.attributes.length;f++){var v=d.attributes[f];v.specified&&m.setAttribute(v.name,v.value)}for(r=d.parentNode;null!==r&&null!=r.tagName&&"body"!==r.tagName.toLowerCase()&&null!=r.parentNode&&null!=r.parentNode.tagName&&null!=r.parentNode.constructor&&"ShadowRoot"===r.parentNode.constructor.name;){if("p"===r.parentNode.tagName.toLowerCase()){r.parentNode.parentNode.insertBefore(r,r.parentNode);break}r=r.parentNode}switch(e.isVideo?(c=t.pluginWidth>0?t.pluginWidth:t.videoWidth>0?t.videoWidth:null!==d.getAttribute("width")?d.getAttribute("width"):t.defaultVideoWidth,u=t.pluginHeight>0?t.pluginHeight:t.videoHeight>0?t.videoHeight:null!==d.getAttribute("height")?d.getAttribute("height"):t.defaultVideoHeight,c=mejs.Utility.encodeUrl(c),u=mejs.Utility.encodeUrl(u)):t.enablePluginDebug&&(c=320,u=240),m.success=t.success,mejs.MediaPluginBridge.registerPluginElement(p,m,d),h.className="me-plugin",h.id=p+"_container",e.isVideo?d.parentNode.insertBefore(h,d):document.body.insertBefore(h,document.body.childNodes[0]),l=["id="+p,"jsinitfunction=mejs.MediaPluginBridge.initPlugin","jscallbackfunction=mejs.MediaPluginBridge.fireEvent","isvideo="+(e.isVideo?"true":"false"),"autoplay="+(n?"true":"false"),"preload="+s,"width="+c,"startvolume="+t.startVolume,"timerrate="+t.timerRate,"flashstreamer="+t.flashStreamer,"height="+u,"pseudostreamstart="+t.pseudoStreamingStartQueryParam],null!==e.url&&("flash"==e.method?l.push("file="+mejs.Utility.encodeUrl(e.url)):l.push("file="+e.url)),t.enablePluginDebug&&l.push("debug=true"),t.enablePluginSmoothing&&l.push("smoothing=true"),t.enablePseudoStreaming&&l.push("pseudostreaming=true"),a&&l.push("controls=true"),t.pluginVars&&(l=l.concat(t.pluginVars)),e.method){case"silverlight":h.innerHTML='<object data="data:application/x-silverlight-2," type="application/x-silverlight-2" id="'+p+'" name="'+p+'" width="'+c+'" height="'+u+'" class="mejs-shim"><param name="initParams" value="'+l.join(",")+'" /><param name="windowless" value="true" /><param name="background" value="black" /><param name="minRuntimeVersion" value="3.0.0.0" /><param name="autoUpgrade" value="true" /><param name="source" value="'+t.pluginPath+t.silverlightName+'" /></object>';break;case"flash":mejs.MediaFeatures.isIE?(o=document.createElement("div"),h.appendChild(o),o.outerHTML='<object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="//download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab" id="'+p+'" width="'+c+'" height="'+u+'" class="mejs-shim"><param name="movie" value="'+t.pluginPath+t.flashName+"?x="+new Date+'" /><param name="flashvars" value="'+l.join("&amp;")+'" /><param name="quality" value="high" /><param name="bgcolor" value="#000000" /><param name="wmode" value="transparent" /><param name="allowScriptAccess" value="'+t.flashScriptAccess+'" /><param name="allowFullScreen" value="true" /><param name="scale" value="default" /></object>'):h.innerHTML='<embed id="'+p+'" name="'+p+'" play="true" loop="false" quality="high" bgcolor="#000000" wmode="transparent" allowScriptAccess="'+t.flashScriptAccess+'" allowFullScreen="true" type="application/x-shockwave-flash" pluginspage="//www.macromedia.com/go/getflashplayer" src="'+t.pluginPath+t.flashName+'" flashvars="'+l.join("&")+'" width="'+c+'" height="'+u+'" scale="default"class="mejs-shim"></embed>';break;case"youtube":var g;-1!=e.url.lastIndexOf("youtu.be")?(g=e.url.substr(e.url.lastIndexOf("/")+1),-1!=g.indexOf("?")&&(g=g.substr(0,g.indexOf("?")))):g=e.url.substr(e.url.lastIndexOf("=")+1),youtubeSettings={container:h,containerId:h.id,pluginMediaElement:m,pluginId:p,videoId:g,height:u,width:c},mejs.PluginDetector.hasPluginVersion("flash",[10,0,0])?mejs.YouTubeApi.createFlash(youtubeSettings,t):mejs.YouTubeApi.enqueueIframe(youtubeSettings);break;case"vimeo":var b=p+"_player";if(m.vimeoid=e.url.substr(e.url.lastIndexOf("/")+1),h.innerHTML='<iframe src="//player.vimeo.com/video/'+m.vimeoid+"?api=1&portrait=0&byline=0&title=0&player_id="+b+'" width="'+c+'" height="'+u+'" frameborder="0" class="mejs-shim" id="'+b+'" webkitallowfullscreen mozallowfullscreen allowfullscreen></iframe>',"function"==typeof $f){var y=$f(h.childNodes[0]);y.addEvent("ready",function(){function e(e,t,i,n){var s={type:i,target:t};"timeupdate"==i&&(t.currentTime=s.currentTime=n.seconds,t.duration=s.duration=n.duration),t.dispatchEvent(s)}y.playVideo=function(){y.api("play")},y.stopVideo=function(){y.api("unload")},y.pauseVideo=function(){y.api("pause")},y.seekTo=function(e){y.api("seekTo",e)},y.setVolume=function(e){y.api("setVolume",e)},y.setMuted=function(e){e?(y.lastVolume=y.api("getVolume"),y.api("setVolume",0)):(y.api("setVolume",y.lastVolume),delete y.lastVolume)},y.addEvent("play",function(){e(y,m,"play"),e(y,m,"playing")}),y.addEvent("pause",function(){e(y,m,"pause")}),y.addEvent("finish",function(){e(y,m,"ended")}),y.addEvent("playProgress",function(t){e(y,m,"timeupdate",t)}),m.pluginElement=h,m.pluginApi=y,mejs.MediaPluginBridge.initPlugin(p)})}else console.warn("You need to include froogaloop for vimeo to work")}return d.style.display="none",d.removeAttribute("autoplay"),m},updateNative:function(e,t,i,n){var s,a=e.htmlMediaElement;for(s in mejs.HtmlMediaElement)a[s]=mejs.HtmlMediaElement[s];return t.success(a,a),a}},mejs.YouTubeApi={isIframeStarted:!1,isIframeLoaded:!1,loadIframeApi:function(){if(!this.isIframeStarted){var e=document.createElement("script");e.src="//www.youtube.com/player_api";var t=document.getElementsByTagName("script")[0];t.parentNode.insertBefore(e,t),this.isIframeStarted=!0}},iframeQueue:[],enqueueIframe:function(e){this.isLoaded?this.createIframe(e):(this.loadIframeApi(),this.iframeQueue.push(e))},createIframe:function(e){var t=e.pluginMediaElement,i=new YT.Player(e.containerId,{height:e.height,width:e.width,videoId:e.videoId,playerVars:{controls:0},events:{onReady:function(){e.pluginMediaElement.pluginApi=i,mejs.MediaPluginBridge.initPlugin(e.pluginId),setInterval(function(){mejs.YouTubeApi.createEvent(i,t,"timeupdate")},250)},onStateChange:function(e){mejs.YouTubeApi.handleStateChange(e.data,i,t)}}})},createEvent:function(e,t,i){var n={type:i,target:t};if(e&&e.getDuration){t.currentTime=n.currentTime=e.getCurrentTime(),t.duration=n.duration=e.getDuration(),n.paused=t.paused,n.ended=t.ended,n.muted=e.isMuted(),n.volume=e.getVolume()/100,n.bytesTotal=e.getVideoBytesTotal(),n.bufferedBytes=e.getVideoBytesLoaded();var s=n.bufferedBytes/n.bytesTotal*n.duration;n.target.buffered=n.buffered={start:function(e){return 0},end:function(e){return s},length:1}}t.dispatchEvent(n)},iFrameReady:function(){for(this.isLoaded=!0,this.isIframeLoaded=!0;this.iframeQueue.length>0;){var e=this.iframeQueue.pop();this.createIframe(e)}},flashPlayers:{},createFlash:function(e){this.flashPlayers[e.pluginId]=e;var t,i="//www.youtube.com/apiplayer?enablejsapi=1&amp;playerapiid="+e.pluginId+"&amp;version=3&amp;autoplay=0&amp;controls=0&amp;modestbranding=1&loop=0";mejs.MediaFeatures.isIE?(t=document.createElement("div"),e.container.appendChild(t),t.outerHTML='<object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="//download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab" id="'+e.pluginId+'" width="'+e.width+'" height="'+e.height+'" class="mejs-shim"><param name="movie" value="'+i+'" /><param name="wmode" value="transparent" /><param name="allowScriptAccess" value="'+options.flashScriptAccess+'" /><param name="allowFullScreen" value="true" /></object>'):e.container.innerHTML='<object type="application/x-shockwave-flash" id="'+e.pluginId+'" data="'+i+'" width="'+e.width+'" height="'+e.height+'" style="visibility: visible; " class="mejs-shim"><param name="allowScriptAccess" value="'+options.flashScriptAccess+'"><param name="wmode" value="transparent"></object>'},flashReady:function(e){var t=this.flashPlayers[e],i=document.getElementById(e),n=t.pluginMediaElement;n.pluginApi=n.pluginElement=i,mejs.MediaPluginBridge.initPlugin(e),i.cueVideoById(t.videoId);var s=t.containerId+"_callback";window[s]=function(e){mejs.YouTubeApi.handleStateChange(e,i,n)},i.addEventListener("onStateChange",s),setInterval(function(){mejs.YouTubeApi.createEvent(i,n,"timeupdate")},250),mejs.YouTubeApi.createEvent(i,n,"canplay")},handleStateChange:function(e,t,i){switch(e){case-1:i.paused=!0,i.ended=!0,mejs.YouTubeApi.createEvent(t,i,"loadedmetadata");break;case 0:i.paused=!1,i.ended=!0,mejs.YouTubeApi.createEvent(t,i,"ended");break;case 1:i.paused=!1,i.ended=!1,mejs.YouTubeApi.createEvent(t,i,"play"),mejs.YouTubeApi.createEvent(t,i,"playing");break;case 2:i.paused=!0,i.ended=!1,mejs.YouTubeApi.createEvent(t,i,"pause");break;case 3:mejs.YouTubeApi.createEvent(t,i,"progress");break;case 5:}}},window.onYouTubePlayerAPIReady=function(){mejs.YouTubeApi.iFrameReady()},window.onYouTubePlayerReady=function(e){mejs.YouTubeApi.flashReady(e)},window.mejs=mejs,window.MediaElement=mejs.MediaElement,function(e,t,i){"use strict";var n={locale:{language:t.i18n&&t.i18n.locale.language||"",strings:t.i18n&&t.i18n.locale.strings||{}},ietf_lang_regex:/^(x\-)?[a-z]{2,}(\-\w{2,})?(\-\w{2,})?$/,methods:{}};n.getLanguage=function(){var e=n.locale.language||window.navigator.userLanguage||window.navigator.language;return n.ietf_lang_regex.exec(e)?e:null},"undefined"!=typeof mejsL10n&&(n.locale.language=mejsL10n.language),n.methods.checkPlain=function(e){var t,i,n={"&":"&amp;",'"':"&quot;","<":"&lt;",">":"&gt;"};e=String(e);for(t in n)n.hasOwnProperty(t)&&(i=new RegExp(t,"g"),e=e.replace(i,n[t]));return e},n.methods.t=function(e,t){return n.locale.strings&&n.locale.strings[t.context]&&n.locale.strings[t.context][e]&&(e=n.locale.strings[t.context][e]),n.methods.checkPlain(e)},n.t=function(e,t){if("string"==typeof e&&e.length>0){var i=n.getLanguage();return t=t||{context:i},n.methods.t(e,t)}throw{name:"InvalidArgumentException",message:"First argument is either not a string or empty."}},t.i18n=n}(document,mejs),function(e,t){"use strict";"undefined"!=typeof mejsL10n&&(e[mejsL10n.language]=mejsL10n.strings)}(mejs.i18n.locale.strings),"undefined"!=typeof jQuery?mejs.$=jQuery:"undefined"!=typeof Zepto?(mejs.$=Zepto,Zepto.fn.outerWidth=function(e){var t=$(this).width();return e&&(t+=parseInt($(this).css("margin-right"),10),t+=parseInt($(this).css("margin-left"),10)),t}):"undefined"!=typeof ender&&(mejs.$=ender),function(e){mejs.MepDefaults={poster:"",showPosterWhenEnded:!1,defaultVideoWidth:480,defaultVideoHeight:270,videoWidth:-1,videoHeight:-1,defaultAudioWidth:400,defaultAudioHeight:30,defaultSeekBackwardInterval:function(e){return.05*e.duration},defaultSeekForwardInterval:function(e){return.05*e.duration},setDimensions:!0,audioWidth:-1,audioHeight:-1,startVolume:.8,loop:!1,autoRewind:!0,enableAutosize:!0,timeFormat:"",alwaysShowHours:!1,showTimecodeFrameCount:!1,framesPerSecond:25,autosizeProgress:!0,alwaysShowControls:!1,hideVideoControlsOnLoad:!1,clickToPlayPause:!0,iPadUseNativeControls:!1,iPhoneUseNativeControls:!1,AndroidUseNativeControls:!1,features:["playpause","current","progress","duration","tracks","volume","fullscreen"],isVideo:!0,enableKeyboard:!0,pauseOtherPlayers:!0,keyActions:[{keys:[32,179],action:function(e,t){t.paused||t.ended?t.play():t.pause()}},{keys:[38],action:function(e,t){e.container.find(".mejs-volume-slider").css("display","block"),e.isVideo&&(e.showControls(),e.startControlsTimer());var i=Math.min(t.volume+.1,1);t.setVolume(i)}},{keys:[40],action:function(e,t){e.container.find(".mejs-volume-slider").css("display","block"),e.isVideo&&(e.showControls(),e.startControlsTimer());var i=Math.max(t.volume-.1,0);t.setVolume(i)}},{keys:[37,227],action:function(e,t){if(!isNaN(t.duration)&&t.duration>0){e.isVideo&&(e.showControls(),e.startControlsTimer());var i=Math.max(t.currentTime-e.options.defaultSeekBackwardInterval(t),0);t.setCurrentTime(i)}}},{keys:[39,228],action:function(e,t){if(!isNaN(t.duration)&&t.duration>0){e.isVideo&&(e.showControls(),e.startControlsTimer());
var i=Math.min(t.currentTime+e.options.defaultSeekForwardInterval(t),t.duration);t.setCurrentTime(i)}}},{keys:[70],action:function(e,t){"undefined"!=typeof e.enterFullScreen&&(e.isFullScreen?e.exitFullScreen():e.enterFullScreen())}},{keys:[77],action:function(e,t){e.container.find(".mejs-volume-slider").css("display","block"),e.isVideo&&(e.showControls(),e.startControlsTimer()),e.media.muted?e.setMuted(!1):e.setMuted(!0)}}]},mejs.mepIndex=0,mejs.players={},mejs.MediaElementPlayer=function(t,i){if(!(this instanceof mejs.MediaElementPlayer))return new mejs.MediaElementPlayer(t,i);var n=this;return n.$media=n.$node=e(t),n.node=n.media=n.$media[0],n.node?"undefined"!=typeof n.node.player?n.node.player:("undefined"==typeof i&&(i=n.$node.data("mejsoptions")),n.options=e.extend({},mejs.MepDefaults,i),n.options.timeFormat||(n.options.timeFormat="mm:ss",n.options.alwaysShowHours&&(n.options.timeFormat="hh:mm:ss"),n.options.showTimecodeFrameCount&&(n.options.timeFormat+=":ff")),mejs.Utility.calculateTimeFormat(0,n.options,n.options.framesPerSecond||25),n.id="mep_"+mejs.mepIndex++,mejs.players[n.id]=n,n.init(),n):void 0},mejs.MediaElementPlayer.prototype={hasFocus:!1,controlsAreVisible:!0,init:function(){var t=this,i=mejs.MediaFeatures,n=e.extend(!0,{},t.options,{success:function(e,i){t.meReady(e,i)},error:function(e){t.handleError(e)}}),s=t.media.tagName.toLowerCase();if(t.isDynamic="audio"!==s&&"video"!==s,t.isDynamic?t.isVideo=t.options.isVideo:t.isVideo="audio"!==s&&t.options.isVideo,i.isiPad&&t.options.iPadUseNativeControls||i.isiPhone&&t.options.iPhoneUseNativeControls)t.$media.attr("controls","controls"),i.isiPad&&null!==t.media.getAttribute("autoplay")&&t.play();else if(i.isAndroid&&t.options.AndroidUseNativeControls);else{t.$media.removeAttr("controls");var a=t.isVideo?mejs.i18n.t("Video Player"):mejs.i18n.t("Audio Player");e('<span class="mejs-offscreen">'+a+"</span>").insertBefore(t.$media),t.container=e('<div id="'+t.id+'" class="mejs-container '+(mejs.MediaFeatures.svgAsImg?"svg":"no-svg")+'" tabindex="0" role="application" aria-label="'+a+'"><div class="mejs-inner"><div class="mejs-mediaelement"></div><div class="mejs-layers"></div><div class="mejs-controls"></div><div class="mejs-clear"></div></div></div>').addClass(t.$media[0].className).insertBefore(t.$media).focus(function(e){if(!t.controlsAreVisible){t.showControls(!0);var i=t.container.find(".mejs-playpause-button > button");i.focus()}}),t.container.addClass((i.isAndroid?"mejs-android ":"")+(i.isiOS?"mejs-ios ":"")+(i.isiPad?"mejs-ipad ":"")+(i.isiPhone?"mejs-iphone ":"")+(t.isVideo?"mejs-video ":"mejs-audio ")),t.container.find(".mejs-mediaelement").append(t.$media),t.node.player=t,t.controls=t.container.find(".mejs-controls"),t.layers=t.container.find(".mejs-layers");var o=t.isVideo?"video":"audio",r=o.substring(0,1).toUpperCase()+o.substring(1);t.options[o+"Width"]>0||t.options[o+"Width"].toString().indexOf("%")>-1?t.width=t.options[o+"Width"]:""!==t.media.style.width&&null!==t.media.style.width?t.width=t.media.style.width:null!==t.media.getAttribute("width")?t.width=t.$media.attr("width"):t.width=t.options["default"+r+"Width"],t.options[o+"Height"]>0||t.options[o+"Height"].toString().indexOf("%")>-1?t.height=t.options[o+"Height"]:""!==t.media.style.height&&null!==t.media.style.height?t.height=t.media.style.height:null!==t.$media[0].getAttribute("height")?t.height=t.$media.attr("height"):t.height=t.options["default"+r+"Height"],t.setPlayerSize(t.width,t.height),n.pluginWidth=t.width,n.pluginHeight=t.height}mejs.MediaElement(t.$media[0],n),"undefined"!=typeof t.container&&t.controlsAreVisible&&t.container.trigger("controlsshown")},showControls:function(e){var t=this;e="undefined"==typeof e||e,t.controlsAreVisible||(e?(t.controls.css("visibility","visible").stop(!0,!0).fadeIn(200,function(){t.controlsAreVisible=!0,t.container.trigger("controlsshown")}),t.container.parent().find(".mejs-control").css("visibility","visible").stop(!0,!0).fadeIn(200,function(){t.controlsAreVisible=!0})):(t.controls.css("visibility","visible").css("display","block"),t.container.parent().find(".mejs-control").css("visibility","visible").css("display","block"),t.controlsAreVisible=!0,t.container.trigger("controlsshown")),t.setControlsSize())},hideControls:function(t){var i=this;t="undefined"==typeof t||t,!i.controlsAreVisible||i.options.alwaysShowControls||i.keyboardAction||(t?(i.controls.stop(!0,!0).fadeOut(200,function(){e(this).css("visibility","hidden").css("display","block"),i.controlsAreVisible=!1,i.container.trigger("controlshidden")}),i.container.parent().find(".mejs-control").stop(!0,!0).fadeOut(200,function(){e(this).css("visibility","hidden").css("display","block")})):(i.controls.css("visibility","hidden").css("display","block"),i.container.parent().find(".mejs-control").css("visibility","hidden").css("display","block"),i.controlsAreVisible=!1,i.container.trigger("controlshidden")))},controlsTimer:null,startControlsTimer:function(e){var t=this;e="undefined"!=typeof e?e:1500,t.killControlsTimer("start"),t.controlsTimer=setTimeout(function(){t.hideControls(),t.killControlsTimer("hide")},e)},killControlsTimer:function(e){var t=this;null!==t.controlsTimer&&(clearTimeout(t.controlsTimer),delete t.controlsTimer,t.controlsTimer=null)},controlsEnabled:!0,disableControls:function(){var e=this;e.killControlsTimer(),e.hideControls(!1),this.controlsEnabled=!1},enableControls:function(){var e=this;e.showControls(!1),e.controlsEnabled=!0},meReady:function(t,i){var n,s,a=this,o=mejs.MediaFeatures,r=i.getAttribute("autoplay"),l=!("undefined"==typeof r||null===r||"false"===r);if(!a.created){if(a.created=!0,a.media=t,a.domNode=i,!(o.isAndroid&&a.options.AndroidUseNativeControls||o.isiPad&&a.options.iPadUseNativeControls||o.isiPhone&&a.options.iPhoneUseNativeControls)){a.buildposter(a,a.controls,a.layers,a.media),a.buildkeyboard(a,a.controls,a.layers,a.media),a.buildoverlays(a,a.controls,a.layers,a.media),a.findTracks();for(n in a.options.features)if(s=a.options.features[n],a["build"+s])try{a["build"+s](a,a.controls,a.layers,a.media)}catch(d){}a.container.trigger("controlsready"),a.setPlayerSize(a.width,a.height),a.setControlsSize(),a.isVideo&&(mejs.MediaFeatures.hasTouch?a.$media.bind("touchstart",function(){a.controlsAreVisible?a.hideControls(!1):a.controlsEnabled&&a.showControls(!1)}):(a.clickToPlayPauseCallback=function(){a.options.clickToPlayPause&&(a.media.paused?a.play():a.pause())},a.media.addEventListener("click",a.clickToPlayPauseCallback,!1),a.container.bind("mouseenter",function(){a.controlsEnabled&&(a.options.alwaysShowControls||(a.killControlsTimer("enter"),a.showControls(),a.startControlsTimer(2500)))}).bind("mousemove",function(){a.controlsEnabled&&(a.controlsAreVisible||a.showControls(),a.options.alwaysShowControls||a.startControlsTimer(2500))}).bind("mouseleave",function(){a.controlsEnabled&&(a.media.paused||a.options.alwaysShowControls||a.startControlsTimer(1e3))})),a.options.hideVideoControlsOnLoad&&a.hideControls(!1),l&&!a.options.alwaysShowControls&&a.hideControls(),a.options.enableAutosize&&a.media.addEventListener("loadedmetadata",function(e){a.options.videoHeight<=0&&null===a.domNode.getAttribute("height")&&!isNaN(e.target.videoHeight)&&(a.setPlayerSize(e.target.videoWidth,e.target.videoHeight),a.setControlsSize(),a.media.setVideoSize(e.target.videoWidth,e.target.videoHeight))},!1)),t.addEventListener("play",function(){var e;for(e in mejs.players){var t=mejs.players[e];t.id==a.id||!a.options.pauseOtherPlayers||t.paused||t.ended||t.pause(),t.hasFocus=!1}a.hasFocus=!0},!1),a.media.addEventListener("ended",function(t){if(a.options.autoRewind)try{a.media.setCurrentTime(0),window.setTimeout(function(){e(a.container).find(".mejs-overlay-loading").parent().hide()},20)}catch(i){}a.media.pause(),a.setProgressRail&&a.setProgressRail(),a.setCurrentRail&&a.setCurrentRail(),a.options.loop?a.play():!a.options.alwaysShowControls&&a.controlsEnabled&&a.showControls()},!1),a.media.addEventListener("loadedmetadata",function(e){a.updateDuration&&a.updateDuration(),a.updateCurrent&&a.updateCurrent(),a.isFullScreen||(a.setPlayerSize(a.width,a.height),a.setControlsSize())},!1);var c=null;if(a.media.addEventListener("timeupdate",function(){c!==this.duration&&(c=this.duration,mejs.Utility.calculateTimeFormat(c,a.options,a.options.framesPerSecond||25))},!1),a.container.focusout(function(t){if(t.relatedTarget){var i=e(t.relatedTarget);a.keyboardAction&&0===i.parents(".mejs-container").length&&(a.keyboardAction=!1,a.hideControls(!0))}}),setTimeout(function(){a.setPlayerSize(a.width,a.height),a.setControlsSize()},50),!e(t).is(":visible"))var u=setInterval(function(){e(t).is(":visible")&&(a.setPlayerSize(a.width,a.height),a.setControlsSize(),clearInterval(u))},1);a.globalBind("resize",function(){if(a.isFullScreen||mejs.MediaFeatures.hasTrueNativeFullScreen&&document.webkitIsFullScreen||!e(t).is(":visible")||a.setPlayerSize(a.width,a.height),!e(t).is(":visible"))var i=setInterval(function(){e(t).is(":visible")&&(a.setPlayerSize(a.width,a.height),a.setControlsSize(),clearInterval(i))},1);a.setControlsSize()}),"youtube"==a.media.pluginType&&(o.isiOS||o.isAndroid)&&a.container.find(".mejs-overlay-play").hide()}l&&"native"==t.pluginType&&a.play(),a.options.success&&("string"==typeof a.options.success?window[a.options.success](a.media,a.domNode,a):a.options.success(a.media,a.domNode,a))}},handleError:function(e){var t=this;t.controls&&t.controls.hide(),t.options.error&&t.options.error(e)},setPlayerSize:function(t,i){var n=this;if(!n.options.setDimensions)return!1;if("undefined"!=typeof t&&(n.width=t),"undefined"!=typeof i&&(n.height=i),n.height.toString().indexOf("%")>0||"none"!==n.$node.css("max-width")&&"t.width"!==n.$node.css("max-width")||n.$node[0].currentStyle&&"100%"===n.$node[0].currentStyle.maxWidth){var s=function(){return n.isVideo?n.media.videoWidth&&n.media.videoWidth>0?n.media.videoWidth:null!==n.media.getAttribute("width")?n.media.getAttribute("width"):n.options.defaultVideoWidth:n.options.defaultAudioWidth}(),a=function(){return n.isVideo?n.media.videoHeight&&n.media.videoHeight>0?n.media.videoHeight:null!==n.media.getAttribute("height")?n.media.getAttribute("height"):n.options.defaultVideoHeight:n.options.defaultAudioHeight}(),o=n.container.parent().closest(":visible").width(),r=n.container.parent().closest(":visible").height(),l=n.isVideo||!n.options.autosizeProgress?parseInt(o*a/s,10):a;isNaN(l)&&(l=r),n.container.parent().length>0&&"body"===n.container.parent()[0].tagName.toLowerCase()&&(o=e(window).width(),l=e(window).height()),l&&o&&(n.container.width(o).height(l),n.$media.add(n.container.find(".mejs-shim")).width("100%").height("100%"),n.isVideo&&n.media.setVideoSize&&n.media.setVideoSize(o,l),n.layers.children(".mejs-layer").width("100%").height("100%"))}else n.container.width(n.width).height(n.height),n.layers.children(".mejs-layer").width(n.width).height(n.height)},setControlsSize:function(){var t=this,i=0,n=0,s=t.controls.find(".mejs-time-rail"),a=t.controls.find(".mejs-time-total"),o=s.siblings(),r=o.last(),l=null;if(t.container.is(":visible")&&s.length&&s.is(":visible")){t.options&&!t.options.autosizeProgress&&(n=parseInt(s.css("width"),10)),0!==n&&n||(o.each(function(){var t=e(this);"absolute"!=t.css("position")&&t.is(":visible")&&(i+=e(this).outerWidth(!0))}),n=t.controls.width()-i-(s.outerWidth(!0)-s.width()));do s.width(n),a.width(n-(a.outerWidth(!0)-a.width())),"absolute"!=r.css("position")&&(l=r.length?r.position():null,n--);while(null!==l&&l.top>0&&n>0);t.container.trigger("controlsresize")}},buildposter:function(t,i,n,s){var a=this,o=e('<div class="mejs-poster mejs-layer"></div>').appendTo(n),r=t.$media.attr("poster");""!==t.options.poster&&(r=t.options.poster),r?a.setPoster(r):o.hide(),s.addEventListener("play",function(){o.hide()},!1),t.options.showPosterWhenEnded&&t.options.autoRewind&&s.addEventListener("ended",function(){o.show()},!1)},setPoster:function(t){var i=this,n=i.container.find(".mejs-poster"),s=n.find("img");0===s.length&&(s=e('<img width="100%" height="100%" alt="" />').appendTo(n)),s.attr("src",t),n.css({"background-image":"url("+t+")","background-size":"cover"})},buildoverlays:function(t,i,n,s){var a=this;if(t.isVideo){var o=e('<div class="mejs-overlay mejs-layer"><div class="mejs-overlay-loading"><span></span></div></div>').hide().appendTo(n),r=e('<div class="mejs-overlay mejs-layer"><div class="mejs-overlay-error"></div></div>').hide().appendTo(n),l=e('<div class="mejs-overlay mejs-layer mejs-overlay-play"><div class="mejs-overlay-button"></div></div>').appendTo(n).bind("click",function(){a.options.clickToPlayPause&&s.paused&&s.play()});s.addEventListener("play",function(){l.hide(),o.hide(),i.find(".mejs-time-buffering").hide(),r.hide()},!1),s.addEventListener("playing",function(){l.hide(),o.hide(),i.find(".mejs-time-buffering").hide(),r.hide()},!1),s.addEventListener("seeking",function(){o.show(),i.find(".mejs-time-buffering").show()},!1),s.addEventListener("seeked",function(){o.hide(),i.find(".mejs-time-buffering").hide()},!1),s.addEventListener("pause",function(){mejs.MediaFeatures.isiPhone||l.show()},!1),s.addEventListener("waiting",function(){o.show(),i.find(".mejs-time-buffering").show()},!1),s.addEventListener("loadeddata",function(){o.show(),i.find(".mejs-time-buffering").show(),mejs.MediaFeatures.isAndroid&&(s.canplayTimeout=window.setTimeout(function(){if(document.createEvent){var e=document.createEvent("HTMLEvents");return e.initEvent("canplay",!0,!0),s.dispatchEvent(e)}},300))},!1),s.addEventListener("canplay",function(){o.hide(),i.find(".mejs-time-buffering").hide(),clearTimeout(s.canplayTimeout)},!1),s.addEventListener("error",function(e){a.handleError(e),o.hide(),l.hide(),r.show(),r.find(".mejs-overlay-error").html("Error loading this resource")},!1),s.addEventListener("keydown",function(e){a.onkeydown(t,s,e)},!1)}},buildkeyboard:function(t,i,n,s){var a=this;a.container.keydown(function(){a.keyboardAction=!0}),a.globalBind("keydown",function(e){return a.onkeydown(t,s,e)}),a.globalBind("click",function(i){t.hasFocus=0!==e(i.target).closest(".mejs-container").length})},onkeydown:function(e,t,i){if(e.hasFocus&&e.options.enableKeyboard)for(var n=0,s=e.options.keyActions.length;s>n;n++)for(var a=e.options.keyActions[n],o=0,r=a.keys.length;r>o;o++)if(i.keyCode==a.keys[o])return"function"==typeof i.preventDefault&&i.preventDefault(),a.action(e,t,i.keyCode),!1;return!0},findTracks:function(){var t=this,i=t.$media.find("track");t.tracks=[],i.each(function(i,n){n=e(n),t.tracks.push({srclang:n.attr("srclang")?n.attr("srclang").toLowerCase():"",src:n.attr("src"),kind:n.attr("kind"),label:n.attr("label")||"",entries:[],isLoaded:!1})})},changeSkin:function(e){this.container[0].className="mejs-container "+e,this.setPlayerSize(this.width,this.height),this.setControlsSize()},play:function(){this.load(),this.media.play()},pause:function(){try{this.media.pause()}catch(e){}},load:function(){this.isLoaded||this.media.load(),this.isLoaded=!0},setMuted:function(e){this.media.setMuted(e)},setCurrentTime:function(e){this.media.setCurrentTime(e)},getCurrentTime:function(){return this.media.currentTime},setVolume:function(e){this.media.setVolume(e)},getVolume:function(){return this.media.volume},setSrc:function(e){this.media.setSrc(e)},remove:function(){var e,t,i=this;i.container.prev(".mejs-offscreen").remove();for(e in i.options.features)if(t=i.options.features[e],i["clean"+t])try{i["clean"+t](i)}catch(n){}i.isDynamic?i.$node.insertBefore(i.container):(i.$media.prop("controls",!0),i.$node.clone().insertBefore(i.container).show(),i.$node.remove()),"native"!==i.media.pluginType&&i.media.remove(),delete mejs.players[i.id],"object"==typeof i.container&&i.container.remove(),i.globalUnbind(),delete i.node.player},rebuildtracks:function(){var e=this;e.findTracks(),e.buildtracks(e,e.controls,e.layers,e.media)},resetSize:function(){var e=this;setTimeout(function(){e.setPlayerSize(e.width,e.height),e.setControlsSize()},50)}},function(){function t(t,n){var s={d:[],w:[]};return e.each((t||"").split(" "),function(e,t){var a=t+"."+n;0===a.indexOf(".")?(s.d.push(a),s.w.push(a)):s[i.test(t)?"w":"d"].push(a)}),s.d=s.d.join(" "),s.w=s.w.join(" "),s}var i=/^((after|before)print|(before)?unload|hashchange|message|o(ff|n)line|page(hide|show)|popstate|resize|storage)\b/;mejs.MediaElementPlayer.prototype.globalBind=function(i,n,s){var a=this,o=a.node?a.node.ownerDocument:document;i=t(i,a.id),i.d&&e(o).bind(i.d,n,s),i.w&&e(window).bind(i.w,n,s)},mejs.MediaElementPlayer.prototype.globalUnbind=function(i,n){var s=this,a=s.node?s.node.ownerDocument:document;i=t(i,s.id),i.d&&e(a).unbind(i.d,n),i.w&&e(window).unbind(i.w,n)}}(),"undefined"!=typeof e&&(e.fn.mediaelementplayer=function(t){return t===!1?this.each(function(){var t=e(this).data("mediaelementplayer");t&&t.remove(),e(this).removeData("mediaelementplayer")}):this.each(function(){e(this).data("mediaelementplayer",new mejs.MediaElementPlayer(this,t))}),this},e(document).ready(function(){e(".mejs-player").mediaelementplayer()})),window.MediaElementPlayer=mejs.MediaElementPlayer}(mejs.$),function(e){e.extend(mejs.MepDefaults,{playText:mejs.i18n.t("Play"),pauseText:mejs.i18n.t("Pause")}),e.extend(MediaElementPlayer.prototype,{buildplaypause:function(t,i,n,s){function a(e){"play"===e?(l.removeClass("mejs-play").addClass("mejs-pause"),d.attr({title:r.pauseText,"aria-label":r.pauseText})):(l.removeClass("mejs-pause").addClass("mejs-play"),d.attr({title:r.playText,"aria-label":r.playText}))}var o=this,r=o.options,l=e('<div class="mejs-button mejs-playpause-button mejs-play" ><button type="button" aria-controls="'+o.id+'" title="'+r.playText+'" aria-label="'+r.playText+'"></button></div>').appendTo(i).click(function(e){return e.preventDefault(),s.paused?s.play():s.pause(),!1}),d=l.find("button");a("pse"),s.addEventListener("play",function(){a("play")},!1),s.addEventListener("playing",function(){a("play")},!1),s.addEventListener("pause",function(){a("pse")},!1),s.addEventListener("paused",function(){a("pse")},!1)}})}(mejs.$),function(e){e.extend(mejs.MepDefaults,{stopText:"Stop"}),e.extend(MediaElementPlayer.prototype,{buildstop:function(t,i,n,s){var a=this;e('<div class="mejs-button mejs-stop-button mejs-stop"><button type="button" aria-controls="'+a.id+'" title="'+a.options.stopText+'" aria-label="'+a.options.stopText+'"></button></div>').appendTo(i).click(function(){s.paused||s.pause(),s.currentTime>0&&(s.setCurrentTime(0),s.pause(),i.find(".mejs-time-current").width("0px"),i.find(".mejs-time-handle").css("left","0px"),i.find(".mejs-time-float-current").html(mejs.Utility.secondsToTimeCode(0,t.options)),i.find(".mejs-currenttime").html(mejs.Utility.secondsToTimeCode(0,t.options)),n.find(".mejs-poster").show())})}})}(mejs.$),function(e){e.extend(mejs.MepDefaults,{progessHelpText:mejs.i18n.t("Use Left/Right Arrow keys to advance one second, Up/Down arrows to advance ten seconds.")}),e.extend(MediaElementPlayer.prototype,{buildprogress:function(t,i,n,s){e('<div class="mejs-time-rail"><span  class="mejs-time-total mejs-time-slider"><span class="mejs-time-buffering"></span><span class="mejs-time-loaded"></span><span class="mejs-time-current"></span><span class="mejs-time-handle"></span><span class="mejs-time-float"><span class="mejs-time-float-current">00:00</span><span class="mejs-time-float-corner"></span></span></span></div>').appendTo(i),i.find(".mejs-time-buffering").hide();var a=this,o=i.find(".mejs-time-total"),r=i.find(".mejs-time-loaded"),l=i.find(".mejs-time-current"),d=i.find(".mejs-time-handle"),c=i.find(".mejs-time-float"),u=i.find(".mejs-time-float-current"),p=i.find(".mejs-time-slider"),m=function(e){var i,n=o.offset(),a=o.width(),r=0,l=0,d=0;i=e.originalEvent&&e.originalEvent.changedTouches?e.originalEvent.changedTouches[0].pageX:e.changedTouches?e.changedTouches[0].pageX:e.pageX,s.duration&&(i<n.left?i=n.left:i>a+n.left&&(i=a+n.left),d=i-n.left,r=d/a,l=.02>=r?0:r*s.duration,h&&l!==s.currentTime&&s.setCurrentTime(l),mejs.MediaFeatures.hasTouch||(c.css("left",d),u.html(mejs.Utility.secondsToTimeCode(l,t.options)),c.show()))},h=!1,f=!1,v=0,g=!1,b=t.options.autoRewind,y=function(e){var i=s.currentTime,n=mejs.i18n.t("Time Slider"),a=mejs.Utility.secondsToTimeCode(i,t.options),o=s.duration;p.attr({"aria-label":n,"aria-valuemin":0,"aria-valuemax":o,"aria-valuenow":i,"aria-valuetext":a,role:"slider",tabindex:0})},w=function(){var e=new Date;e-v>=1e3&&s.play()};p.bind("focus",function(e){t.options.autoRewind=!1}),p.bind("blur",function(e){t.options.autoRewind=b}),p.bind("keydown",function(e){new Date-v>=1e3&&(g=s.paused);var t=e.keyCode,i=s.duration,n=s.currentTime;switch(t){case 37:n-=1;break;case 39:n+=1;break;case 38:n+=Math.floor(.1*i);break;case 40:n-=Math.floor(.1*i);break;case 36:n=0;break;case 35:n=i;break;case 10:return void(s.paused?s.play():s.pause());case 13:return void(s.paused?s.play():s.pause());default:return}return n=0>n?0:n>=i?i:Math.floor(n),v=new Date,g||s.pause(),n<s.duration&&!g&&setTimeout(w,1100),s.setCurrentTime(n),e.preventDefault(),e.stopPropagation(),!1}),o.bind("mousedown touchstart",function(e){1!==e.which&&0!==e.which||(h=!0,m(e),a.globalBind("mousemove.dur touchmove.dur",function(e){m(e)}),a.globalBind("mouseup.dur touchend.dur",function(e){h=!1,c.hide(),a.globalUnbind(".dur")}))}).bind("mouseenter",function(e){f=!0,a.globalBind("mousemove.dur",function(e){m(e)}),mejs.MediaFeatures.hasTouch||c.show()}).bind("mouseleave",function(e){f=!1,h||(a.globalUnbind(".dur"),c.hide())}),s.addEventListener("progress",function(e){t.setProgressRail(e),t.setCurrentRail(e)},!1),s.addEventListener("timeupdate",function(e){t.setProgressRail(e),t.setCurrentRail(e),y(e)},!1),a.container.on("controlsresize",function(){t.setProgressRail(),t.setCurrentRail()}),a.loaded=r,a.total=o,a.current=l,a.handle=d},setProgressRail:function(e){var t=this,i=void 0!==e?e.target:t.media,n=null;i&&i.buffered&&i.buffered.length>0&&i.buffered.end&&i.duration?n=i.buffered.end(i.buffered.length-1)/i.duration:i&&void 0!==i.bytesTotal&&i.bytesTotal>0&&void 0!==i.bufferedBytes?n=i.bufferedBytes/i.bytesTotal:e&&e.lengthComputable&&0!==e.total&&(n=e.loaded/e.total),null!==n&&(n=Math.min(1,Math.max(0,n)),t.loaded&&t.total&&t.loaded.width(t.total.width()*n))},setCurrentRail:function(){var e=this;if(void 0!==e.media.currentTime&&e.media.duration&&e.total&&e.handle){var t=Math.round(e.total.width()*e.media.currentTime/e.media.duration),i=t-Math.round(e.handle.outerWidth(!0)/2);e.current.width(t),e.handle.css("left",i)}}})}(mejs.$),function(e){e.extend(mejs.MepDefaults,{duration:-1,timeAndDurationSeparator:"<span> | </span>"}),e.extend(MediaElementPlayer.prototype,{buildcurrent:function(t,i,n,s){var a=this;e('<div class="mejs-time" role="timer" aria-live="off"><span class="mejs-currenttime">'+mejs.Utility.secondsToTimeCode(0,t.options)+"</span></div>").appendTo(i),a.currenttime=a.controls.find(".mejs-currenttime"),s.addEventListener("timeupdate",function(){t.updateCurrent()},!1)},buildduration:function(t,i,n,s){var a=this;i.children().last().find(".mejs-currenttime").length>0?e(a.options.timeAndDurationSeparator+'<span class="mejs-duration">'+mejs.Utility.secondsToTimeCode(a.options.duration,a.options)+"</span>").appendTo(i.find(".mejs-time")):(i.find(".mejs-currenttime").parent().addClass("mejs-currenttime-container"),e('<div class="mejs-time mejs-duration-container"><span class="mejs-duration">'+mejs.Utility.secondsToTimeCode(a.options.duration,a.options)+"</span></div>").appendTo(i)),a.durationD=a.controls.find(".mejs-duration"),s.addEventListener("timeupdate",function(){t.updateDuration()},!1)},updateCurrent:function(){var e=this;e.currenttime&&e.currenttime.html(mejs.Utility.secondsToTimeCode(e.media.currentTime,e.options))},updateDuration:function(){var e=this;e.container.toggleClass("mejs-long-video",e.media.duration>3600),e.durationD&&(e.options.duration>0||e.media.duration)&&e.durationD.html(mejs.Utility.secondsToTimeCode(e.options.duration>0?e.options.duration:e.media.duration,e.options))}})}(mejs.$),function(e){e.extend(mejs.MepDefaults,{muteText:mejs.i18n.t("Mute Toggle"),allyVolumeControlText:mejs.i18n.t("Use Up/Down Arrow keys to increase or decrease volume."),hideVolumeOnTouchDevices:!0,audioVolume:"horizontal",videoVolume:"vertical"}),e.extend(MediaElementPlayer.prototype,{buildvolume:function(t,i,n,s){if(!mejs.MediaFeatures.isAndroid&&!mejs.MediaFeatures.isiOS||!this.options.hideVolumeOnTouchDevices){var a=this,o=a.isVideo?a.options.videoVolume:a.options.audioVolume,r="horizontal"==o?e('<div class="mejs-button mejs-volume-button mejs-mute"><button type="button" aria-controls="'+a.id+'" title="'+a.options.muteText+'" aria-label="'+a.options.muteText+'"></button></div><a href="javascript:void(0);" class="mejs-horizontal-volume-slider"><span class="mejs-offscreen">'+a.options.allyVolumeControlText+'</span><div class="mejs-horizontal-volume-total"></div><div class="mejs-horizontal-volume-current"></div><div class="mejs-horizontal-volume-handle"></div></a>').appendTo(i):e('<div class="mejs-button mejs-volume-button mejs-mute"><button type="button" aria-controls="'+a.id+'" title="'+a.options.muteText+'" aria-label="'+a.options.muteText+'"></button><a href="javascript:void(0);" class="mejs-volume-slider"><span class="mejs-offscreen">'+a.options.allyVolumeControlText+'</span><div class="mejs-volume-total"></div><div class="mejs-volume-current"></div><div class="mejs-volume-handle"></div></a></div>').appendTo(i),l=a.container.find(".mejs-volume-slider, .mejs-horizontal-volume-slider"),d=a.container.find(".mejs-volume-total, .mejs-horizontal-volume-total"),c=a.container.find(".mejs-volume-current, .mejs-horizontal-volume-current"),u=a.container.find(".mejs-volume-handle, .mejs-horizontal-volume-handle"),p=function(e,t){if(!l.is(":visible")&&"undefined"==typeof t)return l.show(),p(e,!0),void l.hide();e=Math.max(0,e),e=Math.min(e,1),0===e?(r.removeClass("mejs-mute").addClass("mejs-unmute"),r.children("button").attr("title",mejs.i18n.t("Unmute")).attr("aria-label",mejs.i18n.t("Unmute"))):(r.removeClass("mejs-unmute").addClass("mejs-mute"),r.children("button").attr("title",mejs.i18n.t("Mute")).attr("aria-label",mejs.i18n.t("Mute")));var i=d.position();if("vertical"==o){var n=d.height(),s=n-n*e;u.css("top",Math.round(i.top+s-u.height()/2)),c.height(n-s),c.css("top",i.top+s)}else{var a=d.width(),m=a*e;u.css("left",Math.round(i.left+m-u.width()/2)),c.width(Math.round(m))}},m=function(e){var t=null,i=d.offset();if("vertical"===o){var n=d.height(),a=e.pageY-i.top;if(t=(n-a)/n,0===i.top||0===i.left)return}else{var r=d.width(),l=e.pageX-i.left;t=l/r}t=Math.max(0,t),t=Math.min(t,1),p(t),0===t?s.setMuted(!0):s.setMuted(!1),s.setVolume(t)},h=!1,f=!1;r.hover(function(){l.show(),f=!0},function(){f=!1,h||"vertical"!=o||l.hide()});var v=function(e){var t=Math.floor(100*s.volume);l.attr({"aria-label":mejs.i18n.t("volumeSlider"),"aria-valuemin":0,"aria-valuemax":100,"aria-valuenow":t,"aria-valuetext":t+"%",role:"slider",tabindex:0})};l.bind("mouseover",function(){f=!0}).bind("mousedown",function(e){return m(e),a.globalBind("mousemove.vol",function(e){m(e)}),a.globalBind("mouseup.vol",function(){h=!1,a.globalUnbind(".vol"),f||"vertical"!=o||l.hide()}),h=!0,!1}).bind("keydown",function(e){var t=e.keyCode,i=s.volume;switch(t){case 38:i+=.1;break;case 40:i-=.1;break;default:return!0}return h=!1,p(i),s.setVolume(i),!1}),r.find("button").click(function(){s.setMuted(!s.muted)}),r.find("button").bind("focus",function(){l.show()}),s.addEventListener("volumechange",function(e){h||(s.muted?(p(0),r.removeClass("mejs-mute").addClass("mejs-unmute")):(p(s.volume),r.removeClass("mejs-unmute").addClass("mejs-mute"))),v(e)},!1),0===t.options.startVolume&&s.setMuted(!0),"native"===s.pluginType&&s.setVolume(t.options.startVolume),a.container.on("controlsresize",function(){p(s.volume)})}}})}(mejs.$),function(e){e.extend(mejs.MepDefaults,{usePluginFullScreen:!0,newWindowCallback:function(){return""},fullscreenText:mejs.i18n.t("Fullscreen")}),e.extend(MediaElementPlayer.prototype,{isFullScreen:!1,isNativeFullScreen:!1,isInIframe:!1,buildfullscreen:function(t,i,n,s){if(t.isVideo){if(t.isInIframe=window.location!=window.parent.location,mejs.MediaFeatures.hasTrueNativeFullScreen){var a=function(e){t.isFullScreen&&(mejs.MediaFeatures.isFullScreen()?(t.isNativeFullScreen=!0,t.setControlsSize()):(t.isNativeFullScreen=!1,t.exitFullScreen()))};t.globalBind(mejs.MediaFeatures.fullScreenEventName,a)}var o=this,r=e('<div class="mejs-button mejs-fullscreen-button"><button type="button" aria-controls="'+o.id+'" title="'+o.options.fullscreenText+'" aria-label="'+o.options.fullscreenText+'"></button></div>').appendTo(i);if("native"===o.media.pluginType||!o.options.usePluginFullScreen&&!mejs.MediaFeatures.isFirefox)r.click(function(){var e=mejs.MediaFeatures.hasTrueNativeFullScreen&&mejs.MediaFeatures.isFullScreen()||t.isFullScreen;e?t.exitFullScreen():t.enterFullScreen()});else{var l=null,d=function(){var e,t=document.createElement("x"),i=document.documentElement,n=window.getComputedStyle;return"pointerEvents"in t.style?(t.style.pointerEvents="auto",t.style.pointerEvents="x",i.appendChild(t),e=n&&"auto"===n(t,"").pointerEvents,i.removeChild(t),!!e):!1}();if(d&&!mejs.MediaFeatures.isOpera){var c,u,p=!1,m=function(){if(p){for(var e in h)h[e].hide();r.css("pointer-events",""),o.controls.css("pointer-events",""),o.media.removeEventListener("click",o.clickToPlayPauseCallback),p=!1}},h={},f=["top","left","right","bottom"],v=function(){var e=r.offset().left-o.container.offset().left,t=r.offset().top-o.container.offset().top,i=r.outerWidth(!0),n=r.outerHeight(!0),s=o.container.width(),a=o.container.height();for(c in h)h[c].css({position:"absolute",top:0,left:0});h.top.width(s).height(t),h.left.width(e).height(n).css({top:t}),h.right.width(s-e-i).height(n).css({top:t,left:e+i}),h.bottom.width(s).height(a-n-t).css({top:t+n})};for(o.globalBind("resize",function(){v()}),c=0,u=f.length;u>c;c++)h[f[c]]=e('<div class="mejs-fullscreen-hover" />').appendTo(o.container).mouseover(m).hide();r.on("mouseover",function(){if(!o.isFullScreen){var e=r.offset(),i=t.container.offset();s.positionFullscreenButton(e.left-i.left,e.top-i.top,!1),r.css("pointer-events","none"),o.controls.css("pointer-events","none"),o.media.addEventListener("click",o.clickToPlayPauseCallback);for(c in h)h[c].show();v(),p=!0}}),s.addEventListener("fullscreenchange",function(e){o.isFullScreen=!o.isFullScreen,o.isFullScreen?o.media.removeEventListener("click",o.clickToPlayPauseCallback):o.media.addEventListener("click",o.clickToPlayPauseCallback),m()}),o.globalBind("mousemove",function(e){if(p){var t=r.offset();(e.pageY<t.top||e.pageY>t.top+r.outerHeight(!0)||e.pageX<t.left||e.pageX>t.left+r.outerWidth(!0))&&(r.css("pointer-events",""),o.controls.css("pointer-events",""),p=!1)}})}else r.on("mouseover",function(){null!==l&&(clearTimeout(l),delete l);var e=r.offset(),i=t.container.offset();s.positionFullscreenButton(e.left-i.left,e.top-i.top,!0)}).on("mouseout",function(){null!==l&&(clearTimeout(l),delete l),l=setTimeout(function(){s.hideFullscreenButton()},1500)})}t.fullscreenBtn=r,o.globalBind("keydown",function(e){(mejs.MediaFeatures.hasTrueNativeFullScreen&&mejs.MediaFeatures.isFullScreen()||o.isFullScreen)&&27==e.keyCode&&t.exitFullScreen()}),o.normalHeight=0,o.normalWidth=0}},cleanfullscreen:function(e){e.exitFullScreen()},containerSizeTimeout:null,enterFullScreen:function(){var t=this;if("native"===t.media.pluginType||!mejs.MediaFeatures.isFirefox&&!t.options.usePluginFullScreen){if(e(document.documentElement).addClass("mejs-fullscreen"),t.normalHeight=t.container.height(),t.normalWidth=t.container.width(),"native"===t.media.pluginType)if(mejs.MediaFeatures.hasTrueNativeFullScreen)mejs.MediaFeatures.requestFullScreen(t.container[0]),t.isInIframe&&setTimeout(function n(){if(t.isNativeFullScreen){var i=window.devicePixelRatio||1,s=.002,a=i*e(window).width(),o=screen.width,r=i*a;Math.abs(o-a)>Math.abs(o-r)&&(a=r);var l=Math.abs(o-a),d=o*s;
l>d?t.exitFullScreen():setTimeout(n,500)}},1e3);else if(mejs.MediaFeatures.hasSemiNativeFullScreen)return void t.media.webkitEnterFullscreen();if(t.isInIframe){var i=t.options.newWindowCallback(this);if(""!==i){if(!mejs.MediaFeatures.hasTrueNativeFullScreen)return t.pause(),void window.open(i,t.id,"top=0,left=0,width="+screen.availWidth+",height="+screen.availHeight+",resizable=yes,scrollbars=no,status=no,toolbar=no");setTimeout(function(){t.isNativeFullScreen||(t.pause(),window.open(i,t.id,"top=0,left=0,width="+screen.availWidth+",height="+screen.availHeight+",resizable=yes,scrollbars=no,status=no,toolbar=no"))},250)}}t.container.addClass("mejs-container-fullscreen").width("100%").height("100%"),t.containerSizeTimeout=setTimeout(function(){t.container.css({width:"100%",height:"100%"}),t.setControlsSize()},500),"native"===t.media.pluginType?t.$media.width("100%").height("100%"):(t.container.find(".mejs-shim").width("100%").height("100%"),t.media.setVideoSize(e(window).width(),e(window).height())),t.layers.children("div").width("100%").height("100%"),t.fullscreenBtn&&t.fullscreenBtn.removeClass("mejs-fullscreen").addClass("mejs-unfullscreen"),t.setControlsSize(),t.isFullScreen=!0,t.container.find(".mejs-captions-text").css("font-size",screen.width/t.width*1*100+"%"),t.container.find(".mejs-captions-position").css("bottom","45px"),t.container.trigger("enteredfullscreen")}},exitFullScreen:function(){var t=this;return clearTimeout(t.containerSizeTimeout),"native"!==t.media.pluginType&&mejs.MediaFeatures.isFirefox?void t.media.setFullscreen(!1):(mejs.MediaFeatures.hasTrueNativeFullScreen&&(mejs.MediaFeatures.isFullScreen()||t.isFullScreen)&&mejs.MediaFeatures.cancelFullScreen(),e(document.documentElement).removeClass("mejs-fullscreen"),t.container.removeClass("mejs-container-fullscreen").width(t.normalWidth).height(t.normalHeight),"native"===t.media.pluginType?t.$media.width(t.normalWidth).height(t.normalHeight):(t.container.find(".mejs-shim").width(t.normalWidth).height(t.normalHeight),t.media.setVideoSize(t.normalWidth,t.normalHeight)),t.layers.children("div").width(t.normalWidth).height(t.normalHeight),t.fullscreenBtn.removeClass("mejs-unfullscreen").addClass("mejs-fullscreen"),t.setControlsSize(),t.isFullScreen=!1,t.container.find(".mejs-captions-text").css("font-size",""),t.container.find(".mejs-captions-position").css("bottom",""),void t.container.trigger("exitedfullscreen"))}})}(mejs.$),function(e){e.extend(mejs.MepDefaults,{speeds:["2.00","1.50","1.25","1.00","0.75"],defaultSpeed:"1.00",speedChar:"x"}),e.extend(MediaElementPlayer.prototype,{buildspeed:function(t,i,n,s){var a=this;if("native"==a.media.pluginType){for(var o=null,r=null,l=null,d=null,c=[],u=!1,p=0,m=a.options.speeds.length;m>p;p++){var h=a.options.speeds[p];"string"==typeof h?(c.push({name:h+a.options.speedChar,value:h}),h===a.options.defaultSpeed&&(u=!0)):(c.push(h),h.value===a.options.defaultSpeed&&(u=!0))}u||c.push({name:a.options.defaultSpeed+a.options.speedChar,value:a.options.defaultSpeed}),c.sort(function(e,t){return parseFloat(t.value)-parseFloat(e.value)});var f=function(e){for(p=0,m=c.length;m>p;p++)if(c[p].value===e)return c[p].name},v='<div class="mejs-button mejs-speed-button"><button type="button">'+f(a.options.defaultSpeed)+'</button><div class="mejs-speed-selector"><ul>';for(p=0,il=c.length;p<il;p++)d=a.id+"-speed-"+c[p].value,v+='<li><input type="radio" name="speed" value="'+c[p].value+'" id="'+d+'" '+(c[p].value===a.options.defaultSpeed?" checked":"")+' /><label for="'+d+'" '+(c[p].value===a.options.defaultSpeed?' class="mejs-speed-selected"':"")+">"+c[p].name+"</label></li>";v+="</ul></div></div>",o=e(v).appendTo(i),r=o.find(".mejs-speed-selector"),l=a.options.defaultSpeed,s.addEventListener("loadedmetadata",function(e){l&&(s.playbackRate=parseFloat(l))},!0),r.on("click",'input[type="radio"]',function(){var t=e(this).attr("value");l=t,s.playbackRate=parseFloat(t),o.find("button").html(f(t)),o.find(".mejs-speed-selected").removeClass("mejs-speed-selected"),o.find('input[type="radio"]:checked').next().addClass("mejs-speed-selected")}),o.one("mouseenter focusin",function(){r.height(o.find(".mejs-speed-selector ul").outerHeight(!0)+o.find(".mejs-speed-translations").outerHeight(!0)).css("top",-1*r.height()+"px")})}}})}(mejs.$),function(e){e.extend(mejs.MepDefaults,{startLanguage:"",tracksText:mejs.i18n.t("Captions/Subtitles"),tracksAriaLive:!1,hideCaptionsButtonWhenEmpty:!0,toggleCaptionsButtonWhenOnlyOne:!1,slidesSelector:""}),e.extend(MediaElementPlayer.prototype,{hasChapters:!1,cleartracks:function(e,t,i,n){e&&(e.captions&&e.captions.remove(),e.chapters&&e.chapters.remove(),e.captionsText&&e.captionsText.remove(),e.captionsButton&&e.captionsButton.remove())},buildtracks:function(t,i,n,s){if(0!==t.tracks.length){var a,o=this,r=o.options.tracksAriaLive?'role="log" aria-live="assertive" aria-atomic="false"':"";if(o.domNode.textTracks)for(a=o.domNode.textTracks.length-1;a>=0;a--)o.domNode.textTracks[a].mode="hidden";o.cleartracks(t,i,n,s),t.chapters=e('<div class="mejs-chapters mejs-layer"></div>').prependTo(n).hide(),t.captions=e('<div class="mejs-captions-layer mejs-layer"><div class="mejs-captions-position mejs-captions-position-hover" '+r+'><span class="mejs-captions-text"></span></div></div>').prependTo(n).hide(),t.captionsText=t.captions.find(".mejs-captions-text"),t.captionsButton=e('<div class="mejs-button mejs-captions-button"><button type="button" aria-controls="'+o.id+'" title="'+o.options.tracksText+'" aria-label="'+o.options.tracksText+'"></button><div class="mejs-captions-selector"><ul><li><input type="radio" name="'+t.id+'_captions" id="'+t.id+'_captions_none" value="none" checked="checked" /><label for="'+t.id+'_captions_none">'+mejs.i18n.t("None")+"</label></li></ul></div></div>").appendTo(i);var l=0;for(a=0;a<t.tracks.length;a++)"subtitles"==t.tracks[a].kind&&l++;for(o.options.toggleCaptionsButtonWhenOnlyOne&&1==l?t.captionsButton.on("click",function(){null===t.selectedTrack?lang=t.tracks[0].srclang:lang="none",t.setTrack(lang)}):(t.captionsButton.on("mouseenter focusin",function(){e(this).find(".mejs-captions-selector").css("visibility","visible")}).on("click","input[type=radio]",function(){lang=this.value,t.setTrack(lang)}),t.captionsButton.on("mouseleave focusout",function(){e(this).find(".mejs-captions-selector").css("visibility","hidden")})),t.options.alwaysShowControls?t.container.find(".mejs-captions-position").addClass("mejs-captions-position-hover"):t.container.bind("controlsshown",function(){t.container.find(".mejs-captions-position").addClass("mejs-captions-position-hover")}).bind("controlshidden",function(){s.paused||t.container.find(".mejs-captions-position").removeClass("mejs-captions-position-hover")}),t.trackToLoad=-1,t.selectedTrack=null,t.isLoadingTrack=!1,a=0;a<t.tracks.length;a++)"subtitles"==t.tracks[a].kind&&t.addTrackButton(t.tracks[a].srclang,t.tracks[a].label);t.loadNextTrack(),s.addEventListener("timeupdate",function(e){t.displayCaptions()},!1),""!==t.options.slidesSelector&&(t.slidesContainer=e(t.options.slidesSelector),s.addEventListener("timeupdate",function(e){t.displaySlides()},!1)),s.addEventListener("loadedmetadata",function(e){t.displayChapters()},!1),t.container.hover(function(){t.hasChapters&&(t.chapters.css("visibility","visible"),t.chapters.fadeIn(200).height(t.chapters.find(".mejs-chapter").outerHeight()))},function(){t.hasChapters&&!s.paused&&t.chapters.fadeOut(200,function(){e(this).css("visibility","hidden"),e(this).css("display","block")})}),o.container.on("controlsresize",function(){o.adjustLanguageBox()}),null!==t.node.getAttribute("autoplay")&&t.chapters.css("visibility","hidden")}},setTrack:function(e){var t,i=this;if("none"==e)i.selectedTrack=null,i.captionsButton.removeClass("mejs-captions-enabled");else for(t=0;t<i.tracks.length;t++)if(i.tracks[t].srclang==e){null===i.selectedTrack&&i.captionsButton.addClass("mejs-captions-enabled"),i.selectedTrack=i.tracks[t],i.captions.attr("lang",i.selectedTrack.srclang),i.displayCaptions();break}},loadNextTrack:function(){var e=this;e.trackToLoad++,e.trackToLoad<e.tracks.length?(e.isLoadingTrack=!0,e.loadTrack(e.trackToLoad)):(e.isLoadingTrack=!1,e.checkForTracks())},loadTrack:function(t){var i=this,n=i.tracks[t],s=function(){n.isLoaded=!0,i.enableTrackButton(n.srclang,n.label),i.loadNextTrack()};e.ajax({url:n.src,dataType:"text",success:function(e){"string"==typeof e&&/<tt\s+xml/gi.exec(e)?n.entries=mejs.TrackFormatParser.dfxp.parse(e):n.entries=mejs.TrackFormatParser.webvtt.parse(e),s(),"chapters"==n.kind&&i.media.addEventListener("play",function(e){i.media.duration>0&&i.displayChapters(n)},!1),"slides"==n.kind&&i.setupSlides(n)},error:function(){i.removeTrackButton(n.srclang),i.loadNextTrack()}})},enableTrackButton:function(t,i){var n=this;""===i&&(i=mejs.language.codes[t]||t),n.captionsButton.find("input[value="+t+"]").prop("disabled",!1).siblings("label").html(i),n.options.startLanguage==t&&e("#"+n.id+"_captions_"+t).prop("checked",!0).trigger("click"),n.adjustLanguageBox()},removeTrackButton:function(e){var t=this;t.captionsButton.find("input[value="+e+"]").closest("li").remove(),t.adjustLanguageBox()},addTrackButton:function(t,i){var n=this;""===i&&(i=mejs.language.codes[t]||t),n.captionsButton.find("ul").append(e('<li><input type="radio" name="'+n.id+'_captions" id="'+n.id+"_captions_"+t+'" value="'+t+'" disabled="disabled" /><label for="'+n.id+"_captions_"+t+'">'+i+" (loading)</label></li>")),n.adjustLanguageBox(),n.container.find(".mejs-captions-translations option[value="+t+"]").remove()},adjustLanguageBox:function(){var e=this;e.captionsButton.find(".mejs-captions-selector").height(e.captionsButton.find(".mejs-captions-selector ul").outerHeight(!0)+e.captionsButton.find(".mejs-captions-translations").outerHeight(!0))},checkForTracks:function(){var e=this,t=!1;if(e.options.hideCaptionsButtonWhenEmpty){for(i=0;i<e.tracks.length;i++)if("subtitles"==e.tracks[i].kind&&e.tracks[i].isLoaded){t=!0;break}t||(e.captionsButton.hide(),e.setControlsSize())}},displayCaptions:function(){if("undefined"!=typeof this.tracks){var e,t=this,i=t.selectedTrack;if(null!==i&&i.isLoaded){for(e=0;e<i.entries.times.length;e++)if(t.media.currentTime>=i.entries.times[e].start&&t.media.currentTime<=i.entries.times[e].stop)return t.captionsText.html(i.entries.text[e]).attr("class","mejs-captions-text "+(i.entries.times[e].identifier||"")),void t.captions.show().height(0);t.captions.hide()}else t.captions.hide()}},setupSlides:function(e){var t=this;t.slides=e,t.slides.entries.imgs=[t.slides.entries.text.length],t.showSlide(0)},showSlide:function(t){if("undefined"!=typeof this.tracks&&"undefined"!=typeof this.slidesContainer){var i=this,n=i.slides.entries.text[t],s=i.slides.entries.imgs[t];"undefined"==typeof s||"undefined"==typeof s.fadeIn?i.slides.entries.imgs[t]=s=e('<img src="'+n+'">').on("load",function(){s.appendTo(i.slidesContainer).hide().fadeIn().siblings(":visible").fadeOut()}):s.is(":visible")||s.is(":animated")||s.fadeIn().siblings(":visible").fadeOut()}},displaySlides:function(){if("undefined"!=typeof this.slides){var e,t=this,i=t.slides;for(e=0;e<i.entries.times.length;e++)if(t.media.currentTime>=i.entries.times[e].start&&t.media.currentTime<=i.entries.times[e].stop)return void t.showSlide(e)}},displayChapters:function(){var e,t=this;for(e=0;e<t.tracks.length;e++)if("chapters"==t.tracks[e].kind&&t.tracks[e].isLoaded){t.drawChapters(t.tracks[e]),t.hasChapters=!0;break}},drawChapters:function(t){var i,n,s=this,a=0,o=0;for(s.chapters.empty(),i=0;i<t.entries.times.length;i++)n=t.entries.times[i].stop-t.entries.times[i].start,a=Math.floor(n/s.media.duration*100),(a+o>100||i==t.entries.times.length-1&&100>a+o)&&(a=100-o),s.chapters.append(e('<div class="mejs-chapter" rel="'+t.entries.times[i].start+'" style="left: '+o.toString()+"%;width: "+a.toString()+'%;"><div class="mejs-chapter-block'+(i==t.entries.times.length-1?" mejs-chapter-block-last":"")+'"><span class="ch-title">'+t.entries.text[i]+'</span><span class="ch-time">'+mejs.Utility.secondsToTimeCode(t.entries.times[i].start,s.options)+"&ndash;"+mejs.Utility.secondsToTimeCode(t.entries.times[i].stop,s.options)+"</span></div></div>")),o+=a;s.chapters.find("div.mejs-chapter").click(function(){s.media.setCurrentTime(parseFloat(e(this).attr("rel"))),s.media.paused&&s.media.play()}),s.chapters.show()}}),mejs.language={codes:{af:"Afrikaans",sq:"Albanian",ar:"Arabic",be:"Belarusian",bg:"Bulgarian",ca:"Catalan",zh:"Chinese","zh-cn":"Chinese Simplified","zh-tw":"Chinese Traditional",hr:"Croatian",cs:"Czech",da:"Danish",nl:"Dutch",en:"English",et:"Estonian",fl:"Filipino",fi:"Finnish",fr:"French",gl:"Galician",de:"German",el:"Greek",ht:"Haitian Creole",iw:"Hebrew",hi:"Hindi",hu:"Hungarian",is:"Icelandic",id:"Indonesian",ga:"Irish",it:"Italian",ja:"Japanese",ko:"Korean",lv:"Latvian",lt:"Lithuanian",mk:"Macedonian",ms:"Malay",mt:"Maltese",no:"Norwegian",fa:"Persian",pl:"Polish",pt:"Portuguese",ro:"Romanian",ru:"Russian",sr:"Serbian",sk:"Slovak",sl:"Slovenian",es:"Spanish",sw:"Swahili",sv:"Swedish",tl:"Tagalog",th:"Thai",tr:"Turkish",uk:"Ukrainian",vi:"Vietnamese",cy:"Welsh",yi:"Yiddish"}},mejs.TrackFormatParser={webvtt:{pattern_timecode:/^((?:[0-9]{1,2}:)?[0-9]{2}:[0-9]{2}([,.][0-9]{1,3})?) --\> ((?:[0-9]{1,2}:)?[0-9]{2}:[0-9]{2}([,.][0-9]{3})?)(.*)$/,parse:function(t){for(var i,n,s,a=0,o=mejs.TrackFormatParser.split2(t,/\r?\n/),r={text:[],times:[]};a<o.length;a++){if(i=this.pattern_timecode.exec(o[a]),i&&a<o.length){for(a-1>=0&&""!==o[a-1]&&(s=o[a-1]),a++,n=o[a],a++;""!==o[a]&&a<o.length;)n=n+"\n"+o[a],a++;n=e.trim(n).replace(/(\b(https?|ftp|file):\/\/[-A-Z0-9+&@#\/%?=~_|!:,.;]*[-A-Z0-9+&@#\/%=~_|])/gi,"<a href='$1' target='_blank'>$1</a>"),r.text.push(n),r.times.push({identifier:s,start:0===mejs.Utility.convertSMPTEtoSeconds(i[1])?.2:mejs.Utility.convertSMPTEtoSeconds(i[1]),stop:mejs.Utility.convertSMPTEtoSeconds(i[3]),settings:i[5]})}s=""}return r}},dfxp:{parse:function(t){t=e(t).filter("tt");var i,n,s=0,a=t.children("div").eq(0),o=a.find("p"),r=t.find("#"+a.attr("style")),l={text:[],times:[]};if(r.length){var d=r.removeAttr("id").get(0).attributes;if(d.length)for(i={},s=0;s<d.length;s++)i[d[s].name.split(":")[1]]=d[s].value}for(s=0;s<o.length;s++){var c,u={start:null,stop:null,style:null};if(o.eq(s).attr("begin")&&(u.start=mejs.Utility.convertSMPTEtoSeconds(o.eq(s).attr("begin"))),!u.start&&o.eq(s-1).attr("end")&&(u.start=mejs.Utility.convertSMPTEtoSeconds(o.eq(s-1).attr("end"))),o.eq(s).attr("end")&&(u.stop=mejs.Utility.convertSMPTEtoSeconds(o.eq(s).attr("end"))),!u.stop&&o.eq(s+1).attr("begin")&&(u.stop=mejs.Utility.convertSMPTEtoSeconds(o.eq(s+1).attr("begin"))),i){c="";for(var p in i)c+=p+":"+i[p]+";"}c&&(u.style=c),0===u.start&&(u.start=.2),l.times.push(u),n=e.trim(o.eq(s).html()).replace(/(\b(https?|ftp|file):\/\/[-A-Z0-9+&@#\/%?=~_|!:,.;]*[-A-Z0-9+&@#\/%=~_|])/gi,"<a href='$1' target='_blank'>$1</a>"),l.text.push(n),0===l.times.start&&(l.times.start=2)}return l}},split2:function(e,t){return e.split(t)}},3!="x\n\ny".split(/\n/gi).length&&(mejs.TrackFormatParser.split2=function(e,t){var i,n=[],s="";for(i=0;i<e.length;i++)s+=e.substring(i,i+1),t.test(s)&&(n.push(s.replace(t,"")),s="");return n.push(s),n})}(mejs.$),function(e){e.extend(mejs.MepDefaults,{contextMenuItems:[{render:function(e){return"undefined"==typeof e.enterFullScreen?null:e.isFullScreen?mejs.i18n.t("Turn off Fullscreen"):mejs.i18n.t("Go Fullscreen")},click:function(e){e.isFullScreen?e.exitFullScreen():e.enterFullScreen()}},{render:function(e){return e.media.muted?mejs.i18n.t("Unmute"):mejs.i18n.t("Mute")},click:function(e){e.media.muted?e.setMuted(!1):e.setMuted(!0)}},{isSeparator:!0},{render:function(e){return mejs.i18n.t("Download Video")},click:function(e){window.location.href=e.media.currentSrc}}]}),e.extend(MediaElementPlayer.prototype,{buildcontextmenu:function(t,i,n,s){t.contextMenu=e('<div class="mejs-contextmenu"></div>').appendTo(e("body")).hide(),t.container.bind("contextmenu",function(e){return t.isContextMenuEnabled?(e.preventDefault(),t.renderContextMenu(e.clientX-1,e.clientY-1),!1):void 0}),t.container.bind("click",function(){t.contextMenu.hide()}),t.contextMenu.bind("mouseleave",function(){t.startContextMenuTimer()})},cleancontextmenu:function(e){e.contextMenu.remove()},isContextMenuEnabled:!0,enableContextMenu:function(){this.isContextMenuEnabled=!0},disableContextMenu:function(){this.isContextMenuEnabled=!1},contextMenuTimeout:null,startContextMenuTimer:function(){var e=this;e.killContextMenuTimer(),e.contextMenuTimer=setTimeout(function(){e.hideContextMenu(),e.killContextMenuTimer()},750)},killContextMenuTimer:function(){var e=this.contextMenuTimer;null!=e&&(clearTimeout(e),delete e,e=null)},hideContextMenu:function(){this.contextMenu.hide()},renderContextMenu:function(t,i){for(var n=this,s="",a=n.options.contextMenuItems,o=0,r=a.length;r>o;o++)if(a[o].isSeparator)s+='<div class="mejs-contextmenu-separator"></div>';else{var l=a[o].render(n);null!=l&&(s+='<div class="mejs-contextmenu-item" data-itemindex="'+o+'" id="element-'+1e6*Math.random()+'">'+l+"</div>")}n.contextMenu.empty().append(e(s)).css({top:i,left:t}).show(),n.contextMenu.find(".mejs-contextmenu-item").each(function(){var t=e(this),i=parseInt(t.data("itemindex"),10),s=n.options.contextMenuItems[i];"undefined"!=typeof s.show&&s.show(t,n),t.click(function(){"undefined"!=typeof s.click&&s.click(n),n.contextMenu.hide()})}),setTimeout(function(){n.killControlsTimer("rev3")},100)}})}(mejs.$),function(e){e.extend(mejs.MepDefaults,{skipBackInterval:30,skipBackText:mejs.i18n.t("Skip back %1 seconds")}),e.extend(MediaElementPlayer.prototype,{buildskipback:function(t,i,n,s){var a=this,o=a.options.skipBackText.replace("%1",a.options.skipBackInterval);e('<div class="mejs-button mejs-skip-back-button"><button type="button" aria-controls="'+a.id+'" title="'+o+'" aria-label="'+o+'">'+a.options.skipBackInterval+"</button></div>").appendTo(i).click(function(){s.setCurrentTime(Math.max(s.currentTime-a.options.skipBackInterval,0)),e(this).find("button").blur()})}})}(mejs.$),function(e){e.extend(mejs.MepDefaults,{postrollCloseText:mejs.i18n.t("Close")}),e.extend(MediaElementPlayer.prototype,{buildpostroll:function(t,i,n,s){var a=this,o=a.container.find('link[rel="postroll"]').attr("href");"undefined"!=typeof o&&(t.postroll=e('<div class="mejs-postroll-layer mejs-layer"><a class="mejs-postroll-close" onclick="$(this).parent().hide();return false;">'+a.options.postrollCloseText+'</a><div class="mejs-postroll-layer-content"></div></div>').prependTo(n).hide(),a.media.addEventListener("ended",function(i){e.ajax({dataType:"html",url:o,success:function(e,t){n.find(".mejs-postroll-layer-content").html(e)}}),t.postroll.show()},!1))}})}(mejs.$);var migModal=function(){function e(e,t,i,r){var e=$(e),l=$(".modal:visible");console.log(o);var d=r?r:"cBtnYes";return l.length?(e.data("parent",l),l.hide()):(a.css({paddingRight:s(),top:-$(document).scrollTop()}).addClass("backstage"),o.addClass("visible").css({opacity:0}).animate({opacity:1},500),n()),t&&i&&(e.find("[data-message]").text(t),e.find("#cBtnYes").attr("onclick",'MigAjax.request(this,{eventTarget:"'+d+'", eventArgument:"'+i+'"}); return false;')),e.show().css({marginTop:-300}).animate({marginTop:0}),!1}function t(e,t){var e=$(e);$.get(t,function(t,i){null!=t&&e.find(".modal-content").html(t)})}function i(){var e=$(".backdrop .modal"),t=e.filter(":visible").data("parent");t?(e.hide(),t.show()):($("body, html").css({paddingRight:""}).removeClass("backstage").animate({scrollTop:Math.abs(parseInt(a.css("top")))},0),o.animate({opacity:0},200,function(){$(this).removeClass("visible"),e.hide(),$("body").trigger("closeModal")}))}function n(){history.pushState("jibberish",null,null),window.onpopstate=function(){i()}}function s(){var e=$(window).width();$("body").css({overflow:"hidden"});var t=$(window).outerWidth();return $("body").css({overflow:""}),t-e}$(document).on("click",".modal-link",function(i){i.stopPropagation();var n=$(this).attr("href")||$(this).data("href");return e(n),$(this).data("handler")&&t(n,$(this).data("handler")),!1}),$(document).on("click",".modal-close-btn",function(e){i()}),$(document).on("click",".backdrop",function(e){$(e.target).is(this)&&i()});var a=$("body"),o=$(".backdrop");return{show:e,close:i}}(),migAlert=function(){function e(e,i,n){t();var i=i||"info",s=$('<div class="alert '+i+'"> <p class="alert-message">'+e+'</p> <button class="alert-close-btn button" type="button"><i class="icon-close"></i></button></div>');s.appendTo("body"),s.css({right:-s.width()}).animate({right:0},300),n>0&&setTimeout(function(){t(s)},n)}function t(e){var e=e||$(".alert");e.animate({marginTop:60,opacity:0},100,function(){e.hide()})}return $(document).on("click",".alert-close-btn",function(){var e=$(this).closest(".alert");t(e)}),{show:e}}();!function(e){var t={width:200,height:200,type:"image",quantity:1,sort:!0,move:"copy",crop:!1,array:[]},i={init:function(i){var n=this;n.dropperContainer=e(i),n.settings=e.extend({},t,n.dropperContainer.data()),n.hidden=n.dropperContainer.find(".dropper-hidden"),n.droppers=n.dropperContainer.find(".dropper"),n.initExistDropper(n.droppers),"multiple"!=n.settings.quantity?n.createDropper(n.settings.quantity-n.droppers.length):n.createDropper(),n.settings.sort&&n.initSorting(),n.fillHidden()},initSorting:function(){var e=this;e.dropperContainer.sortable({items:'.dropper[data-dropped="true"]',start:function(t,i){var n=i.item;e.setDroppableSize(i.placeholder),e.initDroppers(n,e.droppers)},stop:function(){e.fillHidden()}}).attr("data-sort",!0)},initDroppers:function(t,i){var n=this,s=e('.dropper[data-type="'+t.data("asset").type+'"],  .dropper[data-type="file"]').not(i);s.droppable({disabled:!1}),s.droppable({addClasses:!1,activeClass:"active",hoverClass:"hover",drop:function(){e(this).trigger("drop",t.data("asset")),"cut"==n.settings.move&&n.removeAsset(t)},deactivate:function(){e(this).droppable({disabled:!0})}})},createDropper:function(t){var i=this,n=1;void 0!=t&&(n=t);for(var s=0;n>s;s++){var a=e('<div class="dropper"></div>').appendTo(i.dropperContainer);i.initDropper(a)}i.droppers=i.dropperContainer.find(".dropper")},initDropper:function(t){var i=this;t.attr("data-type",i.settings.type).on("drop",function(t,n){i.dropAsset(e(this),n)}),i.setDroppableSize(t)},initExistDropper:function(t){var i=this;t.each(function(){var t=e(this),n={id:t.attr("data-id"),type:t.attr("data-type")||i.settings.type,image:t.find(".dropped-image").attr("src"),name:t.find(".dropped-name").text(),format:t.find(".dropped-format").text()};t.data({dropped:!0,id:n.id,asset:n}).removeAttr("data-id").attr("data-dropped",!0),i.initDropper(t),i.initRemoveBtn(t)})},initRemoveBtn:function(e){var t=this,i=e.find(".remove-dropped-btn");i.click(function(i){t.removeAsset(e)})},initEditBtn:function(t,i){e("<button/>",{"data-href":"#modal-template","data-handler":"/AdminTemplateHandler.handler?referenceId="+i.id,addClass:"hollow-btn button mig-edit-template modal-link",type:"button",text:"Edit template"}).appendTo(t.find(".dropped-overlay"))},setDroppableSize:function(e){var t=this;e.css({width:t.settings.width,height:t.settings.height})},dropAsset:function(t,i){var n=this;t.data("dropped")?n.removeDropperContent(t):"multiple"==n.settings.quantity&&n.createDropper();var s=e('<div class="dropped-asset"><div class="dropped-overlay"><button type="button" class="button remove-dropped-btn"><i class="icon-close"></i></button></div></div>');i.image&&e("<img/>",{src:i.image,addClass:"dropped-image"}).appendTo(s),i.format&&e("<span/>",{text:i.format,addClass:"dropped-format"}).appendTo(s),i.name&&e("<p/>",{text:i.name,addClass:"dropped-name"}).appendTo(s.find(".dropped-overlay")),"template"==i.type&&(e("<p/>",{text:"Template #"+i.id,addClass:"dropped-name"}).appendTo(s.find(".dropped-overlay")),n.initEditBtn(s,i)),t.attr("data-dropped",!0).data({dropped:!0,id:i.id,asset:i}).append(s),n.initRemoveBtn(t),n.fillHidden()},removeAsset:function(e){var t=this;"multiple"==t.settings.quantity?t.removeDropper(e):t.removeDropperContent(e)},removeDropper:function(e){var t=this;e.remove(),t.fillHidden()},removeDropperContent:function(e){var t=this;e.find(".dropped-asset").remove(),e.removeData("dropped id asset").removeAttr("data-dropped"),t.dropperContainer.sortable("destroy"),t.initSorting(),t.fillHidden()},fillHidden:function(){var t=this;t.droppers=t.dropperContainer.find(".dropper"),t.settings.array=[],t.droppers.each(function(){var i=e(this).data("id");void 0!=i&&t.settings.array.push(i)}),t.hidden.val(t.settings.array)}};e.fn.migDropper=function(t){return i[t]?i[t].apply(this,Array.prototype.slice.call(arguments,1)):"object"!=typeof t&&t?void e.error("Method "+t+" does not exist"):this.each(function(){var t=Object.create(i);t.init(this),e.data(this,"migDropper",t)})},e(".dropper-container").migDropper()}(jQuery);var templateModule=function(){$(document).on("click",".mig-edit-template",function(){var e=$(this).attr("data-handler");$.get(e,function(t,i){null!=t&&($("#modal-template .modal-content").html(t),$("#modal-template .modal-save-btn").attr("onclick",'MigAjax.request(this, { url:"'+e+'"}); return false;'),$("#modal-template .dropper-container").migDropper())})}),$("body").on("closeModal",function(){$("#modal-template .modal-content").empty()})}(),mceuImageModule=function(){var e;$(document).on("click",'.mce-btn[aria-label="Insert/edit image"]',function(){e=$(this).closest(".mce-tinymce").next("textarea").data("handler")});var t=function(t,i){e?(i.image=i.image.substring(0,i.image.indexOf("settings-")),t.val(i.image+"settings-"+e)):t.val(i.image)};return{dropAssetInInput:t}}();!function(e){var t={cells:1,pagination:!1,dotted:!1,touch:!1,arrows:!0,duration:300,carousel:!0,autoslide:!1,animate:!1},i={init:function(i,n){var s=this;s.element=e(i),s.settings=e.extend({},t,s.element.data(),n),s.ribbon=s.createWrapper("slider-ribbon"),s.slider=s.createWrapper("slider-content"),s.cell=s.ribbon.children("div"),s.shiftWidth=s.slider.width()+parseInt(s.cell.css("padding-left"))+parseInt(s.cell.css("padding-right")),s.slidesAmount=Math.ceil(s.cell.length/s.settings.cells),s.slides=s.divideSlides().width(s.shiftWidth),s.steps=0,s.isAnimated=!1,s.setup()},setup:function(){var t=this;e(window).resize(function(e){t.resize()}),t.settings.pagination&&t.initPagination(),t.settings.dotted&&t.initDots(),t.settings.touch&&t.slides.length>1&&(t.slider.on("swipeleft",function(){t.disableAutoslide(),t.moveSlideNext()}),t.slider.on("swiperight",function(){t.disableAutoslide(),t.moveSlidePrev()})),t.settings.arrows&&(t.slideNextBtn=e("<button/>",{addClass:"slider-next-btn",type:"button","data-icon":">"}),t.slidePrevBtn=e("<button/>",{addClass:"slider-prev-btn",type:"button","data-icon":"<"}),t.slides.length>1&&e('<div class="slider-control"></div>').append(t.slidePrevBtn,t.slideNextBtn).insertAfter(t.slider)),t.settings.dotted&&t.dotsBtn.first().trigger("click"),t.settings.arrows&&(t.slidePrevBtn.click(function(e){t.disableAutoslide(),t.moveSlidePrev()}),t.slideNextBtn.click(function(e){t.disableAutoslide(),t.moveSlideNext()})),0==t.settings.carousel&&t.settings.arrows&&(t.slidePrevBtn.prop("disabled",!0),t.slider.off("swiperight")),t.settings.autoslide!==!1&&(t.autoSlide=setInterval(function(){t.settings.carousel?t.moveSlideNext():t.steps!==t.slidesAmount-1?t.moveSlideNext():(t.ribbon.stop().animate({left:0},t.settings.duration),t.steps=0,t.makeSlideActive(t.steps),t.settings.arrows&&t.slidePrevBtn.prop("disabled",!0),t.settings.arrows&&t.slideNextBtn.prop("disabled",!1))},t.settings.autoslide)),t.makeSlideActive(0)},resize:function(){var e=this;e.shiftWidth=e.slider.width()+parseInt(e.cell.css("padding-left"))+parseInt(e.cell.css("padding-right")),e.ribbon.find(".slide").width(e.shiftWidth),e.goToSlide(e.activeSlide.index())},initDots:function(){var t=this;t.dots=e("<ul/>",{addClass:"slider-dots"}).appendTo(t.element);for(var i=0;i<t.slidesAmount;i++)t.dots.append('<li><button type="button" data-slide="'+i+'"></button></li>');t.dotsBtn=t.dots.find("button"),t.dotsBtn.click(function(i){t.disableAutoslide(),"fade"==t.settings.animate?t.goToSlide(e(this).data("slide"),t.settings.duration,!0):t.goToSlide(e(this).data("slide"),t.settings.duration),e(this).closest("ul").find("button").removeClass("active"),e(this).addClass("active")}),t.element.bind("changeSlide",function(i){e(t.dotsBtn).removeClass("active").eq(i.number).addClass("active")})},initPagination:function(){var t=this;t.paginator=e("<ul/>",{addClass:"slider-paginator"}).appendTo(t.element),t.paginator.append("<p><span>1</span>/"+t.slidesAmount+"</p>"),t.element.bind("changeSlide",function(e){t.paginator.find("span").html(e.number+1)})},moveSlideNext:function(){var e=this;if(!e.isAnimated)if(e.steps++,e.isAnimated=!0,e.steps===e.slidesAmount){var t=parseInt(e.ribbon.css("left")),i=e.slides.first().clone().addClass("temporary");i.appendTo(e.ribbon),e.makeSlideActive(0),e.ribbon.stop().animate({left:t-e.shiftWidth},e.settings.duration,function(){e.ribbon.css({left:0}),i.detach(),e.steps=0,e.isAnimated=!1})}else{e.makeSlideActive(e.steps);var t=parseInt(e.ribbon.css("left"));e.ribbon.stop().animate({left:t-e.shiftWidth},e.settings.duration,function(){e.isAnimated=!1}),e.steps===e.slidesAmount-1&&0==e.settings.carousel&&(e.settings.arrows&&e.slideNextBtn.prop("disabled",!0),e.slider.off("swipeleft")),e.settings.arrows&&e.slidePrevBtn.prop("disabled",!1),e.slider.on("swiperight",function(){e.moveSlidePrev()})}},moveSlidePrev:function(){var e=this;if(!e.isAnimated){if(e.isAnimated=!0,0===e.steps){var t=e.slides.first().clone().addClass("temporary");t.appendTo(e.ribbon),e.makeSlideActive(e.slidesAmount-1),e.ribbon.css({left:-(e.shiftWidth*e.slidesAmount)});var i=parseInt(e.ribbon.css("left"));e.ribbon.stop().animate({left:i+e.shiftWidth},e.settings.duration,function(){t.detach(),e.steps=e.slidesAmount-1,e.isAnimated=!1})}else{e.makeSlideActive(e.steps-1);var i=parseInt(e.ribbon.css("left"));e.ribbon.stop().animate({left:i+e.shiftWidth},e.settings.duration,function(){e.isAnimated=!1}),1===e.steps&&0==e.settings.carousel&&(e.settings.arrows&&e.slidePrevBtn.prop("disabled",!0),e.slider.off("swiperight")),e.settings.arrows&&e.slideNextBtn.prop("disabled",!1),e.slider.on("swipeleft",function(){e.moveSlideNext()})}e.steps--}},goToSlide:function(t,i,n){var s=this.hasOwnProperty("element")?this:e(this).data().migSlider;if(n){var a=s.ribbon.clone();a.insertBefore(s.ribbon).css({position:"absolute",top:0}),s.ribbon.css({opacity:0}).animate({opacity:1},i,function(){a.remove()})}s.ribbon.stop(!0,!0).animate({left:-s.shiftWidth*t},n?0:i),s.steps=t,s.makeSlideActive(t)},disableAutoslide:function(){var t;t=this.hasOwnProperty("element")?this:e(this).data().migSlider,clearInterval(t.autoSlide)},divideSlides:function(){for(var e=this,t=0;t<e.cell.length;t+=e.settings.cells)e.cell.slice(t,t+e.settings.cells).wrapAll("<div class='slide'></div>");return e.ribbon.find(".slide")},createWrapper:function(e){var t=this;return t.element.wrapInner('<div class="'+e+'"></div>'),t.element.find("."+e)},makeSlideActive:function(e){var t=this;t.activeSlide=t.slides.eq(e).addClass("active").siblings().removeClass("active").end(),t.element.trigger({type:"changeSlide",number:e})},reinit:function(t){var i=e(this);i.length&&(i.data("cells")&&i.find(".slide > *").unwrap(),i.find(".slider-control").remove(),i.find(".slider-content").replaceWith(i.find(".slider-ribbon").contents()),t&&(t=e.parseJSON(t),e.each(t,function(e,t){i.data(e,t)})),i.migSlider())}};e.fn.migSlider=function(t){return i[t]?i[t].apply(this,Array.prototype.slice.call(arguments,1)):"object"!=typeof t&&t?void e.error("Method "+t+" does not exist"):this.each(function(){var n=Object.create(i);n.init(this,t),e.data(this,"migSlider",n)})}}(jQuery),$(function(){$(".slider-wrapper").migSlider({duration:500,carousel:!1})}),function(e){var t={init:function(t){var i=this;i.tagHidden=e(t),i.tagInput=e('<input type="text" class="tag-input">'),i.tagItem=e('<li class="tag-item"><p class="tag-name"></p><button type="button" class="tag-remove-btn"><i class="icon-tab-close"></i></button></li>'),
i.tagList=e('<ul class="tag-list"></ul>'),i.setup()},setup:function(){var t=this;t.tagHidden.css({margin:0,padding:0,visibility:"hidden",height:0,border:"none",position:"absolute"}),t.tagInput.insertAfter(t.tagHidden),t.tagList.insertAfter(t.tagInput),t.tagHidden.val()?t.arrTags=t.tagHidden.val().split(","):t.arrTags=[];for(var i=0;i<t.arrTags.length;i++)t.arrTags[i].match(/^\s*$/)||t.createTag(t.arrTags[i]);t.tagInput.on("keypress",function(i){return i.stopPropagation(),13===i.keyCode&&i.preventDefault(),e(this).val().match(/^\s*$/)||44!==i.keyCode&&13!==i.keyCode?void 0:(t.hiddenTagsArr(e(this).val()),t.createTag(e(this).val()),!1)})},hiddenTagsArr:function(e){var t=this;t.arrTags.push(e),t.tagHidden.val(t.arrTags)},createTag:function(e){var t=this;t.tagList=t.tagInput.next(".tag-list");var i=t.tagItem.clone();i.find(".tag-name").html(e),i.appendTo(t.tagList),i.find(".tag-remove-btn").click(function(e){e.preventDefault(),t.removeTag(this)}),t.tagInput.val("")},removeTag:function(t){var i=this,n=e(t).closest(".tag-item"),s=n.index();n.remove(),i.arrTags.splice(s,1),i.tagHidden.val(i.arrTags)}};e.fn.migTaginput=function(i){return t[i]?t[i].apply(this,Array.prototype.slice.call(arguments,1)):"object"!=typeof i&&i?void e.error("Method "+i+" does not exist"):this.each(function(){var i=Object.create(t);i.init(this),e.data(this,"migTaginput",i)})}}(jQuery),$(function(){$(".tag-input-hidden").migTaginput()});var migTree=function(){function e(e){$(e).addClass("active").parent("div").next().slideDown(400)}function t(e){$(e).removeClass("active").parent("div").next().slideUp(400)}function i(){$(".tree-sub, .tree-structure").sortable({placeholder:"tree-placeholder",items:"> .tree-item",start:function(e,i){t(i.item.find(".tree-trigger"))},stop:function(){n()}})}function n(){var e=[];$(".tree-structure, .tree-sub").each(function(t,i){var n={},s=$(this).closest(".tree-item").attr("id");n.parent=s,n.children=[],$(this).children(".tree-item").each(function(e,t){n.children.push($(this).attr("id"))}),e.push(n)}),$(".tree-hidden").val(JSON.stringify(e))}$(".tree-structure");$("body").on("click",".tree-trigger",function(i){i.preventDefault(),$(this).is(".active")?t(this):e(this)}),$("body").on("click",".expand-btn[data-tree]",function(){var t=$($(this).data("tree")),i=t.find(".tree-trigger:not(.active)");e(i)}),$("body").on("click",".compress-btn[data-tree]",function(){var e=$($(this).data("tree")),i=e.find(".tree-trigger.active");t(i)}),$("body").on("click",".reorder-btn[data-tree]",function(){var e=$(this);e.prop("disabled",!0).next(".save-btn").fadeIn(100),$(this).next(".save-btn").click(function(t){e.prop("disabled",!1),$(this).fadeOut(100),$(".tree-sub").sortable("destroy")}),i()}),$("body").on("click",".mig-request-link",function(){var e=this,t=$(e).attr("rel");return MigAjax.request(e,{eventArgument:t}),!1})}(),migReorder=function(){function e(e,i){e.sortable({placeholder:"tr-placeholder",items:"> tr",stop:function(){t(e,i)}})}function t(e,t){var i=e.children("tr"),n=[];i.each(function(e,t){n.push($(this).attr("id"))}),$('input.order-hidden[name*="'+t+'"]').val(n)}$(document).on("click",".reorder-btn[data-order]",function(){var t=$(this),i=t.data("order"),n=$(i).find("tbody");t.prop("disabled",!0).next(".save-btn").fadeIn(100),$(this).next(".save-btn").click(function(e){t.prop("disabled",!1),$(this).fadeOut(100),n.sortable("destroy")}),e(n,i)})}(),chart={chartsList:[]};Chart.defaults.global.defaultFontSize=16;var chartObj={type:"line",name:"Orders",chartTitle:"Orders22",datasets:[{lineTension:0,label:"May",data:[1,3,20,13,50,8],backgroundColor:"rgba(50, 156, 54, 0.1)",borderColor:"rgba(50, 156, 54, 0.9)",borderWidth:3},{lineTension:0,label:"June",data:[10,30,200,130,500,80],backgroundColor:"rgba(50, 156, 54, 0.1)",borderColor:"rgba(50, 156, 54, 0.9)",borderWidth:3}],labels:["May","June","July","August","September","October"],chartWidth:6,showAxis:!0};chartObj=JSON.stringify(chartObj),$(document).delegate(".beginRange","change",function(e){e.preventDefault(),$(this).siblings(".endRange").datepicker("option","minDate",$(this).datepicker().val()),$(".endRange").datepicker("option","maxDate","+30Y")}),$(document).delegate(".endRange","change",function(e){e.preventDefault(),$(this).siblings(".beginRange").datepicker("option","maxDate",$(this).datepicker().val()),$(".beginRange").datepicker("option","minDate","-30Y")}),$(document).delegate(".chart .tabs a","click",function(e){e.preventDefault(),MigAjax.request(this,{eventTarget:"cDrp"+$(this).closest(".chart").find("canvas").data("chartname"),eventArgument:$(this).attr("href")})}),$(document).on("click",".changeFilter",function(e){e.preventDefault(),$(".error").remove();var t={name:$(this).closest(".chart").find("canvas").data("chartname"),filterDate:$(this).closest(".filters").find(".beginRange").val()+" - "+$(this).closest(".filters").find(".endRange").val()};0==$(this).closest(".filters").find(".beginRange").val().length||0==$(this).closest(".filters").find(".endRange").val().length?$(this).closest(".filters").append('<span class="error">Please, fill all fields</span>'):($(".error").remove(),MigAjax.request(this,{eventTarget:"cBtn"+t.name,eventArgument:t.filterDate}))}),$("#charts-category").length&&createChart(chartObj);var productsOverviewModule=function(){function e(e){$(".product-accordion-link.active").length&&t($(".product-accordion-link.active")),e.addClass("active"),e.find("i").toggleClass("icon-angle-down").toggleClass("icon-angle-up"),e.hasClass("loaded")||(e.data("stock").insertAfter(e.closest("tr")),e.addClass("loaded")),e.closest("tr").find("td[rowspan]").attr("rowspan",e.data("quantity")+1),e.data("stock").show()}function t(e){e.removeClass("active"),e.closest("tr").find("td[rowspan]").attr("rowspan",""),e.find("i").toggleClass("icon-angle-down").toggleClass("icon-angle-up"),e.data("stock").hide()}$(".products-overview");$(".product-accordion-link").click(function(i){i.preventDefault();var n=$(this);n.hasClass("loaded")?n.hasClass("active")?t(n):e(n):$.getJSON("/ProductsOverviewHandler.handler",{productId:n.attr("data-value")},function(i){var s=$(i.html),a=i.count;n.data("stock",s),n.data("quantity",a),n.hasClass("active")?t(n):e(n)})})}();!function(e){var t={init:function(t,i){var n=this;this.rootElem=e(t),this.priceTableBody=this.rootElem.find("tbody.price"),this.weightTableBody=this.rootElem.find("tbody.weight"),this.countTableBody=this.rootElem.find("tbody.count"),this.hiddenInput=this.rootElem.find(".shipp-hidden"),i=0!==this.hiddenInput.val().length?e.parseJSON(this.hiddenInput.val()):i,i&&i.weight&&i.weight.length>0&&n.buildTables("weight",i.weight),i&&i.price&&i.price.length>0&&n.buildTables("price",i.price),i&&i.count&&i.count.length>0&&n.buildTables("count",i.count),i&&i.promotions&&i.promotions.length>0&&n.buildTables("promotions",i.promotions),n.bindEvents()},buildTables:function(t,i){var n=e(this.rootElem).find("."+t);i.forEach(function(t){var i=e("<tr/>"),s=e('<td><input type="text" data-shipping="from"  class="mig-form-control numeric" value="'+t.from+'" /></td>'),a=e('<td><input type="text" data-shipping="to" class="mig-form-control numeric" value="'+t.to+'" /></td>'),o=e('<td><input type="text" data-shipping="price" class="mig-form-control numeric" value="'+t.price+'"/></td>'),r=e('<td><input class="button blue-btn ship-delete" type="submit" value="Delete" /></td>');s.appendTo(i),a.appendTo(i),o.appendTo(i),r.appendTo(i),i.appendTo(n)})},bindEvents:function(){var t=this;e("body").on("click",".ship-delete",function(){e(this).parents("tr").remove()}),e("body").on("keyup",".numeric",function(){e(this).val(e(this).val().replace(/[^\d\.]/g,""))}),t.rootElem.find(".add-shipp").click(function(){var i=e('<tr><td><input type="text" data-shipping="from" class="mig-form-control numeric" /></td><td><input type="text" data-shipping="to" class="mig-form-control numeric" /></td><td><input type="text" data-shipping="price" class="mig-form-control numeric" /></td><td><input class="button blue-btn ship-delete" type="submit" value="Delete" /></td></tr>');i.appendTo(t.rootElem.find("tbody.active"))}),t.rootElem.find(".save-shipp").click(function(){t.parseAndSave()})},parseAndSave:function(){var t=this.rootElem.find("tbody.active"),i={};i.error=!1,t.each(function(t){var n=e(this).data("type"),s=e(this).find("tr");i[n]=[],s.each(function(t){var a={};e(this).find("td").each(function(t){var i=e(this).find('input[type="text"]'),n=e(i).data("shipping");1===i.length&&(a[n]=e(i).val())}),t!=s.length-1&&+a.from>+a.to&&(i.error=!0),i[n].push(a)})}),this.hiddenInput.val(JSON.stringify(i))}};e.fn.shipping=function(i){return this.each(function(){var n=Object.create(t);n.init(this,i),e(this).data("shipping",n)})}}(jQuery),$(function(){$("body").on("click",".mig-shipping-name",function(){var e=$(this).html(),t=$(this).data("countrycode"),i=$("<tr></tr>"),n=$("#country-settings tbody"),s=$("<select>",{html:$('<option value="1">Domestic</option><option value="2">International</option>')});$('<td  class="mig-shipping-name mig-shipp-search-name" data-countrycode="'+t+'"></td>').append(e).appendTo(i),$('<td class="migDropdown"></td>').append(s).appendTo(i),$("<td></td>").append('<a class="mig-inset-btn delete  ship-delete" href="test4.html" name="Delete row" title="Delete"></a>').appendTo(i),$(s).migDropdown(),i.appendTo(n),parseCountriesData()}),$("body").on("click",".ship-delete",function(e){e.preventDefault();var t,i=$(this).parents("tr"),n=i.find(".mig-country-name"),s=n.data("countrycode"),a=n.html();i.remove(),t=$("<tr></tr>").append($('<td class="mig-shipping-name mig-shipp-search-name" data-countrycode="'+s+'" >'+a+"</td>")),t.appendTo($("#country-list").find("tbody")),parseCountriesData()}),$("#country-settings").on("change","select",function(){parseCountriesData()}),parseCountriesData()}),function(e){var t={init:function(t){var i=e(t).closest(".widget");this.items=i.find("tbody .mig-shipp-search-name"),this.bindEvents(t)},bindEvents:function(t){var i=this;e(t).on("keyup",function(){var t=e(this).val();return 0===t.length?i.items.parent().show():void i.items.each(function(i){var n=e(this).html().toLowerCase();-1===n.indexOf(t.toLowerCase())?e(this).parent().hide():e(this).parent().show()})})}};e.fn.shippCountriesSearch=function(){return this.each(function(){var i=Object.create(t);i.init(this),e(this).data("shippCountriesSearch",i)})}}(jQuery),$(function(){$(".mig-countries-search").shippCountriesSearch()}),function(e){var t={init:function(t){var i=this;i.elemParent=e(t).closest(".mig-multicheck-block"),i.items=i.elemParent.find("li"),i.no_result=i.elemParent.find(".mig-no-result"),i.no_result_text=i.no_result.find(".mig-promo-phrase"),i.bindEvents(t)},bindEvents:function(t){var i=this;e(t).on("keyup",function(){var t=e(this).val(),n=!1;return 0===t.length?(i.no_result.hide(),i.items.show()):(i.items.each(function(i){var s=e(this).find("label").text().toLowerCase();-1===s.indexOf(t.toLowerCase())?e(this).hide():(n=!0,e(this).show())}),void(n===!1?(i.no_result_text.text(t),i.no_result.show()):i.no_result.hide()))})}};e.fn.promoSearch=function(){return this.each(function(){var i=Object.create(t);i.init(this),e(this).data("promoSearch",i)})}}(jQuery);var itemListModule=function(){function e(e){$.get(e,function(e){var i=JSON.parse(e);jQuery.each(i,function(e){t(i[e],e)})}).done(function(){$(".mig-multicheck-block").each(function(){n($(this))}),$(".mig-promo-search").promoSearch()})}function t(e,t){jQuery.each(e,function(e,n){var s=n.code||n.id,a=$("<input>",{type:"checkbox",value:n.id,id:t+"Id-"+s,checked:n.active}),o=$("<label/>",{text:n.name,"for":t+"Id-"+s});n.parent_id&&i(t);var r=$("<li/>",{"data-id":n.id,"data-parentid":n.parent_id}).append(a,o),l=".mig-mc-"+t;$(l.toString()).find("ul").append(r)})}function i(e){var t=".mig-mc-"+e,i=$(t).find("li"),n=20;i.each(function(e){var t=$(this).prev(),s=$(this).find("label");if(t.length>0){if(-1===$(this).data("parentid"))return!0;if(t.data("id")===$(this).data("parentid"))return s.css("padding-left",parseInt(t.find("label").css("padding-left"))+n+"px");if(t.data("parentid")===$(this).data("parentid"))return s.css("padding-left",t.find("label").css("padding-left"));var a=i.parent().find('li[data-id="'+$(this).data("parentid")+'"]').find("label");s.css("padding-left",parseInt(a.css("padding-left"))+n+"px")}})}function n(e){var t=[];e.find("input[type=checkbox]:checked").each(function(){var e=$(this).val();item={},item.id=e,t.push(item)}),jsonString=JSON.stringify(t),e.find("input[type=hidden]").val(jsonString)}return $(function(){$(".mig-multicheck-block").on("click","input[type=checkbox]",function(){var e=$(this).closest(".mig-multicheck-block");n(e)}),$(".mig-multicheck-block").on("click",".mig-deselect",function(){var e=$(this).closest(".mig-multicheck-block");e.find("input[type=checkbox]:checked").prop("checked",!1),e.find("input[type=hidden]").val("")})}),{getItemList:e}}(),mediaPlayerController=function(){function e(e){var n=$(e);n.mediaPlayerOptions={features:["playpause","progress","fullscreen"],startVolume:.5,iPadUseNativeControls:!0,iPhoneUseNativeControls:!0,AndroidUseNativeControls:!0,usePluginFullScreen:!1,hasTrueNativeFullScreen:!0,pluginType:"native"},n.mediaPlayerOptions.success=function(e,t){var n=$(e).closest(".modal");n.find(".modal-close-btn").bind("click.mediaPlayer",function(t){i(e)}),$(e).closest(".backdrop").bind("click.mediaPlayer",function(t){$(t.target).closest(".modal").length||i(e)})};var s=.5,a=document.createElement("img");a.src=n.attr("poster");var o=setInterval(function(){if(a.naturalHeight>0){s=a.naturalHeight/a.naturalWidth;var e=$(n).closest(".asset-view").height(),i=$(n).closest(".asset-view").width();$(window).height()-110<e&&(e=$(window).height()-150),n.height(e).width(i),t(n),MediaElementPlayer(n).setPlayerSize(i,e),clearInterval(o)}},1);$(window).on("resize",function(){var e=$(n).closest(".asset-view").height(),t=$(n).closest(".asset-view").width();$(window).height()-110<e&&(e=$(window).height()-150),n.height(e).width(t),MediaElementPlayer(n).setPlayerSize(t,e)})}function t(e){var t=new MediaElementPlayer(e,e.mediaPlayerOptions),i=e.attr("poster");return $(e).closest(".mejs-container").find(".mejs-poster").css({"background-image":'url("'+i+'")'}),t}function i(e){e.pause(),e.setCurrentTime(0)}function n(e){MediaElementPlayer(e).play()}function s(e){MediaElementPlayer(e).pause()}return $(document).on("click",".modal-link.video-modal-link",function(t){e($($(this).attr("href")).find("video"))}),{init:e,play:n,pause:s}}(),migCropper=function(){function e(e){cropData.src=e;var t=JSON.stringify(cropData);$.get("/assetcrop.handler/",t).done(function(e){alert("Data Loaded: "+e)}).fail(function(){alert("fail")})}function t(e){cropData=e}$(document).on("click",".crop-btn[data-crop]",function(i){var n=$(this),s=$(n.data("crop")),a=[];a.src=s.attr("src"),s.Jcrop({onChange:t,setSelect:[0,100,100,0],trueSize:[s.prop("naturalWidth"),s.prop("naturalHeight")]});var o=$("<button/>",{text:"Save",addClass:"button save-btn"}).insertAfter(n);o.click(function(t){e(s.attr("src"))}),n.prop("disabled",!0)})}();!function(e){var t={init:function(t){var i=this;i.itemsList=e(t),i.items=i.itemsList.find(".mig-select-option"),i.container=e('<div class="mig-multi-select-container"><ul class="multi-select-choices"><li class="search-field"><input type="text" value="Choose a Country..." class="default" autocomplete="off"></li></ul><div class="multi-select-drop"></div></div>'),i.dropBlock=i.container.find(".multi-select-drop"),i.choicesList=i.container.find(".multi-select-choices"),i.searchField=i.container.find(".search-field"),i.searchFieldInput=i.searchField.find("input"),i.message=e('<li><p class="message">No results match "<span></span>"</p></li>'),i.itemsObject=new Object,i.arrChoices=new Array,i.arrSelectedItemsId=new Array,i.arrVisibleItems=new Array,i.backspaceRemove=!0,i.setup()},setup:function(){var t=this;t.container.insertAfter(t.itemsList),t.itemsList.appendTo(t.dropBlock),t.message.appendTo(t.itemsList).hide();for(var i=0;i<t.items.length;i++)t.itemsObject[e(t.items[i]).find("[id]").attr("id")]=e(t.items[i]);t.selectedItemsArray(),t.bindEvents.click(t),t.bindEvents.keypress(t),t.bindEvents.hover(t),t.triggerListeners();for(var i=0;i<t.arrSelectedItemsId.length;i++)t.createChoice(t.arrSelectedItemsId[i])},selectedItemsArray:function(){var t=this;t.arrSelectedItemsId=e.makeArray(t.itemsList.find("input").filter(":checked")).map(function(t){return e(t).attr("id")})},visibleItemsArray:function(){var t=this;t.arrVisibleItems=e.makeArray(t.items.filter(":not(.checked)").filter(":visible"))},changeArray:function(t,i,n){switch(n){case"add":-1==e.inArray(t,i)&&i.push(t);break;case"remove":i.splice(i.indexOf(t),1)}},choicePrototype:function(t,i){this.choiceElement=e('<li class="search-choice"/>'),this.choiceName=e("<span/>",{html:i}).appendTo(this.choiceElement),this.choiceCloseBtn=e("<button/>",{addClass:"search-choice-close",type:"button",html:'<i class="icon-tab-close"></i>'}).attr("data-id",t).appendTo(this.choiceElement)},createChoice:function(t){var i=this,n=e(i.itemsObject[t].context).text(),s=new i.choicePrototype(t,n);s.choiceElement.insertBefore(i.searchField),s.choiceCloseBtn.click(function(t){i.removeChoice(e(this).attr("data-id"),s.choiceElement)}),e("#"+t).attr("checked",!0),i.itemsObject[t].addClass("checked").removeClass("hover"),i.dropEvents.closeDrop(i),i.refreshSearch(),i.changeArray(t,i.arrSelectedItemsId,"add"),i.changeArray(s.choiceElement,i.arrChoices,"add")},removeChoice:function(e,t){var i=this;i.itemsList.find("#"+e).attr("checked",!1),i.itemsObject[e].removeClass("checked"),i.refreshSearch(),i.changeArray(e,i.arrSelectedItemsId,"remove"),i.changeArray(t,i.arrChoices,"remove"),t.remove()},refreshSearch:function(){var e=this;e.searchFieldInput.val(""),e.items.show(),e.backspaceRemove=!0},changeHoverItem:function(t){var i=this;i.visibleItemsArray(),t<i.arrVisibleItems.length&&t>-1&&e(i.arrVisibleItems[t]).addClass("hover").siblings().removeClass("hover")},checkEmptyInput:function(e){var t=this;t.emptyInput=!1,(0===e.length||e.match(/^\s*$/))&&(t.emptyInput=!0)},emptySearchResult:function(){var e=this;e.items.filter(":visible").length?e.message.hide():e.message.show().find("span").text(e.searchFieldInput.val())},triggerListeners:function(){},bindEvents:{click:function(t){t.choicesList.click(function(e){t.dropEvents.openDrop(t),t.searchFieldInput.focus().val("")}),e(document).click(function(e){e.target.closest(".mig-multi-select-container")||e.target.closest(".search-choice")||(t.dropEvents.closeDrop(t),t.searchFieldInput.val(t.searchFieldInput.attr("value")))}),t.items.click(function(i){return e(this).hasClass("checked")?!1:void t.createChoice(e(this).find("[id]").attr("id"))})},keypress:function(t){function i(i){var n=0;for(var s in t.itemsObject){var a=e(t.itemsObject[s].context).text().toLowerCase();n++,-1===a.indexOf(i.toLowerCase())?t.itemsObject[s].hide():t.itemsObject[s].show(),t.changeHoverItem(0)}}t.searchFieldInput.on("keyup",function(n){var s=e(this).val(),a=0;switch(t.visibleItemsArray(),t.checkEmptyInput(s),t.itemsList.find(".hover").length||e(t.arrVisibleItems[a]).addClass("hover").siblings().removeClass("hover"),t.arrVisibleItems.filter(function(i){return e(i).hasClass("hover")&&(a=t.arrVisibleItems.indexOf(i)),i}),n.keyCode){case 38:if(a--,t.changeHoverItem(a),0>a&&(t.dropEvents.closeDrop(t),t.itemsList.find(".hover").removeClass("hover")),!e(t.container).is(".with-drop"))break;break;case 40:a++,!e(t.container).is(".with-drop")&&t.dropEvents.openDrop(t),t.changeHoverItem(a);break;case 13:t.itemsList.find(".hover").find("input").trigger("click");break;case 8:t.backspaceRemove&&t.arrChoices.length>0&&t.removeChoice(t.arrSelectedItemsId[t.arrSelectedItemsId.length-1],t.arrChoices[t.arrChoices.length-1]);default:if(!e(t.container).is(".with-drop")&&t.dropEvents.openDrop(t),t.backspaceRemove=!1,t.emptyInput){t.backspaceRemove=!0,t.items.show(),t.emptySearchResult();break}i(s),t.emptySearchResult()}})},hover:function(e){e.items.mouseenter(function(){e.visibleItemsArray(),e.changeHoverItem(e.arrVisibleItems.indexOf(this))}),e.container.mouseleave(function(){e.itemsList.find(".hover").removeClass("hover")})}},dropEvents:{openDrop:function(t){e(".mig-multi-select-container").removeClass("with-drop"),t.container.addClass("with-drop"),t.emptySearchResult(),t.container.trigger("openDrop")},closeDrop:function(e){e.container.removeClass("with-drop"),e.items.show(),e.emptySearchResult(),e.container.trigger("closeDrop")}}};e.fn.migMultiCheck=function(i){return t[i]?t[i].apply(this,Array.prototype.slice.call(arguments,1)):"object"!=typeof i&&i?void e.error("Method "+i+" does not exist"):this.each(function(){var i=Object.create(t);i.init(this),e.data(this,"migMultiCheck",i)})}}(jQuery),$(function(){$(".mig-multi-select").migMultiCheck()});var tabsModule=function(){function e(e){var t=e.attr("href"),i=e.closest("ul");i.find("a").removeClass("active"),e.addClass("active"),$(t).addClass("active").siblings().removeClass("active")}$(document).on("click",".tabs li a, .nav-tabs li a",function(){var t=$(this);return e(t),!1})}(),assetSelectionModule=function(){function e(){$(".asset-checkbox").prop("checked",!0),i()}function t(){$(".asset-checkbox").prop("checked",!1),i()}function i(){var e=$("#selection-btn"),t=$(".asset-checkbox:checked"),i=$("#selection-hidden");0==t.length?(e.text("Select all"),i.val("")):(e.text("Deselect all ("+t.length+")"),i.val(""),t.each(function(){i.val(i.val()+$(this).attr("id")+",")}))}$(document).on("click","#selection-btn",function(){var i=$(".asset-checkbox:checked");0==i.length?e():t()}),$(document).on("click",".asset-checkbox",function(){i()})}(),assetUploadModule=function(){$(document).on("click","#asset-upload-btn",function(){$(this).hide().next(".asset-upload-group").addClass("visible")}),$(document).on("change",".asset-upload-group input[type=file]",function(){$(this).val()&&$(".asset-upload-group").find("button.button").prop("disabled",!1)})}(),calendarModule=function(){$(function(){return $(".datepicker-form").length<1?!1:($('.datepicker-form > input[type="text"]').each(function(){$(this).datepicker({dateFormat:"dd-mm-yy",prevText:'<i class="icon-nav-left"></i>',nextText:'<i class="icon-nav-right"></i>',dayNamesMin:$.datepicker._defaults.dayNamesShort,firstDay:1,beforeShow:function(e,t){var i=e.getBoundingClientRect();setTimeout(function(){t.dpDiv.css({top:i.top,left:i.width+i.left+10})},0)}})}),void $("#ui-datepicker-div").draggable())})}(),editor=function(){$(document).on("click",".mce-container",function(){$(".mce-edit-area").find("iframe").contents().find("body").on("keypress",function(){tinyMCE.triggerSave()})})}();
//# sourceMappingURL=data:application/json;base64,
